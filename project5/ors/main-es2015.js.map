{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.html","./src/app/college/college-list.component.html","./src/app/college/college.component.html","./src/app/course/course-list.component.html","./src/app/course/course.component.html","./src/app/dashboard/dashboard.component.html","./src/app/faculty/faculty-list.component.html","./src/app/faculty/faculty.component.html","./src/app/foot/foot.component.html","./src/app/login/forgot-password.component.html","./src/app/login/login.component.html","./src/app/login/user-registration.component.html","./src/app/marksheet/get-marksheet.component.html","./src/app/marksheet/marksheet-list.component.html","./src/app/marksheet/marksheet.component.html","./src/app/marksheet/merit-list.component.html","./src/app/nav/nav.component.html","./src/app/page-not-found/page-not-found.component.html","./src/app/role/role-list.component.html","./src/app/role/role.component.html","./src/app/student/student-list.component.html","./src/app/student/student.component.html","./src/app/subject/subject-list.component.html","./src/app/subject/subject.component.html","./src/app/timetable/timetable-list.component.html","./src/app/timetable/timetable.component.html","./src/app/user/change-password.component.html","./src/app/user/my-profile.component.html","./src/app/user/user-list.component.html","./src/app/user/user.component.html","./src/app/welcome/welcome.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/base-list.component.ts","./src/app/base.component.ts","./src/app/college/college-list.component.ts","./src/app/college/college.component.css","./src/app/college/college.component.ts","./src/app/course/course-list.component.ts","./src/app/course/course.component.css","./src/app/course/course.component.ts","./src/app/dashboard/dashboard.component.css","./src/app/dashboard/dashboard.component.ts","./src/app/endpoint-service.service.ts","./src/app/faculty/faculty-list.component.ts","./src/app/faculty/faculty.component.css","./src/app/faculty/faculty.component.ts","./src/app/foot/foot.component.css","./src/app/foot/foot.component.ts","./src/app/http-service.service.ts","./src/app/login/forgot-password.component.ts","./src/app/login/login.component.css","./src/app/login/login.component.ts","./src/app/login/user-registration.component.ts","./src/app/marksheet/get-marksheet.component.ts","./src/app/marksheet/marksheet-list.component.ts","./src/app/marksheet/marksheet.component.css","./src/app/marksheet/marksheet.component.ts","./src/app/marksheet/merit-list.component.ts","./src/app/nav/nav.component.css","./src/app/nav/nav.component.ts","./src/app/page-not-found/page-not-found.component.ts","./src/app/role/role-list.component.ts","./src/app/role/role.component.css","./src/app/role/role.component.ts","./src/app/service-locator.service.ts","./src/app/student/student-list.component.ts","./src/app/student/student.component.css","./src/app/student/student.component.ts","./src/app/subject/subject-list.component.ts","./src/app/subject/subject.component.css","./src/app/subject/subject.component.ts","./src/app/timetable/timetable-list.component.ts","./src/app/timetable/timetable.component.css","./src/app/timetable/timetable.component.ts","./src/app/user/change-password.component.ts","./src/app/user/my-profile.component.ts","./src/app/user/user-list.component.ts","./src/app/user/user.component.css","./src/app/user/user.component.ts","./src/app/welcome/welcome.component.css","./src/app/welcome/welcome.component.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"\\n\\n<app-nav></app-nav>\\n<app-foot></app-foot>\\n\\n<router-outlet></router-outlet>\"","export default \"<body class=\\\"container-fluid text-center\\\">\\r\\n  <div class=\\\"content-wrapper\\\" style=\\\"background-image: url(./assets/list.jpg); background-repeat: no-repeat;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;width:100%;\\r\\n    height: 850px;\\\">\\r\\n    <div class=\\\"d-flex bg-primary text-white paddin \\\">\\r\\n        <h1 class=\\\"text-center container-fluid \\\">{{'College List'|translate}}</h1>\\r\\n      </div>\\r\\n      <div class=\\\"text-center row\\\">\\r\\n        <div class=\\\"col-2\\\"></div>\\r\\n        <form class=\\\"form-inline pt-3  \\\">\\r\\n          <div class=\\\"form-group  pr-3\\\">\\r\\n            <label for=\\\"name\\\" class=\\\"form-check-label pr-3 \\\">{{'College Name'|translate}} : </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter College Name'|translate}}\\\" name=\\\"firstName\\\"\\r\\n              [(ngModel)]=\\\"form.searchParams.name\\\" id=\\\"name\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group pr-3\\\">\\r\\n            <label for=\\\"city\\\" class=\\\"form-check-label pr-3 \\\">{{'City'|translate}} : </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"city\\\" id=\\\"city\\\" placeholder=\\\"{{'Enter College City'|translate}}\\\"\\r\\n              [(ngModel)]=\\\"form.searchParams.city\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group pr-3\\\">\\r\\n            <label for=\\\"state\\\" class=\\\"form-check-label pr-3 \\\">{{'State'|translate}} : </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"state\\\" id=\\\"state\\\" placeholder=\\\"{{'Enter College State'|translate}}\\\"\\r\\n                          [(ngModel)]=\\\"form.searchParams.state\\\">\\r\\n          </div>\\r\\n  \\r\\n          <button class=\\\"btn-primary btn\\\" (click)=\\\"submit()\\\">{{'Search'|translate}}</button>&nbsp;&nbsp;\\r\\n          <button class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\">{{'Reset'|translate}}</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"col-6  \\\" *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger\\\"> {{form.message}}</div>\\r\\n      <div class=\\\"col-6 \\\" *ngIf=\\\"!form.error && (form.message != null)\\\" class=\\\"alert alert-success\\\">\\r\\n        {{form.message}}</div>\\r\\n  \\r\\n      <br>\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th>{{'S.No'|translate}}</th>\\r\\n                <th>{{'Name'|translate}}</th>\\r\\n                <th>{{'Address'|translate}}</th>\\r\\n                <th>{{'City'|translate}}</th>\\r\\n                <th>{{'State'|translate}}</th>\\r\\n                <th>{{'Phone No'|translate}}</th>\\r\\n                <th>{{'Edit'|translate}} / {{'Delete'|translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n  \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let college of form.list; let i = index\\\">\\r\\n                <td> {{((form.pageNo-1)*10)+i+1}} </td>\\r\\n                <td> {{ college.name }} </td>\\r\\n                <td> {{ college.address }} </td>\\r\\n                <td> {{ college.city }} </td>\\r\\n                <td> {{ college.state }} </td>\\r\\n                <td> {{ college.phoneNo }} </td>\\r\\n                <td><a (click)=\\\"forward( '/college/' +  college.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit\\\" style=\\\"font-size:20px;color:blue\\\"></i>\\r\\n                  </a> / <a (click)=\\\"delete(college.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash-o\\\" style=\\\"font-size:20px;color:red\\\"></i>\\r\\n                  </a>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <div class=\\\" col-12 form-inline mb-0  \\\">\\r\\n            <div class=\\\"col-4 text-left \\\">\\r\\n              <div *ngIf=\\\"form.pageNo>1; then sus else fail\\\"></div>\\r\\n              <ng-template #sus>\\r\\n                <button (click)=\\\"previous()\\\" class=\\\"btn btn-success\\\">{{'previous'|translate}}</button>\\r\\n              </ng-template>\\r\\n              <ng-template #fail>\\r\\n                <button (click)=\\\"previous()\\\" disabled class=\\\"btn btn-light \\\">{{'previous'|translate}}</button>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n            <div class=\\\"col-4 text-center \\\">\\r\\n              <button class=\\\"btn-primary btn \\\" (click)=\\\"forward('/college/')\\\">{{'Add'|translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-4 text-right \\\">\\r\\n              <div *ngIf=\\\"form.count>(form.pageSize*form.pageNo);then susN else failN\\\"></div>\\r\\n              <ng-template #susN>\\r\\n                <button (click)=\\\"next()\\\" class=\\\"btn btn-success\\\">{{'next'|translate}}</button>\\r\\n              </ng-template>\\r\\n              <ng-template #failN>\\r\\n                <button (click)=\\\"next()\\\" disabled class=\\\"btn btn-light\\\">{{'next'|translate}}</button>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br><br>\\r\\n    </div>\\r\\n  </body>\"","export default \"<body class=\\\" container-fluid row\\\">\\n    <div class=\\\"row ml-3\\\" style=\\\"background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;background-size: cover;width:100%;height: 700px;\\\">\\n        <div class=\\\"col-sm-4\\\"></div>\\n        <div class=\\\"col-sm-4 pt-5\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"text-center mb-4\\\">\\n                        <div *ngIf=\\\"form.data.id>0; then hUpdate else hAdd\\\"></div>\\n                        <ng-template #hAdd>\\n                            <h1>{{'Add College'|translate}}</h1>\\n                        </ng-template>\\n                        <ng-template #hUpdate>\\n                            <h1>{{'Update College'|translate}}</h1>\\n                        </ng-template>\\n                    </div>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <form>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"name\\\" class=\\\"form-check-label\\\">{{'College Name'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span></label>\\n\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-university grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.name\\\" name=\\\"name\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter College Name'|translate}}\\\" id=\\\"name\\\" [value]=\\\"form.data.name\\\">\\n                            </div>\\n                            <span class=\\\"text-danger mr-auto mb-auto  \\\"> {{form.inputerror.name}}\\n                            </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"address\\\" class=\\\"form-check-label\\\">{{'Address'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-map-marker grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.address\\\" name=\\\"address\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter Address'|translate}}\\\" id=\\\"lName\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.address}} </span>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"mNo\\\" class=\\\"form-check-label\\\">{{'City'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-location-arrow grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.city\\\" name=\\\"city\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter College City'|translate}}\\\"id=\\\"mNo\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.city}} </span>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"state\\\" class=\\\"form-check-label\\\">{{'State'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-address-card grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.state\\\" name=\\\"state\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter College State'|translate}}\\\" id=\\\"state\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.state}} </span>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"phoneNo\\\" class=\\\"form-check-label\\\">{{'Phone No'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.phoneNo\\\" name=\\\"phoneNo\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter Phone Number'|translate}}\\\" id=\\\"mNo\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.phoneNo}} </span>\\n                        </div>\\n\\n\\n                        <div class=\\\"form-inline\\\">\\n                            <div class=\\\"col-4\\\"></div>\\n                            <div class=\\\"\\\">\\n                                <div *ngIf=\\\"form.data.id>0; then update else add\\\"></div>\\n                                <ng-template #add>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success\\\">{{'Save'|translate}}</button>&nbsp;\\n                                        <button (click)=\\\"reset()\\\"\\n                                        class=\\\"btn btn-secondary\\\">{{'Reset'|translate}}</button>&nbsp;\\n                                </ng-template>\\n                                <ng-template #update>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success \\\">{{'Update'|translate}}</button>&nbsp;\\n                                    <button (click)=\\\"cancel()\\\" class=\\\"btn btn-secondary\\\">{{'Cancel'|translate}}</button>\\n                                </ng-template>\\n                            </div>\\n                        </div>\\n\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm-4\\\"></div>\\n    </div>\\n</body>\"","export default \"<body class=\\\"container-fluid text-center\\\">\\r\\n  <div class=\\\"content-wrapper\\\" style=\\\"padding-top: 0%; background-image: url(./assets/list.jpg); background-repeat: no-repeat;\\r\\n  background-attachment: fixed;\\r\\n  background-size: cover;width:100%;\\r\\n  height: 850px;bottom: 0%;\\\">\\r\\n      <div class=\\\"d-flex bg-primary text-white paddin \\\">\\r\\n        <h1 class=\\\"text-center container-fluid \\\">{{'Course List'|translate}}</h1>\\r\\n      </div>\\r\\n      <div class=\\\"text-center row\\\">\\r\\n        <div class=\\\"col-2\\\"></div>\\r\\n        <form class=\\\"form-inline pt-3  \\\">\\r\\n          <div class=\\\"form-group  pr-3\\\">\\r\\n            <label for=\\\"courseName\\\" class=\\\"form-check-label pr-3 \\\">{{'Course Name'|translate}}: </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter Course Name'|translate}}\\\" name=\\\"courseName\\\"\\r\\n              [(ngModel)]=\\\"form.searchParams.courseName\\\" id=\\\"courseName\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group  pr-3\\\">\\r\\n            <label for=\\\"courseDescription\\\" class=\\\"form-check-label pr-3 \\\">{{'Course Description'|translate}}: </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter Course Description'|translate}}\\\" name=\\\"courseDescription\\\"\\r\\n              [(ngModel)]=\\\"form.searchParams.courseDescription\\\" id=\\\"fName\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group pr-3\\\">\\r\\n            <label for=\\\"courseDuration\\\" class=\\\"form-check-label pr-3\\\">{{'Course Duration'|translate}}:\\r\\n            </label>\\r\\n            <span class=\\\"text-danger ml-auto mb-auto\\\"> {{form.inputerror.courseDuration}} </span>\\r\\n            <select [(ngModel)]=\\\"form.searchParams.courseDuration\\\" name=\\\"courseDuration\\\" class=\\\"form-control\\\" id=\\\"courseDuration\\\">\\r\\n              <option [value]=default [disabled]=\\\"true\\\" selected disabled>{{'Select Course Duration'|translate}}</option>\\r\\n              <option value=\\\"1 Year\\\">1 Year</option>\\r\\n              <option value=\\\"2 Year\\\">2 Year</option>\\r\\n              <option value=\\\"3 Year\\\">3 Year</option>\\r\\n              <option value=\\\"4 Year\\\">4 Year</option>\\r\\n              <option value=\\\"5 Year\\\">5 Year</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <button class=\\\"btn-primary btn\\\" (click)=\\\"submit()\\\">{{'Search'|translate}}</button>&nbsp;&nbsp;\\r\\n          <button class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\">{{'Reset'|translate}}</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"col-6  \\\" *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger\\\"> {{form.message|translate}}</div>\\r\\n      <div class=\\\"col-6 \\\" *ngIf=\\\"!form.error && (form.message != null)\\\" class=\\\"alert alert-success\\\">\\r\\n        {{form.message|translate}}</div>\\r\\n  \\r\\n      <br>\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th>{{'S.No'|translate}}</th>\\r\\n                <th>{{'Course Name'|translate}}</th>\\r\\n                <th>{{'Course Description'|translate}}</th>\\r\\n                <th>{{'Course Duration'|translate}}</th>\\r\\n                <th>{{'Edit'|translate}} / {{'Delete'|translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n  \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let course of form.list; let i = index\\\">\\r\\n                <td> {{((form.pageNo-1)*10)+i+1}} </td>\\r\\n                <td> {{ course.courseName }} </td>\\r\\n                <td> {{ course.courseDescription }} </td>\\r\\n                <td> {{ course.courseDuration }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/course/' +  course.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit\\\" style=\\\"font-size:20px;color:blue\\\"></i>\\r\\n                  </a> / <a (click)=\\\"delete(course.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash-o\\\" style=\\\"font-size:20px;color:red\\\"></i>\\r\\n                  </a>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <div class=\\\" col-12 form-inline mb-0  \\\">\\r\\n            <div class=\\\"col-4 text-left \\\">\\r\\n              <div *ngIf=\\\"form.pageNo>1; then sus else fail\\\"></div>\\r\\n              <ng-template #sus>\\r\\n                <button (click)=\\\"previous()\\\" class=\\\"btn btn-success\\\">{{'previous'|translate}}</button>\\r\\n              </ng-template>\\r\\n              <ng-template #fail>\\r\\n                <button (click)=\\\"previous()\\\" disabled class=\\\"btn btn-light \\\">{{'previous'|translate}}</button>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n            <div class=\\\"col-4 text-center \\\">\\r\\n              <button class=\\\"btn-primary btn \\\" (click)=\\\"forward('/course/')\\\">{{'Add'|translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-4 text-right \\\">\\r\\n              <div *ngIf=\\\"form.count>(form.pageSize*form.pageNo);then susN else failN\\\"></div>\\r\\n              <ng-template #susN>\\r\\n                <button (click)=\\\"next()\\\" class=\\\"btn btn-success\\\">{{'next'|translate}}</button>\\r\\n              </ng-template>\\r\\n              <ng-template #failN>\\r\\n                <button (click)=\\\"next()\\\" disabled class=\\\"btn btn-light\\\">{{'next'|translate}}</button>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br><br>\\r\\n    </div>\\r\\n  </body>\"","export default \"<body class=\\\" container-fluid row\\\">\\n    <div class=\\\"row ml-3\\\" style=\\\"padding-top: 0%; background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;background-size: cover;width:100%;height: 700px;bottom: 0%;\\\">\\n        <div class=\\\"col-sm-4\\\"></div>\\n        <div class=\\\"col-sm-4 pt-5\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"text-center mb-4\\\">\\n                        <div *ngIf=\\\"form.data.id>0; then hUpdate else hAdd\\\"></div>\\n                        <ng-template #hAdd>\\n                            <h1>{{'Add Course'|translate}}</h1>\\n                        </ng-template>\\n                        <ng-template #hUpdate>\\n                            <h1>{{'Update Course'|translate}}</h1>\\n                        </ng-template>\\n                    </div>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <form>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"courseName\\\" class=\\\"form-check-label\\\">{{'Course Name'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span></label>\\n\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-graduation-cap grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.courseName\\\" name=\\\"courseName\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter Course Name'|translate}}\\\" id=\\\"courseName\\\">\\n                            </div>\\n                            <span class=\\\"text-danger mr-auto mb-auto  \\\"> {{form.inputerror.courseName}}\\n                            </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"courseDescription\\\" class=\\\"form-check-label\\\">{{'Course Description'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.courseDescription\\\" name=\\\"courseDescription\\\"\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Course Description'|translate}}\\\" id=\\\"courseDescription\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.courseDescription}} </span>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"courseDuration\\\" class=\\\"form-check-label\\\">{{'Course Duration'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-clock-o grey-text\\\"></i> </div>\\n                                </div>\\n                                <select [(ngModel)]=\\\"form.data.courseDuration\\\" name=\\\"courseDuration\\\"\\n                                    class=\\\"form-control\\\" id=\\\"courseDuration\\\">\\n                                    <option [value]=default [disabled]=\\\"true\\\" selected disabled>{{'Select Course Duration'|translate}}\\n                                    </option>\\n                                    <option value=\\\"1 year\\\">1 Year</option>\\n                                    <option value=\\\"2 year\\\">2 Year</option>\\n                                    <option value=\\\"3 year\\\">3 Year</option>\\n                                    <option value=\\\"4 year\\\">4 Year</option>\\n                                    <option value=\\\"5 year\\\">5 Year</option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.courseDuration}} </span>\\n                        </div>\\n\\n\\n                        <div class=\\\"form-inline\\\">\\n                            <div class=\\\"col-4\\\"></div>\\n                            <div class=\\\"text-center\\\">\\n                                <div *ngIf=\\\"form.data.id>0; then update else add\\\"></div>\\n                                <ng-template #add>\\n                                    <button (click)=\\\"submit()\\\" class=\\\"btn btn-success\\\">{{'Save'|translate}}</button>&nbsp;\\n                                    <button (click)=\\\"reset()\\\"\\n                                    class=\\\"btn btn-secondary\\\">{{'Reset'|translate}}</button>&nbsp;\\n                             </ng-template>\\n                                <ng-template #update>\\n                                    <button (click)=\\\"submit()\\\" class=\\\"btn btn-success \\\">{{'Update'|translate}}</button>&nbsp;\\n                                    <button (click)=\\\"cancel()\\\" class=\\\"btn btn-secondary\\\">{{'Cancel'|translate}}</button>\\n                                </ng-template>\\n                            </div>\\n                        </div>\\n\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm-4\\\"></div>\\n    </div>\\n    \\n</body>\"","export default \"<body class=\\\"container-fluid row \\\" >\\n    <div class=\\\"content-wrapper row ml-3\\\" style=\\\"padding-top: 0%; background-image: url(./assets/wel.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;background-size: cover;width:100%;height: 650px;bottom: 0%;\\\" >\\n    <div class=\\\"col-3\\\"></div>\\n    \\n    <div class=\\\"col-6\\\">    \\n\\n        <h1 class=\\\"text-light text-center font-weight-bold \\\" style=\\\"margin-top: 30%;\\\">{{'Welcome To Online Result System'|translate}}</h1>\\n    </div>\\n    <div class=\\\"col-3\\\"></div>\\n    </div>\\n</body>\"","export default \"<body class=\\\"container-fluid text-center\\\">\\r\\n    <div class=\\\"content-wrapper\\\" style=\\\"padding-top: 0%; background-image: url(./assets/list.jpg); background-repeat: no-repeat;\\r\\n      background-attachment: fixed;\\r\\n      background-size: cover;width:100%;\\r\\n      height: 850px;bottom: 0%;\\\">\\r\\n  <div class=\\\"d-flex bg-primary text-white paddin \\\">\\r\\n    <h1 class=\\\"text-center container-fluid \\\">{{'Faculty List'|translate}}</h1>\\r\\n  </div>\\r\\n  <div class=\\\"text-center col-12 row\\\">\\r\\n    <div class=\\\"col-2\\\"></div>\\r\\n    <form class=\\\"form-inline pt-3  \\\">\\r\\n      <div class=\\\"form-group  pr-3\\\">\\r\\n        <label for=\\\"fName\\\" class=\\\"form-check-label pr-3 \\\">{{'First Name'|translate}} : </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter Name'|translate}}\\\" name=\\\"firstName\\\"\\r\\n          [(ngModel)]=\\\"form.searchParams.firstName\\\" id=\\\"fName\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group pr-3\\\">\\r\\n        <label for=\\\"email\\\" class=\\\"form-check-label pr-3 \\\">{{'Email Id'|translate}} : </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"{{'Enter Email Id'|translate}}\\\"\\r\\n          [(ngModel)]=\\\"form.searchParams.email\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group pr-3\\\">\\r\\n        <label for=\\\"role\\\" class=\\\"form-check-label pr-3\\\">{{'College'|translate}} :</label>&nbsp;\\r\\n        <select class=\\\"form-control\\\" name=\\\"collegeId\\\" [(ngModel)]=\\\"form.searchParams.collegeId\\\" id=\\\"college\\\">\\r\\n          <option [value]=0 [disabled]=\\\"true\\\" selected disabled>{{'Select College'|translate}}</option>\\r\\n          <option *ngFor=\\\"let opt of form.preload.collegeList\\\" [value]=\\\"opt.id\\\">{{opt.name}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <button class=\\\"btn-primary btn\\\" (click)=\\\"submit()\\\">{{'Search'|translate}}</button>&nbsp;&nbsp;\\r\\n      <button class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\">{{'Reset'|translate}}</button>\\r\\n    </form>\\r\\n  </div>\\r\\n  <br>\\r\\n  <div class=\\\"col-6  \\\" *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger\\\"> {{form.message}}</div>\\r\\n      <div class=\\\"col-6 \\\" *ngIf=\\\"!form.error && (form.message != null)\\\" class=\\\"alert alert-success\\\">\\r\\n        {{form.message}}</div>\\r\\n  \\r\\n  <br>\\r\\n  <div class=\\\"p-1\\\">\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n      <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n        <thead class=\\\"thead-light text-uppercase\\\">\\r\\n          <tr>\\r\\n            <th>{{'S.No'|translate}}</th>\\r\\n            <th>{{'First Name'|translate}}</th>\\r\\n            <th>{{'Last Name'|translate}}</th>\\r\\n            <th>{{'Email Id'|translate}}</th>\\r\\n            <th>{{'Gender'|translate}}</th>\\r\\n            <th>{{'College'|translate}}</th>\\r\\n            <th>{{'Course'|translate}}</th>\\r\\n            <th>{{'Subject'|translate}}</th>\\r\\n            <th>{{'Phone'|translate}}</th>\\r\\n            <th>{{'DOB'|translate}}</th>\\r\\n            <th>{{'Edit'|translate}} / {{'Delete'|translate}}</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n  \\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let faculty of form.list; let i = index\\\">\\r\\n            <td> {{((form.pageNo-1)*10)+i+1}} </td>\\r\\n            <td> {{ faculty.firstName }} </td>\\r\\n            <td> {{ faculty.lastName }} </td>\\r\\n            <td> {{ faculty.email }} </td>\\r\\n            <td> {{ faculty.gender }} </td>\\r\\n            <td> {{ faculty.collegeName }} </td>\\r\\n            <td> {{ faculty.courseName }} </td>\\r\\n            <td> {{ faculty.subjectName }} </td>\\r\\n            <td> {{ faculty.mobileNo }} </td>\\r\\n            <td> {{ faculty.dob | date : 'dd-MM-yyyy'}} </td>\\r\\n            <td><a (click)=\\\"forward( '/faculty/' +  faculty.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                <i class=\\\"fa fa-edit\\\" style=\\\"font-size:20px;color:blue\\\"></i>\\r\\n              </a> / <a (click)=\\\"delete(faculty.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                <i class=\\\"fa fa-trash-o\\\" style=\\\"font-size:20px;color:red\\\"></i>\\r\\n              </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n  \\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\" col-12 form-inline mb-0  \\\">\\r\\n    <div class=\\\"col-4 text-left \\\">\\r\\n      <div *ngIf=\\\"form.pageNo>1; then sus else fail\\\"></div>\\r\\n      <ng-template #sus>\\r\\n        <button (click)=\\\"previous()\\\" class=\\\"btn btn-success\\\">{{'previous'|translate}}</button>\\r\\n      </ng-template>\\r\\n      <ng-template #fail>\\r\\n        <button (click)=\\\"previous()\\\" disabled class=\\\"btn btn-light \\\">{{'previous'|translate}}</button>\\r\\n      </ng-template>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 text-center \\\">\\r\\n      <button class=\\\"btn-primary btn \\\" (click)=\\\"forward('/faculty/')\\\">{{'Add'|translate}}</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 text-right \\\">\\r\\n      <div *ngIf=\\\"form.count>(form.pageSize*form.pageNo);then susN else failN\\\"></div>\\r\\n      <ng-template #susN>\\r\\n        <button (click)=\\\"next()\\\" class=\\\"btn btn-success\\\">{{'next'|translate}}</button>\\r\\n      </ng-template>\\r\\n      <ng-template #failN>\\r\\n        <button (click)=\\\"next()\\\" disabled class=\\\"btn btn-light\\\">{{'next'|translate}}</button>\\r\\n      </ng-template>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br><br>\\r\\n  </div>\\r\\n  </body>\"","export default \"<body class=\\\" container-fluid row\\\">\\n    <div class=\\\"row ml-3 text-center\\\" style=\\\"padding-top: 0%; background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;\\n    background-size: cover;width:100%;\\n    height: 950px;\\\">\\n        <div class=\\\"col-sm-4\\\"></div>\\n        <div class=\\\"col-sm-4 pt-5\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"text-center mb-4\\\">\\n                        <div *ngIf=\\\"form.data.id>0; then hUpdate else hAdd\\\"></div>\\n                        <ng-template #hAdd>\\n                            <h1>{{'Add Faculty'|translate}}</h1>\\n                        </ng-template>\\n                        <ng-template #hUpdate>\\n                            <h1>{{'Update Faculty'|translate}}</h1>\\n                        </ng-template>\\n                    </div>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <form>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"fName\\\" class=\\\"form-check-label\\\">{{'First Name'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span></label>\\n\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.firstName\\\" name=\\\"firstName\\\"\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter First Name'|translate}}\\\" id=\\\"fName\\\"\\n                                    [value]=\\\"form.data.firstName\\\">\\n                            </div>\\n                            <span class=\\\"text-danger mr-auto mb-auto  \\\"> {{form.inputerror.firstName}}\\n                            </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"lName\\\" class=\\\"form-check-label\\\">{{'Last Name'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-o grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.lastName\\\" name=\\\"lastName\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter Last Name'|translate}}\\\" id=\\\"lName\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.lastName}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"email\\\" class=\\\"form-check-label\\\">{{'Email'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                                </div>\\n                                <div *ngIf=\\\"form.data.id>0; then lUpdate else lAdd\\\"></div>\\n                                <ng-template #lUpdate>\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.email\\\" name=\\\"email\\\" class=\\\"form-control\\\"\\n                                        placeholder=\\\"{{'Enter Email'|translate}}\\\" id=\\\"email\\\" disabled>\\n                                </ng-template>\\n                                <ng-template #lAdd><input type=\\\"text\\\" [(ngModel)]=\\\"form.data.email\\\" name=\\\"email\\\"\\n                                        class=\\\"form-control\\\" placeholder=\\\"{{'Enter Email'|translate}}\\\" id=\\\"email\\\">\\n                                </ng-template>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.email}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"mNo\\\" class=\\\"form-check-label\\\">{{'Mobile No'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.mobileNo\\\" name=\\\"mobileNo\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter Mobile Number'|translate}}\\\" id=\\\"mNo\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.mobileNo}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row \\\">\\n                            <label for=\\\"collegeId\\\" class=\\\"form-check-label \\\">{{'College Name'|translate}} :<span\\n                                    class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-university grey-text\\\"></i> </div>\\n                                </div>\\n                                <select class=\\\"form-control\\\" *ngIf=\\\"form.preload.collegeList!=null\\\" name=\\\"collegeId\\\"\\n                                    [(ngModel)]=\\\"form.data.collegeId\\\" id=\\\"collegeId\\\">\\n                                    <option [value]=default [disabled]=\\\"true\\\" selected disabled>{{'Select College Name'|translate}}\\n                                    </option>\\n                                    <option *ngFor=\\\"let opt of form.preload.collegeList\\\" [value]=\\\"opt.id\\\">{{opt.name}}\\n                                    </option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\" id=\\\"collegeId\\\"> {{form.inputerror.collegeId}}\\n                            </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row \\\">\\n                            <label for=\\\"courseId\\\" class=\\\"form-check-label \\\">{{'Course Name'|translate}} :<span\\n                                    class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-graduation-cap grey-text\\\"></i> </div>\\n                                </div>\\n                                <select class=\\\"form-control\\\" *ngIf=\\\"form.preload.courseList!=null\\\" name=\\\"courseId\\\"\\n                                    [(ngModel)]=\\\"form.data.courseId\\\" id=\\\"collegeId\\\">\\n                                    <option [value]=default [disabled]=\\\"true\\\" selected disabled>{{'Select Course Name'|translate}}\\n                                    </option>\\n                                    <option *ngFor=\\\"let opt of form.preload.courseList\\\" [value]=\\\"opt.id\\\">{{opt.courseName}}\\n                                    </option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\" id=\\\"courseId\\\"> {{form.inputerror.courseId}}\\n                            </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row \\\">\\n                            <label for=\\\"subjectId\\\" class=\\\"form-check-label \\\">{{'Subject Name'|translate}} :<span\\n                                    class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-book grey-text\\\"></i> </div>\\n                                </div>\\n                                <select class=\\\"form-control\\\" *ngIf=\\\"form.preload.subjectList!=null\\\" name=\\\"subjectId\\\"\\n                                    [(ngModel)]=\\\"form.data.subjectId\\\" id=\\\"subjectId\\\">\\n                                    <option [value]=default [disabled]=\\\"true\\\" selected disabled>{{'Select Subject Name'|translate}}\\n                                    </option>\\n                                    <option *ngFor=\\\"let opt of form.preload.subjectList\\\" [value]=\\\"opt.id\\\">{{opt.subjectName}}\\n                                    </option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\" id=\\\"subjectId\\\"> {{form.inputerror.subjectId}}\\n                            </span>\\n                        </div>\\n\\n\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"gender\\\" class=\\\"form-check-label\\\">{{'Gender'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus-mars grey-text\\\"></i> </div>\\n                                </div>\\n                                <select [(ngModel)]=\\\"form.data.gender\\\" name=\\\"gender\\\" class=\\\"form-control\\\" id=\\\"gender\\\">\\n                                    <option [value]=\\\"null\\\" [disabled]=\\\"true\\\" selected disabled>{{'Select Gender'|translate}}</option>\\n                                    <option [value]=\\\"Male\\\">Male</option>\\n                                    <option [value]=\\\"Female\\\">Female</option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.gender}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row \\\">\\n                            <label for=\\\"datepicker\\\" class=\\\"form-check-label\\\">{{'Date of birth'|translate}}:<span\\n                                    class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"date\\\" id=\\\"datepicker\\\" name=\\\"dob\\\" [(ngModel)]=\\\"form.data.dob\\\"\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Date of Birth'|translate}}\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\">{{form.inputerror.dob}}</span>\\n                        </div>\\n\\n                        <div class=\\\"form-inline\\\">\\n                            <div class=\\\"col-4\\\"></div>\\n                            <div class=\\\"text-center\\\">\\n                                <div *ngIf=\\\"form.data.id>0; then update else add\\\"></div>\\n                                <ng-template #add>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success\\\">{{'Save'|translate}}</button>&nbsp;\\n                                        <button (click)=\\\"reset()\\\"\\n                                        class=\\\"btn btn-secondary\\\">{{'Reset'|translate}}</button>&nbsp;\\n                                </ng-template>\\n                                <ng-template #update>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success \\\">{{'Update'|translate}}</button>&nbsp;\\n                                    <button (click)=\\\"cancel()\\\" class=\\\"btn btn-secondary\\\">{{'Cancel'|translate}}</button>\\n                                </ng-template>\\n                            </div>\\n                        </div>\\n\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm-4\\\"></div>\\n    </div>\\n    \\n</body>\"","export default \"<footer class=\\\"footer\\\" style=\\\" position: fixed;\\nleft: 0;\\nbottom: 0;\\nwidth: 100%;\\\">\\n    <div class=\\\"container-fluid d-flex bg-primary justify-content-center \\\">\\n        <h5 class=\\\"text-center text-white float-center \\\"> &copy; Copyright Rays 2021</h5>\\n    </div>\\n</footer>\"","export default \"<body class=\\\" container-fluid row\\\">\\r\\n    <div class=\\\"row ml-3 \\\" style=\\\"background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\r\\n    background-attachment: fixed;background-size: cover;width:100%;height: 700px;\\\">\\r\\n        <div class=\\\"col-sm-4\\\"></div>\\r\\n        <div class=\\\"col-sm-4 pt-5 mt-5\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"text-center mb-4\\\">\\r\\n                        <h1>{{'Forgot Password'|translate}}</h1>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\r\\n                        {{form.message}}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\r\\n                        {{form.message}}\\r\\n                    </div>\\r\\n                    <form>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"login\\\" class=\\\"form-check-label\\\">{{'Email ID'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            \\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.login\\\" name=\\\"login\\\" class=\\\"form-control\\\"\\r\\n                                    placeholder=\\\"{{'Enter Registered Email ID'|translate}}\\\" id=\\\"login\\\">\\r\\n                            </div>\\r\\n                            <span class=\\\"text-danger ml-auto mb-auto\\\"> {{form.inputerror.login}} </span>\\r\\n                        </div>\\r\\n                        \\r\\n\\r\\n\\r\\n                        <div class=\\\"form-inline\\\">\\r\\n                            <div class=\\\"col-4\\\"></div>\\r\\n                            <div class=\\\"text-center\\\">\\r\\n                                <button (click)=\\\"forgot()\\\" class=\\\"btn btn-success\\\">{{'GO'|translate}}</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</body>\"","export default \"<body class=\\\"row container-fluid\\\">\\n    <div class=\\\" row ml-3 text-center \\\" style=\\\"padding-top: 0%; background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;\\n    background-size: cover;width:100%;\\n    height: 700px;\\\">\\n        <div class=\\\"col-sm-4\\\"></div>\\n        <div class=\\\"col-sm-4  \\\" style=\\\"margin-top: 7%;\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <h1 class=\\\"text-center\\\" >{{'Login'|translate}}</h1>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <form class=\\\"form-signin\\\">\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"login\\\" class=\\\"form-check-label\\\">{{'Login ID'|translate}}<span\\n                                    class=\\\"text-danger\\\">*</span></label>\\n\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                                </div>\\n                                <input id=\\\"login\\\" type=\\\"text\\\"  [(ngModel)]=\\\"form.data.login\\\" name=\\\"login\\\"\\n                                    placeholder=\\\"{{'Enter Login ID'|translate}}\\\" class=\\\"form-control\\\">\\n                            </div>\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\" id=\\\"login\\\"> {{form.inputerror.login}} </span>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"password\\\" class=\\\"form-check-label\\\">{{'Password'|translate}}<span\\n                                    class=\\\"text-danger\\\">*</span></label>\\n\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\n                                </div>\\n                                <input id=\\\"password\\\" type=\\\"password\\\" [(ngModel)]=\\\"form.data.password\\\" name=\\\"password\\\"\\n                                    placeholder=\\\"{{'Enter Password'|translate}}\\\" class=\\\"form-control\\\">\\n                            </div>\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\" id=\\\"password\\\"> {{form.inputerror.password}}\\n                            </span>\\n                        </div>\\n                        <button (click)=\\\"signIn()\\\" class=\\\"btn btn-success mr-2\\\">{{'Sign In'|translate}}</button>\\n                        <button (click)=\\\"signUp()\\\" class=\\\"btn btn-primary \\\">{{'Sign Up'|translate}}</button>\\n                        <br>\\n                        <a routerLink=\\\"/forgotpassword\\\">{{'Forgot my password'|translate}}</a>\\n\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</body>\"","export default \"<body class=\\\" container-fluid row\\\">\\r\\n    <div class=\\\" row ml-3\\\" style=\\\"background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\r\\n    background-attachment: fixed;background-size: cover;width:100%;height: 1100px;\\\">\\r\\n        <div class=\\\"col-sm-4\\\"></div>\\r\\n        <div class=\\\"col-sm-4 pt-5\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"text-center mb-4\\\">\\r\\n                        <h1>{{'User Registration'|translate}}</h1>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\r\\n                        {{form.message}}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\r\\n                        {{form.message}}\\r\\n                    </div>\\r\\n                    <form>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"fName\\\" class=\\\"form-check-label\\\">{{'First Name'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span></label>\\r\\n\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.firstName\\\" name=\\\"firstName\\\"\\r\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter First Name'|translate}}\\\" id=\\\"fName\\\"\\r\\n                                    [value]=\\\"form.data.firstName\\\">\\r\\n                            </div>\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto  \\\"> {{form.inputerror.firstName}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"lName\\\" class=\\\"form-check-label\\\">{{'Last Name'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-o grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.lastName\\\" name=\\\"lastName\\\" class=\\\"form-control\\\"\\r\\n                                    placeholder=\\\"{{'Enter Last Name'|translate}}\\\" id=\\\"lName\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.lastName}} </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"mNo\\\" class=\\\"form-check-label\\\">{{'Mobile No'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-mobile grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.mobileNo\\\" name=\\\"mobileNo\\\" class=\\\"form-control\\\"\\r\\n                                    placeholder=\\\"{{'Enter Mobile Number'|translate}}\\\" id=\\\"mNo\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.mobileNo}} </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"login\\\" class=\\\"form-check-label\\\">{{'Login'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"form.data.id>0; then lUpdate else lAdd\\\"></div>\\r\\n                                <ng-template #lUpdate>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.login\\\" name=\\\"login\\\" class=\\\"form-control\\\"\\r\\n                                        placeholder=\\\"{{'Enter Email'|translate}}\\\" id=\\\"login\\\" disabled>\\r\\n                                </ng-template>\\r\\n                                <ng-template #lAdd><input type=\\\"text\\\" [(ngModel)]=\\\"form.data.login\\\" name=\\\"login\\\"\\r\\n                                        class=\\\"form-control\\\" placeholder=\\\"{{'Enter Email ID'|translate}}\\\" id=\\\"login\\\">\\r\\n                                </ng-template>\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.login}} </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"password\\\" class=\\\"form-check-label\\\">{{'Password'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"password\\\" [(ngModel)]=\\\"form.data.password\\\" name=\\\"password\\\"\\r\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Password'|translate}}\\\" id=\\\"password\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\"> {{form.inputerror.password}} </span>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"confirmPassword\\\" class=\\\"form-check-label\\\">{{'Confirm Password'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"password\\\" [(ngModel)]=\\\"form.data.confirmPassword\\\" name=\\\"confirmPassword\\\"\\r\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Confirm Password'|translate}}\\\" id=\\\"confirmPassword\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\"> {{form.inputerror.confirmPassword}} </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"gender\\\" class=\\\"form-check-label\\\">{{'Gender'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus-double grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <select [(ngModel)]=\\\"form.data.gender\\\" name=\\\"gender\\\" class=\\\"form-control\\\" id=\\\"gender\\\">\\r\\n                                    <option [value]=\\\"default\\\" [disabled]=\\\"true\\\" selected disabled>{{'Select Gender'|translate}}</option>\\r\\n                                    <option [value]=\\\"Male\\\">Male</option>\\r\\n                                    <option [value]=\\\"Female\\\">Female</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.gender}} </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row \\\">\\r\\n                            <label for=\\\"datepicker\\\" class=\\\"form-check-label\\\">{{'Date of birth'|translate}}:<span\\r\\n                                    class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-birthday-cake grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"date\\\" id=\\\"datepicker\\\" name=\\\"dob\\\" [(ngModel)]=\\\"form.data.dob\\\"\\r\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Date of Birth'|translate}}\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\">{{form.inputerror.dob}}</span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-inline\\\">\\r\\n                            <div class=\\\"col-4\\\"></div>\\r\\n                            <div class=\\\"text-center\\\">\\r\\n                                <button (click)=\\\"submit()\\\" class=\\\"btn btn-success\\\">{{'Save'|translate}}</button>&nbsp;\\r\\n                                <button class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\">{{'Reset'|translate}}</button>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\"></div>\\r\\n    </div>\\r\\n</body>\"","export default \"<body class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"\\\" style=\\\"padding-top: 0%; background-image: url(./assets/list.jpg); background-repeat: no-repeat;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;width:100%;\\r\\n    height: 850px;bottom: 0%;\\\">\\r\\n        <div class=\\\"d-flex bg-primary text-white \\\">\\r\\n            <h1 class=\\\"text-center container-fluid \\\">{{'Get Marksheet'|translate}}</h1>\\r\\n        </div>\\r\\n        <br>\\r\\n\\r\\n        <form class=\\\"form-inline\\\">\\r\\n            <div class=\\\"col-4\\\"></div>\\r\\n            <div class=\\\"form-group  pr-3\\\">\\r\\n                <label for=\\\"rollNo\\\" class=\\\"form-check-label pr-3 \\\">{{'Roll No'|translate}}: </label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter Roll Number'|translate}}\\\" name=\\\"rollNo\\\"\\r\\n                    [(ngModel)]=\\\"form.rollNo\\\" id=\\\"rollNo\\\">\\r\\n            </div>\\r\\n            <button class=\\\"btn-primary btn\\\" (click)=\\\"submit()\\\">{{'Search'|translate}}</button>&nbsp;&nbsp;\\r\\n            <button class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\">{{'Reset'|translate}}</button>\\r\\n        </form>\\r\\n        <div class=\\\"\\\" *ngIf=\\\"this.flag\\\">\\r\\n\\r\\n            <div class=\\\"p-1\\\">\\r\\n                <div class=\\\"table-responsive \\\">\\r\\n                    <table class=\\\"table table-bordered\\\">\\r\\n                        <thead class=\\\"thread-light \\\">\\r\\n                            <tr>\\r\\n                                <tr>{{'Student Name'|translate}}    : {{form.data.student.firstName}} {{form.data.student.lastName}}</tr>\\r\\n                                <tr>{{'College Name'|translate}}    : {{form.data.college.name}}</tr>\\r\\n                            \\r\\n                                <tr>{{'College Address'|translate}}         : {{form.data.college.address}}, {{form.data.college.city}} ,{{form.data.college.state}}</tr>\\r\\n                                <tr>{{'Phone No'|translate}}        : {{form.data.college.phoneNo}}\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <thead class=\\\"thread-light text-uppercase \\\">\\r\\n                            <tr>\\r\\n                                <td>{{'Subject'|translate}}</td>\\r\\n                                <td>{{'Maximum Marks'|translate}}</td>\\r\\n                                <td>{{'Passing Marks'|translate}}</td>\\r\\n                                <td>{{'Marks Obtained'|translate}}</td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Physics'|translate}}</td>\\r\\n                                <td>100</td>\\r\\n                                <td>35</td>\\r\\n                                <td>{{form.data.marksheet.physics}}</td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Chemistry'|translate}}</td>\\r\\n                                <td>100</td>\\r\\n                                <td>35</td>\\r\\n                                <td>{{form.data.marksheet.chemistry}}</td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Maths'|translate}}</td>\\r\\n                                <td>100</td>\\r\\n                                <td>35</td>\\r\\n                                <td>{{form.data.marksheet.maths}}</td>\\r\\n                            </tr>\\r\\n                            \\r\\n                            <tr>\\r\\n                                <td>{{'Total'|translate}}:</td>\\r\\n                                \\r\\n                                <td> {{\\r\\n                                    (form.data.marksheet.physics+form.data.marksheet.maths+form.data.marksheet.chemistry)\\r\\n                                    }}\\r\\n                                    /300</td>\\r\\n                                <td>{{'Percentage'|translate}}:</td>\\r\\n                                <td> {{\\r\\n                                    (form.data.marksheet.physics+form.data.marksheet.maths+form.data.marksheet.chemistry)/3\\r\\n                                    | number:'1.0-2' }}\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n</body>\"","export default \"<body class=\\\"container-fluid text-center\\\">\\r\\n  <div class=\\\"content-wrapper\\\" style=\\\"padding-top: 0%; background-image: url(./assets/list.jpg); background-repeat: no-repeat;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;width:100%;\\r\\n    height: 850px;bottom: 0%;\\\">\\r\\n  <div class=\\\"d-flex bg-primary text-white paddin \\\">\\r\\n    <h1 class=\\\"text-center container-fluid \\\">{{'Marksheet List'|translate}}</h1>\\r\\n  </div>\\r\\n  <div class=\\\"text-center row\\\">\\r\\n    <div class=\\\"col-3\\\"></div>\\r\\n    <form class=\\\"form-inline pt-3  \\\">\\r\\n      <div class=\\\"form-group  pr-3\\\">\\r\\n        <label for=\\\"name\\\" class=\\\"form-check-label pr-3 \\\">{{'Student Name'|translate}} : </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter Student Name'|translate}}\\\" name=\\\"name\\\"\\r\\n          [(ngModel)]=\\\"form.searchParams.name\\\" id=\\\"name\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group pr-3\\\">\\r\\n        <label for=\\\"rollNo\\\" class=\\\"form-check-label pr-3 \\\">{{'Roll No'|translate}} : </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"rollNo\\\" id=\\\"rollNo\\\" placeholder=\\\"{{'Enter Roll Number'|translate}}\\\"\\r\\n          [(ngModel)]=\\\"form.searchParams.rollNo\\\">\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <button class=\\\"btn-primary btn\\\" (click)=\\\"submit()\\\">{{'Search'|translate}}</button>&nbsp;&nbsp;\\r\\n      <button class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\">{{'Reset'|translate}}</button>\\r\\n    </form>\\r\\n  </div>\\r\\n  <br>\\r\\n  <div class=\\\"col-6  \\\" *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger\\\"> {{form.message}}</div>\\r\\n  <div class=\\\"col-6 \\\" *ngIf=\\\"!form.error && (form.message != null)\\\" class=\\\"alert alert-success\\\">\\r\\n    {{form.message}}</div>\\r\\n\\r\\n  <br>\\r\\n  <div class=\\\"p-1\\\">\\r\\n    <div class=\\\"table-responsive-sm\\\">\\r\\n      <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n        <thead class=\\\"thead-light text-uppercase\\\">\\r\\n          <tr>\\r\\n            <th>{{'S.No'|translate}}</th>\\r\\n            <th>{{'Roll No'|translate}}</th>\\r\\n            <th>{{'Student Name'|translate}}</th>\\r\\n            <th>{{'Physics'|translate}}</th>\\r\\n            <th>{{'Maths'|translate}}</th>\\r\\n            <th>{{'Chemistry'|translate}}</th>\\r\\n            <th>{{'Total'|translate}}</th>\\r\\n            <th>{{'Percentage'|translate}}</th>\\r\\n            <th>{{'Result'|translate}}</th>\\r\\n            <th>{{'Edit'|translate}} / {{'Delete'|translate}}</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let marksheet of form.list; let i = index\\\">\\r\\n            <td> {{((form.pageNo-1)*10)+i+1}} </td>\\r\\n            <td> {{ marksheet.rollNo }} </td>\\r\\n            <td> {{ marksheet.name }} </td>\\r\\n            <td> {{ marksheet.physics }} </td>\\r\\n            <td> {{ marksheet.maths }} </td>\\r\\n            <td> {{ marksheet.chemistry }} </td>\\r\\n            <td> {{ (marksheet.physics+marksheet.maths+marksheet.chemistry) }} /300</td>\\r\\n            <td> {{ (marksheet.physics+marksheet.maths+marksheet.chemistry)/3 | number:'1.0-2' }} </td>\\r\\n            <td>\\r\\n              <div class=\\\"\\\" *ngIf=\\\"result(marksheet.physics,marksheet.maths,marksheet.chemistry);then pass else fail \\\">\\r\\n              </div>\\r\\n              <ng-template #pass>\\r\\n                <div class=\\\"text-success font-weight-bold\\\"> Pass </div>\\r\\n              </ng-template>\\r\\n              <ng-template #fail>\\r\\n                <div class=\\\"text-danger font-weight-bold \\\"> Fail </div>\\r\\n              </ng-template>\\r\\n            </td>\\r\\n            <td><a (click)=\\\"forward( '/marksheet/' +  marksheet.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                <i class=\\\"fa fa-edit\\\" style=\\\"font-size:20px;color:blue\\\"></i>\\r\\n              </a> / <a (click)=\\\"delete(marksheet.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                <i class=\\\"fa fa-trash-o\\\" style=\\\"font-size:20px;color:red\\\"></i>\\r\\n              </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n  <form class=\\\"form-inline \\\">\\r\\n    <div class=\\\"col-4 text-left \\\">\\r\\n      <div *ngIf=\\\"form.pageNo>1; then sus else fail\\\"></div>\\r\\n      <ng-template #sus>\\r\\n        <button (click)=\\\"previous()\\\" class=\\\"btn btn-success\\\">{{'previous'|translate}}</button>\\r\\n      </ng-template>\\r\\n      <ng-template #fail>\\r\\n        <button (click)=\\\"previous()\\\" disabled class=\\\"btn btn-light \\\">{{'previous'|translate}}</button>\\r\\n      </ng-template>\\r\\n    </div>\\r\\n    <div class=\\\" col-4 text-center \\\">\\r\\n      <button class=\\\"btn-primary btn \\\" (click)=\\\"forward('/marksheet/')\\\">{{'Add'|translate}}</button>\\r\\n    </div>\\r\\n    <div class=\\\" col-4 text-right \\\">\\r\\n      <div *ngIf=\\\"form.count>(form.pageSize*form.pageNo);then susN else failN\\\"></div>\\r\\n      <ng-template #susN>\\r\\n        <button (click)=\\\"next()\\\" class=\\\"btn btn-success\\\">{{'next'|translate}}</button>\\r\\n      </ng-template>\\r\\n      <ng-template #failN>\\r\\n        <button (click)=\\\"next()\\\" disabled class=\\\"btn btn-light\\\">{{'next'|translate}}</button>\\r\\n      </ng-template>\\r\\n    </div>\\r\\n  </form>\\r\\n  \\r\\n  <br><br>\\r\\n  </div>\\r\\n</body>\"","export default \"\\n<body class=\\\" container-fluid row\\\">\\n    <div class=\\\" row ml-3\\\" style=\\\"padding-top: 0%; background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;background-size: cover;width:100%;height: 700px;bottom: 0%;\\\">\\n        <div class=\\\"col-sm-4\\\"></div>\\n        <div class=\\\"col-sm-4 pt-5\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"text-center mb-4\\\">\\n                        <div *ngIf=\\\"form.data.id>0; then hUpdate else hAdd\\\"></div>\\n                        <ng-template #hAdd>\\n                            <h1>{{'Add Marksheet'|translate}}</h1>\\n                        </ng-template>\\n                        <ng-template #hUpdate>\\n                            <h1>{{'Update Marksheet'|translate}}</h1>\\n                        </ng-template>\\n                    </div>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <form>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"rollNo\\\" class=\\\"form-check-label\\\">{{'Roll No'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span></label>\\n\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-card grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.rollNo\\\" name=\\\"rollNo\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter RollNo[00XX00]'|translate}}\\\" id=\\\"rollNo\\\" [value]=\\\"form.data.rollNo\\\">\\n                            </div>\\n                            <span class=\\\"text-danger mr-auto mb-auto  \\\"> {{form.inputerror.rollNo}}\\n                            </span>\\n                        </div>\\n                        <div class=\\\"form-group row \\\">\\n                            <label for=\\\"studentId\\\" class=\\\"form-check-label \\\">{{'Student Name'|translate}} :<span\\n                                    class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                                </div>\\n                                <select class=\\\"form-control\\\" name=\\\"studentId\\\" [(ngModel)]=\\\"form.data.studentId\\\"\\n                                    id=\\\"studentId\\\">\\n                                    <option [value]=default [disabled]=\\\"true\\\" selected disabled>{{'Select Student Name'|translate}}\\n                                    </option>\\n                                    <option *ngFor=\\\"let opt of form.preload.studentList\\\" [value]=\\\"opt.id\\\">{{opt.firstName}}\\n                                    </option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\" id=\\\"studentId\\\"> {{form.inputerror.studentId}}\\n                            </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"physics\\\" class=\\\"form-check-label\\\">{{'Physics'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-sticky-note grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.physics\\\" name=\\\"physics\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter Physics Marks'|translate}}\\\" id=\\\"physics\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.physics}} </span>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"maths\\\" class=\\\"form-check-label\\\">{{'Maths'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-sticky-note grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.maths\\\" name=\\\"maths\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter Maths Marks'|translate}}\\\" id=\\\"maths\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.maths}} </span>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"chemistry\\\" class=\\\"form-check-label\\\">{{'Chemistry'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-sticky-note grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.chemistry\\\" name=\\\"chemistry\\\"\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Chemistry Marks'|translate}}\\\" id=\\\"chemistry\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.chemistry}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-inline\\\">\\n                            <div class=\\\"col-4\\\"></div>\\n                            <div class=\\\"text-center\\\">\\n                                <div *ngIf=\\\"form.data.id>0; then update else add\\\"></div>\\n                                <ng-template #add>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success\\\">{{'Save'|translate}}</button>&nbsp;\\n                                        <button (click)=\\\"reset()\\\"\\n                                        class=\\\"btn btn-secondary\\\">{{'Reset'|translate}}</button>&nbsp;\\n                                </ng-template>\\n                                <ng-template #update>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success \\\">{{'Update'|translate}}</button>&nbsp;\\n                                    <button (click)=\\\"cancel()\\\" class=\\\"btn btn-secondary\\\">{{'Cancel'|translate}}</button>\\n                                </ng-template>\\n                            </div>\\n                        </div>\\n\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm-4\\\"></div>\\n    </div>\\n</body>\"","export default \"<body class=\\\"container-fluid text-center\\\">\\r\\n    <div class=\\\"\\\" style=\\\"padding-top: 0%; background-image: url(./assets/list.jpg); background-repeat: no-repeat;\\r\\n      background-attachment: fixed;\\r\\n      background-size: cover;width:100%;\\r\\n      height: 850px;bottom: 0%;\\\">\\r\\n      <div class=\\\"d-flex bg-primary text-white \\\">\\r\\n        <h1 class=\\\"text-center container-fluid \\\">{{'Marksheet Merit List'|translate}}</h1>\\r\\n      </div>\\r\\n      \\r\\n    <br>\\r\\n      <div class=\\\"col-6  \\\" *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger\\\"> {{form.message}}</div>\\r\\n      <div class=\\\"col-6 \\\" *ngIf=\\\"!form.error && (form.message != null)\\\"\\r\\n        class=\\\"alert alert-success\\\">\\r\\n        {{form.message}}</div>\\r\\n    \\r\\n      <br>\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th>{{'S.No'|translate}}</th>\\r\\n                <th>{{'Roll No'|translate}}</th>\\r\\n                <th>{{'Student Name'|translate}}</th>\\r\\n                <th>{{'Physics'|translate}}</th>\\r\\n                <th>{{'Maths'|translate}}</th>\\r\\n                <th>{{'Chemistry'|translate}}</th>\\r\\n                <th>{{'Total'|translate}}</th>\\r\\n                <th>{{'Percentage'|translate}}</th>\\r\\n                <th>{{'Result'|translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n    \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let marksheet of form.list; let i = index\\\">\\r\\n                <td> {{1+i}} </td>\\r\\n                <td> {{ marksheet.rollNo }} </td>\\r\\n                <td> {{ marksheet.name }} </td>\\r\\n                <td> {{ marksheet.physics }} </td>\\r\\n                <td> {{ marksheet.maths }} </td>\\r\\n                <td> {{ marksheet.chemistry }} </td>\\r\\n                <td> {{ (marksheet.physics+marksheet.maths+marksheet.chemistry) }} /300</td>\\r\\n                <td> {{ (marksheet.physics+marksheet.maths+marksheet.chemistry)/3 | number:'1.0-2' }} </td>\\r\\n                <td> <div class=\\\"\\\" *ngIf=\\\"result(marksheet.physics,marksheet.maths,marksheet.chemistry);then pass else fail \\\" ></div>\\r\\n                  <ng-template #pass ><div class=\\\"text-success font-weight-bold\\\"> Pass </div></ng-template>\\r\\n                  <ng-template #fail ><div class=\\\"text-danger font-weight-bold \\\"> Fail </div></ng-template>\\r\\n                </td>\\r\\n                \\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n      <br><br>\\r\\n      </div>\\r\\n    </body>\"","export default \"<!--LOG IN START-->\\n<div *ngIf=\\\"checkLogin()\\\">\\n  <nav class=\\\"navbar navbar-expand-lg bg-secondary navbar-secondary \\\">\\n\\n    <a class=\\\"navbar-brand\\\" href=\\\"/ORSui\\\"><img class=\\\"image-responsive\\\" src='./assets/logo.png' height=\\\"30px\\\"></a>\\n\\n    <button class=\\\"navbar-toggler navbar-light \\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\"\\n      aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n<!--CHECK-->\\n \\n\\n<!--CHECK-->\\n    <div class=\\\"collapse navbar-collapse bg-secondary \\\" id=\\\"navbarNav\\\">\\n      <select #locale (change)='changeLocale(locale.value)' class=\\\"bg-secondary text-light\\\">\\n        <option class=\\\"text-light\\\" value=\\\"en\\\">English</option>\\n        <option class=\\\"text-light\\\" value=\\\"hi\\\">{{'Hindi' | translate }}</option>\\n      </select>\\n      <ul class=\\\"nav navbar-nav \\\" style=\\\"list-style-type: none;\\\">\\n        <li class=\\\"nav-item dropdown\\\" style=\\\"list-style-type: none;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary  dropdown-toggle\\\"\\n            data-toggle=\\\"dropdown\\\">{{'User'|translate}}</button>\\n          <div class=\\\"dropdown-menu\\\">\\n            <a routerLink=\\\"/user\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-user-plus\\\"></i> {{'Add User'|translate}}</a>\\n            <a routerLink=\\\"/userlist\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-list\\\"></i> {{'User List'|translate}}</a>\\n          </div>\\n\\n        </li>\\n\\n        <li class=\\\"nav-item dropdown\\\" style=\\\"list-style-type: none;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\"\\n            data-toggle=\\\"dropdown\\\">{{'Role'|translate}}</button>\\n          <div class=\\\"dropdown-menu\\\">\\n            <a routerLink=\\\"/role\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-user-circle\\\"></i>{{'Add Role'|translate}}</a>\\n            <a routerLink=\\\"/rolelist\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-list\\\"></i> {{'Role List'|translate}}</a>\\n          </div>\\n        </li>\\n\\n        <li class=\\\"nav-item dropdown\\\" style=\\\"list-style-type: none;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\"\\n            data-toggle=\\\"dropdown\\\">{{'College'|translate}}</button>\\n          <div class=\\\"dropdown-menu\\\">\\n            <a routerLink=\\\"/college\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-university\\\"></i> {{'Add\\n              College'|translate}}</a>\\n            <a routerLink=\\\"/collegelist\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-list\\\"></i> {{'College\\n              List'|translate}}</a>\\n          </div>\\n        </li>\\n\\n        <li class=\\\"nav-item dropdown\\\" style=\\\"list-style-type: none;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\"\\n            data-toggle=\\\"dropdown\\\">{{'Student'|translate}}</button>\\n          <div class=\\\"dropdown-menu\\\">\\n            <a routerLink=\\\"/student\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-users\\\"></i> {{'Add Student'|translate}}</a>\\n            <a routerLink=\\\"/studentlist\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-list\\\"></i> {{'Student\\n              List'|translate}}</a>\\n          </div>\\n        </li>\\n\\n        <li class=\\\"nav-item dropdown\\\" style=\\\"list-style-type: none;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\"\\n            data-toggle=\\\"dropdown\\\">{{'Course'|translate}}</button>\\n          <div class=\\\"dropdown-menu\\\">\\n            <a routerLink=\\\"/course\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-plus\\\"></i> {{'Add Course'|translate}}</a>\\n            <a routerLink=\\\"/courselist\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-list\\\"></i> {{'Course\\n              List'|translate}}</a>\\n          </div>\\n        </li>\\n\\n        <li class=\\\" nav-item dropdown\\\" style=\\\"list-style-type: none;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\"\\n            data-toggle=\\\"dropdown\\\">{{'Subject'|translate}}</button>\\n          <div class=\\\"dropdown-menu\\\">\\n            <a routerLink=\\\"/subject\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-plus\\\"></i> {{'Add Subject'|translate}}</a>\\n            <a routerLink=\\\"/subjectlist\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-list\\\"></i> {{'Subject\\n              List'|translate}}</a>\\n          </div>\\n        </li>\\n\\n        <li class=\\\"nav-item dropdown\\\" style=\\\"list-style-type: none;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\"\\n            data-toggle=\\\"dropdown\\\">{{'Marksheet'|translate}}</button>\\n          <div class=\\\"dropdown-menu\\\">\\n            <a routerLink=\\\"/marksheet\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-plus\\\"></i> {{'Add\\n              Marksheet'|translate}}</a>\\n            <a routerLink=\\\"/marksheetlist\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-list\\\"></i> {{'Marksheet\\n              List'|translate}}</a>\\n            <a routerLink=\\\"/meritlist\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-list-ol\\\"></i> {{'Merit\\n              List'|translate}}</a>\\n            <a routerLink=\\\"/getmarksheet\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-id-card-o\\\"></i> {{'Get\\n              Marksheet'|translate}}</a>\\n          </div>\\n        </li>\\n\\n        <li class=\\\"nav-item dropdown\\\" style=\\\"list-style-type: none;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\"\\n            data-toggle=\\\"dropdown\\\">{{'Faculty'|translate}}</button>\\n          <div class=\\\"dropdown-menu\\\">\\n            <a routerLink=\\\"/faculty\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-user-circle\\\"></i> {{'Add\\n              Faculty'|translate}}</a>\\n            <a routerLink=\\\"/facultylist\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-list\\\"></i> {{'Faculty\\n              List'|translate}}</a>\\n          </div>\\n        </li>\\n\\n        <li class=\\\"nav-item dropdown\\\" style=\\\"list-style-type: none;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\"\\n            data-toggle=\\\"dropdown\\\">{{'TimeTable'|translate}}</button>\\n          <div class=\\\"dropdown-menu\\\">\\n            <a routerLink=\\\"/timetable\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-clock-o\\\"></i> {{'Add\\n              TimeTable'|translate}}</a>\\n            <a routerLink=\\\"/timetablelist\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-list\\\"></i> {{'TimeTable\\n              List'|translate}}</a>\\n          </div>\\n        </li>\\n      </ul>\\n      <ul class=\\\"nav navbar-nav ml-auto\\\" style=\\\"list-style-type: none;\\\">\\n        <li class=\\\"nav-item dropdown ml-auto \\\" style=\\\"list-style-type: none;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle ml-auto\\\" data-toggle=\\\"dropdown\\\">\\n            <i class=\\\"fa fa-user-circle\\\" style=\\\"font-size: 19px;\\\"> </i> {{firstName}} ({{roleName}})</button>\\n          <div class=\\\"dropdown-menu dropdown-menu-right  ml-auto\\\">\\n            <a class=\\\"dropdown-item \\\" routerLink=\\\"/myprofile\\\"><i class=\\\"fa fa-user\\\"></i> {{'My Profile'|translate}}</a>\\n            <a class=\\\"dropdown-item \\\" routerLink=\\\"/changepassword\\\"><i class=\\\"fa fa-key\\\"></i> {{'Change Password'|translate}}</a>\\n            <a class=\\\"dropdown-item \\\" (click)=\\\"logout();\\\"><i class=\\\"fa fa-sign-out\\\"></i> {{'Sign Out'|translate}}</a>\\n          </div>\\n        </li>\\n\\n      </ul>\\n    </div>\\n  </nav>\\n</div>\\n<!--LOG IN END-->\\n\\n<!--LOG OUT START-->\\n\\n<div *ngIf=\\\"!checkLogin();\\\">\\n  <nav class=\\\"navbar navbar-expand-lg bg-secondary navbar-secondary \\\">\\n\\n    <a class=\\\"navbar-brand\\\" href=\\\"/ORSui\\\"><img class=\\\"image-responsive\\\" src='./assets/logo.png' height=\\\"30px\\\"></a>\\n\\n    <button class=\\\"navbar-toggler navbar-light \\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\"\\n      aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse bg-secondary \\\" id=\\\"navbarNav\\\">\\n      <select #locale (change)='changeLocale(locale.value)' class=\\\"bg-secondary text-light\\\">\\n        <option class=\\\"text-light\\\" value=\\\"en\\\">English</option>\\n        <option class=\\\"text-light\\\" value=\\\"hi\\\">{{'Hindi'|translate}}</option>\\n      </select>\\n      <ul class=\\\"nav navbar-nav ml-auto\\\" style=\\\"list-style-type: none;\\\">\\n        <li class=\\\"nav-item dropdown ml-auto\\\" style=\\\"list-style-type: none;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\" data-toggle=\\\"dropdown\\\"><i\\n              class=\\\"fa fa-user-circle\\\" style=\\\"font-size: 19px;\\\"> </i> {{'Hi, Guest'|translate}}</button>\\n          <div class=\\\"dropdown-menu dropdown-menu-right ml-auto\\\">\\n\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"/login\\\"><i class=\\\"fa fa-sign-in\\\"></i> &nbsp;{{'Log in' |\\n              translate}}</a>\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"/signup\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp;{{'User Registration' |\\n              translate}}</a>\\n          </div>\\n        <li>\\n      </ul>\\n    </div>\\n  </nav>\\n\\n</div>\"","export default \"<p>page-not-found works!</p>\\n\"","export default \"<body class=\\\"container-fluid text-center\\\">\\r\\n    <div class=\\\"content-wrapper\\\" style=\\\"padding-top: 0%; background-image: url(./assets/list.jpg); background-repeat: no-repeat;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;width:100%;\\r\\n    height: 850px;bottom: 0%;\\\">\\r\\n    <div class=\\\"d-flex bg-primary text-white paddin \\\">\\r\\n        <h1 class=\\\"text-center container-fluid \\\">{{'Role List'|translate}}</h1>\\r\\n    </div>\\r\\n    <div class=\\\"text-center row\\\">\\r\\n        <div class=\\\"col-3\\\"></div>\\r\\n        <form class=\\\"form-inline pt-3  \\\">\\r\\n            <div class=\\\"form-group  pr-3\\\">\\r\\n                <label for=\\\"name\\\" class=\\\"form-check-label pr-3 \\\">{{'Name'|translate}} : </label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter Role Name'|translate}}\\\" name=\\\"name\\\"\\r\\n                    [(ngModel)]=\\\"form.searchParams.name\\\" id=\\\"name\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group pr-3\\\">\\r\\n                <label for=\\\"description\\\" class=\\\"form-check-label pr-3 \\\">{{'Description'|translate}} : </label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" id=\\\"description\\\"\\r\\n                    placeholder=\\\"{{'Enter Role Description'|translate}}\\\" [(ngModel)]=\\\"form.searchParams.description\\\">\\r\\n            </div>\\r\\n            <button class=\\\"btn-primary btn\\\" (click)=\\\"submit()\\\">{{'Search'|translate}}</button>&nbsp;&nbsp;\\r\\n            <button class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\">{{'Reset'|translate}}</button>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"col-6  \\\" *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger\\\"> {{form.message}}</div>\\r\\n    <div class=\\\"col-6 \\\" *ngIf=\\\"!form.error && form.message != null && form.message.length()>0\\\"\\r\\n        class=\\\"alert alert-success\\\">\\r\\n        {{form.message}}</div>\\r\\n\\r\\n    <br>\\r\\n\\r\\n\\r\\n    <br>\\r\\n    <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n                <thead class=\\\"thead-light text-uppercase\\\">\\r\\n                    <tr>\\r\\n                        <th>{{'S.No'|translate}}</th>\\r\\n                        <th>{{'Name'|translate}}</th>\\r\\n                        <th>{{'Description'|translate}}</th>\\r\\n                        <th>{{'Edit'|translate}}/{{'Delete'|translate}}</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let role of form.list; let i = index\\\">\\r\\n                        <td> {{((form.pageNo-1)*10)+i+1}} </td>\\r\\n                        <td> {{ role.name }} </td>\\r\\n                        <td> {{ role.description }} </td>\\r\\n                        <td>\\r\\n                            <div *ngIf=\\\"role.id==1;then read else write\\\"></div>\\r\\n                            <ng-template #read><i class=\\\"fa fa-edit\\\" style=\\\"font-size:20px;color:grey\\\"></i> / <i\\r\\n                                    class=\\\"fa fa-trash-o\\\" style=\\\"font-size:20px;color:grey\\\"></i></ng-template>\\r\\n                            <ng-template #write><a (click)=\\\"forward( '/role/' +  role.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                    <i class=\\\"fa fa-edit\\\" style=\\\"font-size:20px;color:blue\\\"></i>\\r\\n                                </a> / <a (click)=\\\"delete(role.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                    <i class=\\\"fa fa-trash-o\\\" style=\\\"font-size:20px;color:red\\\"></i>\\r\\n                                </a></ng-template>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\" col-12 form-inline\\\">\\r\\n        <div class=\\\"col-4 text-left \\\">\\r\\n            <div *ngIf=\\\"form.pageNo>1; then sus else fail\\\"></div>\\r\\n            <ng-template #sus>\\r\\n                <button (click)=\\\"previous()\\\" class=\\\"btn btn-success\\\">{{'Previous'|translate}}</button>\\r\\n            </ng-template>\\r\\n            <ng-template #fail>\\r\\n                <button (click)=\\\"previous()\\\" disabled class=\\\"btn btn-light \\\">{{'Previous'|translate}}</button>\\r\\n            </ng-template>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"text-center col-4\\\">\\r\\n            <button class=\\\"btn-primary btn  \\\" (click)=\\\"forward('/role/')\\\">{{'Add'|translate}}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-3 text-right \\\">\\r\\n            <div *ngIf=\\\"form.count>(form.pageSize*form.pageNo);then susN else failN\\\"></div>\\r\\n            <ng-template #susN>\\r\\n                <button (click)=\\\"next()\\\" class=\\\"btn btn-success\\\">{{'Next'|translate}}</button>\\r\\n            </ng-template>\\r\\n            <ng-template #failN>\\r\\n                <button (click)=\\\"next()\\\" disabled class=\\\"btn btn-light\\\">{{'Next'|translate}}</button>\\r\\n            </ng-template>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n    <br><br>\\r\\n    </div>\\r\\n</body>\"","export default \"<body class=\\\"container-fluid row \\\">\\n    <div class=\\\"row ml-3\\\" style=\\\" background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;background-size: cover;width:100%;height: 700px;bottom: 0%;\\\">\\n        <div class=\\\"col-sm-4\\\"></div>\\n        <div class=\\\"col-sm-4 pt-5 \\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"text-center mb-4\\\">\\n                        <div *ngIf=\\\"form.data.id>0; then hUpdate else hAdd\\\"></div>\\n                        <ng-template #hAdd>\\n                            <h1>{{'Add Role'|translate}}</h1>\\n                        </ng-template>\\n                        <ng-template #hUpdate>\\n                            <h1>{{'Update Role'|translate}}</h1>\\n                        </ng-template>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\" *ngIf=\\\"form.error && form.message!=null \\\" class=\\\"alert alert-danger\\\">\\n                        {{form.message}}</div>\\n                    <div class=\\\"col-sm-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\"alert alert-success\\\">\\n                        {{form.message}}</div>\\n                    <form>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"rName\\\" class=\\\"form-check-label\\\">{{'Role Name'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span></label>\\n\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.name\\\" name=\\\"name\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter Role Name'|translate}}\\\" id=\\\"rName\\\" [value]=\\\"form.data.name\\\">\\n                            </div>\\n                            <span class=\\\"text-danger mr-auto mb-auto  \\\"> {{form.inputerror.name}}\\n                            </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"description\\\" class=\\\"form-check-label\\\">{{'Role Description'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span></label>\\n\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.description\\\" name=\\\"firstName\\\"\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Role Description'|translate}}\\\" id=\\\"description\\\"\\n                                    [value]=\\\"form.data.description\\\">\\n                            </div>\\n                            <span class=\\\"text-danger mr-auto mb-auto  \\\"> {{form.inputerror.description}}\\n                            </span>\\n                        </div>\\n\\n                        <div class=\\\"form-inline\\\">\\n                            <div class=\\\"col-4\\\"></div>\\n                            <div class=\\\"justify-content-center text-center\\\">\\n                                <div *ngIf=\\\"form.data.id>0; then update else add\\\"></div>\\n                                <ng-template #add>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success\\\">{{'Save'|translate}}</button>&nbsp;\\n                                    <button (click)=\\\"reset()\\\"\\n                                    class=\\\"btn btn-secondary\\\">{{'Reset'|translate}}</button>&nbsp;\\n                                         \\n                                </ng-template>\\n                                <ng-template #update>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success \\\">{{'Update'|translate}}</button>&nbsp;\\n                                    <button (click)=\\\"cancel()\\\" class=\\\"btn btn-secondary\\\">{{'Cancel'|translate}}</button>\\n                                </ng-template>\\n                            </div>\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</body>\"","export default \"<body class=\\\"container-fluid text-center\\\">\\r\\n    <div class=\\\"content-wrapper\\\" style=\\\"padding-top: 0%; background-image: url(./assets/list.jpg); background-repeat: no-repeat;\\r\\n      background-attachment: fixed;\\r\\n      background-size: cover;width:100%;\\r\\n      height: 850px;bottom: 0%;\\\">\\r\\n      <div class=\\\"d-flex bg-primary text-white paddin \\\">\\r\\n        <h1 class=\\\"text-center container-fluid \\\">{{'Student List'|translate}}</h1>\\r\\n      </div>\\r\\n      <div class=\\\"text-center row\\\">\\r\\n        <div class=\\\"col-2\\\"></div>\\r\\n        <form class=\\\"form-inline pt-3  \\\">\\r\\n          <div class=\\\"form-group  pr-3\\\">\\r\\n            <label for=\\\"fName\\\" class=\\\"form-check-label pr-3 \\\">{{'First Name'|translate}} : </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter First Name'|translate}}\\\" name=\\\"firstName\\\"\\r\\n              [(ngModel)]=\\\"form.searchParams.firstName\\\" id=\\\"fName\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group  pr-3\\\">\\r\\n            <label for=\\\"email\\\" class=\\\"form-check-label pr-3 \\\">{{'Email Id'|translate}} : </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter Email ID'|translate}}\\\" name=\\\"email\\\"\\r\\n              [(ngModel)]=\\\"form.searchParams.email\\\" id=\\\"email\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group pr-3\\\">\\r\\n            <label for=\\\"collegeId\\\" class=\\\"form-check-label pr-3\\\">{{'College'|translate}} :</label>&nbsp;\\r\\n            <select class=\\\"form-control\\\" name=\\\"collegeId\\\" [(ngModel)]=\\\"form.searchParams.collegeId\\\" id=\\\"role\\\">\\r\\n              <option [value]=0 [disabled]=\\\"true\\\" selected disabled>{{'Select College'|translate}}</option>\\r\\n              <option *ngFor=\\\"let opt of form.preload.collegeList\\\" [value]=\\\"opt.id\\\">{{opt.name}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          \\r\\n          <button class=\\\"btn-primary btn\\\" (click)=\\\"submit()\\\">{{'Search'|translate}}</button>&nbsp;&nbsp;\\r\\n          <button class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\">{{'Reset'|translate}}</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"col-6  \\\" *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger\\\"> {{form.message}}</div>\\r\\n      <div class=\\\"col-6 \\\" *ngIf=\\\"!form.error && (form.message != null)\\\" class=\\\"alert alert-success\\\">\\r\\n        {{form.message}}</div>\\r\\n  \\r\\n      <br>\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th>{{'S.No'|translate}}</th>\\r\\n                <th>{{'First Name'|translate}}</th>\\r\\n                <th>{{'Last Name'|translate}}</th>\\r\\n                <th>{{'Email'|translate}}</th>\\r\\n                <th>{{'College'|translate}}</th>\\r\\n                <th>{{'Phone'|translate}}</th>\\r\\n                <th>{{'DOB'|translate}}</th>\\r\\n                <th>{{'Edit'|translate}} / {{'Delete'|translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n  \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let student of form.list; let i = index\\\">\\r\\n                <td> {{((form.pageNo-1)*10)+i+1}} </td>\\r\\n                <td> {{ student.firstName }} </td>\\r\\n                <td> {{ student.lastName }} </td>\\r\\n                <td> {{ student.email }} </td>\\r\\n                <td> {{ student.collegeName }} </td>\\r\\n                <td> {{ student.mobileNo }} </td>\\r\\n                <td> {{ student.dob | date : 'dd-MM-yyyy'}} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/student/' +  student.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit\\\" style=\\\"font-size:20px;color:blue\\\"></i>\\r\\n                  </a> / <a (click)=\\\"delete(student.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash-o\\\" style=\\\"font-size:20px;color:red\\\"></i>\\r\\n                  </a>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <div class=\\\" col-12 form-inline mb-0  \\\">\\r\\n            <div class=\\\"col-4 text-left \\\">\\r\\n              <div *ngIf=\\\"form.pageNo>1; then sus else fail\\\"></div>\\r\\n              <ng-template #sus>\\r\\n                <button (click)=\\\"previous()\\\" class=\\\"btn btn-success\\\">{{'previous'|translate}}</button>\\r\\n              </ng-template>\\r\\n              <ng-template #fail>\\r\\n                <button (click)=\\\"previous()\\\" disabled class=\\\"btn btn-light \\\">{{'previous'|translate}}</button>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n            <div class=\\\"col-4 text-center \\\">\\r\\n              <button class=\\\"btn-primary btn \\\" (click)=\\\"forward('/student/')\\\">{{'Add'|translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-4 text-right \\\">\\r\\n              <div *ngIf=\\\"form.count>(form.pageSize*form.pageNo);then susN else failN\\\"></div>\\r\\n              <ng-template #susN>\\r\\n                <button (click)=\\\"next()\\\" class=\\\"btn btn-success\\\">{{'next'|translate}}</button>\\r\\n              </ng-template>\\r\\n              <ng-template #failN>\\r\\n                <button (click)=\\\"next()\\\" disabled class=\\\"btn btn-light\\\">{{'next'|translate}}</button>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n  \\r\\n      <br><br>\\r\\n    </div>\\r\\n  </body>\"","export default \"<body class=\\\" container-fluid row\\\">\\n    <div class=\\\" row ml-3\\\" style=\\\"padding-top: 0%; background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;background-size: cover;width:100%;height: 750px;bottom: 0%;\\\">\\n        <div class=\\\"col-sm-4\\\"></div>\\n        <div class=\\\"col-sm-4 pt-5\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"text-center mb-4\\\">\\n                        <div *ngIf=\\\"form.data.id>0; then hUpdate else hAdd\\\"></div>\\n                        <ng-template #hAdd>\\n                            <h1>{{'Add Student'|translate}}</h1>\\n                        </ng-template>\\n                        <ng-template #hUpdate>\\n                            <h1>{{'Update Student'|translate}}</h1>\\n                        </ng-template>\\n                    </div>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <form>\\n                        <div class=\\\"form-group row \\\">\\n                            <label for=\\\"collegeId\\\" class=\\\"form-check-label \\\">{{'College'|translate}} :<span\\n                                    class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-university grey-text\\\"></i> </div>\\n                                </div>\\n                                <select class=\\\"form-control\\\" name=\\\"collegeId\\\"\\n                                    [(ngModel)]=\\\"form.data.collegeId\\\" id=\\\"collegeId\\\">\\n                                    <option [value]=default [disabled]=\\\"true\\\" selected disabled>{{'Select College'|translate}}\\n                                    </option>\\n                                    \\n                                    <option *ngFor=\\\"let opt of form.preload.collegeList\\\" [value]=\\\"opt.id\\\">{{opt.name}}\\n                                    </option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\" id=\\\"role\\\"> {{form.inputerror.collegeId}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"fName\\\" class=\\\"form-check-label\\\">{{'First Name'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span></label>\\n\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.firstName\\\" name=\\\"firstName\\\"\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter First Name'|translate}}\\\" id=\\\"fName\\\">\\n                            </div>\\n                            <span class=\\\"text-danger mr-auto mb-auto  \\\"> {{form.inputerror.firstName}}\\n                            </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"lName\\\" class=\\\"form-check-label\\\">{{'Last Name'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-o grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.lastName\\\" name=\\\"lastName\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter Last Name'|translate}}\\\" id=\\\"lName\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.lastName}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"mNo\\\" class=\\\"form-check-label\\\">{{'Mobile No'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.mobileNo\\\" name=\\\"mobileNo\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter Mobile Number'|translate}}\\\" id=\\\"mNo\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.mobileNo}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                                <label for=\\\"email\\\" class=\\\"form-check-label\\\">{{'Email'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                                </div>\\n                                <div *ngIf=\\\"form.data.id>0; then lUpdate else lAdd\\\"></div>\\n\\n                                <ng-template #lUpdate>\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.email\\\" name=\\\"email\\\" class=\\\"form-control\\\"\\n                                        placeholder=\\\"Enter Email\\\" id=\\\"login\\\" disabled>\\n                                </ng-template>\\n                                <ng-template #lAdd><input type=\\\"text\\\" [(ngModel)]=\\\"form.data.email\\\" name=\\\"email\\\"\\n                                        class=\\\"form-control\\\" placeholder=\\\"{{'Enter Email'|translate}}\\\" id=\\\"email\\\">\\n                                </ng-template>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.email}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row \\\">\\n                            <label for=\\\"datepicker\\\" class=\\\"form-check-label\\\">{{'Date of birth'|translate}}:<span\\n                                    class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"date\\\" id=\\\"datepicker\\\" name=\\\"dob\\\" [(ngModel)]=\\\"form.data.dob\\\"\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Date of Birth'|translate}}\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\">{{form.inputerror.dob}}</span>\\n                        </div>\\n\\n                        <div class=\\\"form-inline\\\">\\n                            <div class=\\\"col-4\\\"></div>\\n                            <div class=\\\"text-center\\\">\\n                                <div *ngIf=\\\"form.data.id>0; then update else add\\\"></div>\\n                                <ng-template #add>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success\\\">{{'Save'|translate}}</button>&nbsp;\\n                                        <button (click)=\\\"reset()\\\"\\n                                        class=\\\"btn btn-secondary\\\">{{'Reset'|translate}}</button>&nbsp;\\n                                </ng-template>\\n                                <ng-template #update>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success \\\">{{'Update'|translate}}</button>&nbsp;\\n                                    <button (click)=\\\"cancel()\\\" class=\\\"btn btn-secondary\\\">{{'Cancel'|translate}}</button>\\n                                </ng-template>\\n                            </div>\\n                        </div>\\n\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm-4\\\"></div>\\n    </div>\\n</body>\"","export default \"<body class=\\\"container-fluid text-center\\\">\\r\\n    <div class=\\\"content-wrapper\\\" style=\\\"padding-top: 0%; background-image: url(./assets/list.jpg); background-repeat: no-repeat;\\r\\n      background-attachment: fixed;\\r\\n      background-size: cover;width:100%;\\r\\n      height: 850px;bottom: 0%;\\\">\\r\\n      <div class=\\\"d-flex bg-primary text-white paddin \\\">\\r\\n        <h1 class=\\\"text-center container-fluid \\\">{{'Subject List'|translate}}</h1>\\r\\n      </div>\\r\\n      <div class=\\\"text-center row\\\">\\r\\n        <div class=\\\"col-2\\\"></div>\\r\\n        <form class=\\\"form-inline pt-3  \\\">\\r\\n          <div class=\\\"form-group  pr-3\\\">\\r\\n            <label for=\\\"subjectName\\\" class=\\\"form-check-label pr-3 \\\">{{'Subject Name'|translate}} : </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter Subject Name'|translate}}\\\" name=\\\"subjectName\\\"\\r\\n              [(ngModel)]=\\\"form.searchParams.subjectName\\\" id=\\\"fName\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group pr-3\\\">\\r\\n            <label for=\\\"courseId\\\" class=\\\"form-check-label pr-3\\\">{{'Course'|translate}} :</label>&nbsp;\\r\\n            <select class=\\\"form-control\\\" name=\\\"courseId\\\" [(ngModel)]=\\\"form.searchParams.courseId\\\" id=\\\"lname\\\">\\r\\n              <option [value]=0 [disabled]=\\\"true\\\" selected disabled>{{'Select Course Name'|translate}}</option>\\r\\n              <option *ngFor=\\\"let opt of form.preload.courseList\\\" [value]=\\\"opt.id\\\">{{opt.courseName}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <button class=\\\"btn-primary btn\\\" (click)=\\\"submit()\\\">{{'Search'|translate}}</button>&nbsp;&nbsp;\\r\\n          <button class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\">{{'Reset'|translate}}</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"col-6  \\\" *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger\\\"> {{form.message}}</div>\\r\\n      <div class=\\\"col-6 \\\" *ngIf=\\\"!form.error && (form.message != null)\\\" class=\\\"alert alert-success\\\">\\r\\n        {{form.message}}</div>\\r\\n  \\r\\n      <br>\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th>{{'S.No'|translate}}</th>\\r\\n                <th>{{'Name'|translate}}</th>\\r\\n                <th>{{'Description'|translate}}</th>\\r\\n                <th>{{'Course Name'|translate}}</th>\\r\\n                <th>{{'Edit'|translate}} / {{'Delete'|translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n  \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let subject of form.list; let i = index\\\">\\r\\n                <td> {{((form.pageNo-1)*10)+i+1}} </td>\\r\\n                <td> {{ subject.subjectName }} </td>\\r\\n                <td> {{ subject.subjectDescription }} </td>\\r\\n                <td> {{ subject.courseName }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/subject/' +  subject.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit\\\" style=\\\"font-size:20px;color:blue\\\"></i>\\r\\n                  </a> / <a (click)=\\\"delete(subject.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash-o\\\" style=\\\"font-size:20px;color:red\\\"></i>\\r\\n                  </a>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <div class=\\\" col-12 form-inline mb-0  \\\">\\r\\n            <div class=\\\"col-4 text-left \\\">\\r\\n              <div *ngIf=\\\"form.pageNo>1; then sus else fail\\\"></div>\\r\\n              <ng-template #sus>\\r\\n                <button (click)=\\\"previous()\\\" class=\\\"btn btn-success\\\">{{'previous'|translate}}</button>\\r\\n              </ng-template>\\r\\n              <ng-template #fail>\\r\\n                <button (click)=\\\"previous()\\\" disabled class=\\\"btn btn-light \\\">{{'previous'|translate}}</button>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n            <div class=\\\"col-4 text-center \\\">\\r\\n              <button class=\\\"btn-primary btn \\\" (click)=\\\"forward('/subject/')\\\">{{'Add'|translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-4 text-right \\\">\\r\\n              <div *ngIf=\\\"form.count>(form.pageSize*form.pageNo);then susN else failN\\\"></div>\\r\\n              <ng-template #susN>\\r\\n                <button (click)=\\\"next()\\\" class=\\\"btn btn-success\\\">{{'next'|translate}}</button>\\r\\n              </ng-template>\\r\\n              <ng-template #failN>\\r\\n                <button (click)=\\\"next()\\\" disabled class=\\\"btn btn-light\\\">{{'next'|translate}}</button>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n    <br><br>\\r\\n    </div>\\r\\n  </body>\"","export default \"<body class=\\\" container-fluid row \\\">\\n    <div class=\\\"row ml-3\\\" style=\\\"padding-top: 0%; background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;background-size: cover;width:100%;height: 700px;\\\">\\n        <div class=\\\"col-sm-4\\\"></div>\\n        <div class=\\\"col-sm-4 pt-5\\\">\\n            <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"text-center mb-4\\\">\\n                    <div *ngIf=\\\"form.data.id>0; then hUpdate else hAdd\\\"></div>\\n                    <ng-template #hAdd>\\n                        <h1>{{'Add Subject'|translate}}</h1>\\n                    </ng-template>\\n                    <ng-template #hUpdate>\\n                        <h1>{{'Update Subject'|translate}}</h1>\\n                    </ng-template>\\n                </div>\\n                <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\n                    {{form.message}}\\n                </div>\\n                <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\n                    {{form.message}}\\n                </div>\\n                    <form>\\n                        <div class=\\\"form-group row \\\">\\n                            <label for=\\\"courseId\\\" class=\\\"form-check-label \\\">{{'Course Name'|translate}} :<span\\n                                 class=\\\"text-danger\\\">*</span> </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-graduation-cap grey-text\\\"></i>.</div>\\n                                </div>\\n                                <select class=\\\"form-control\\\" name=\\\"courseId\\\"\\n                                    [(ngModel)]=\\\"form.data.courseId\\\" id=\\\"courseId\\\">\\n                                    <option [value]=default [disabled]=\\\"true\\\" selected disabled>{{'Select Course Name'|translate}}\\n                                    </option>\\n                                    <option *ngFor=\\\"let opt of form.preload.courseList\\\" [value]=\\\"opt.id\\\">{{opt.courseName}}</option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\" id=\\\"role\\\"> {{form.inputerror.courseId}}\\n                            </span>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"subjectName\\\" class=\\\"form-check-label\\\">{{'Subject Name'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-book grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.subjectName\\\" name=\\\"subjectName\\\"\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Subject Name'|translate}}\\\" id=\\\"lName\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.subjectName}} </span>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"subjectDescription\\\" class=\\\"form-check-label\\\">{{'Description'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.subjectDescription\\\" name=\\\"subjectDescription\\\"\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Subject Description'|translate}}\\\"\\n                                    id=\\\"subjectDescription\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.subjectDescription}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-inline\\\">\\n                            <div class=\\\"col-4\\\"></div>\\n                            <div class=\\\"text-center\\\">\\n                                <div *ngIf=\\\"form.data.id>0; then update else add\\\"></div>\\n                                <ng-template #add>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success\\\">{{'Save'|translate}}</button>&nbsp;\\n                                        <button (click)=\\\"reset()\\\"\\n                                        class=\\\"btn btn-secondary\\\">{{'Reset'|translate}}</button>&nbsp;\\n                                </ng-template>\\n                                <ng-template #update>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success \\\">{{'Update'|translate}}</button>&nbsp;\\n                                    <button (click)=\\\"cancel()\\\" class=\\\"btn btn-secondary\\\">{{'Cancel'|translate}}</button>\\n                                </ng-template>\\n                            </div>\\n                        </div>\\n\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm-3\\\"></div>\\n    </div>\\n    <br>\\n    <br>\\n</body>\"","export default \"<body class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"\\\" style=\\\"padding-top: 0%; background-image: url(./assets/list.jpg); background-repeat: no-repeat;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;width:100%;\\r\\n    height: 850px;bottom: 0%;\\\">\\r\\n        <div class=\\\"d-flex bg-primary text-white paddin \\\">\\r\\n            <h1 class=\\\"text-center container-fluid \\\">{{'TimeTable List'|translate}}</h1>\\r\\n        </div>\\r\\n        <div class=\\\"text-center row\\\">\\r\\n            <form class=\\\"form-inline pt-3 text-center pl-5\\\">\\r\\n                <div class=\\\"form-group  pr-3\\\">\\r\\n                    <label for=\\\"subjectName\\\" class=\\\"form-check-label pr-3 \\\">{{'Subject Name'|translate}} : </label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter Subject Name'|translate}}\\\" name=\\\"subjectName\\\"\\r\\n                        [(ngModel)]=\\\"form.searchParams.subjectName\\\" id=\\\"subjectName\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group pr-3\\\">\\r\\n                    <label for=\\\"courseId\\\" class=\\\"form-check-label pr-3\\\">{{'Course Name'|translate}}:</label>&nbsp;\\r\\n                    <select class=\\\"form-control\\\" name=\\\"courseId\\\" [(ngModel)]=\\\"form.searchParams.courseId\\\" id=\\\"courseId\\\">\\r\\n                        <option [value]=0 [disabled]=\\\"true\\\" selected disabled>{{'Course Name'|translate}}</option>\\r\\n                  \\r\\n                        <option *ngFor=\\\"let opt of form.preload.courseList\\\" [value]=\\\"opt.id\\\">{{opt.courseName}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"form-group pr-3\\\">\\r\\n                    <label for=\\\"semester\\\" class=\\\"form-check-label pr-3\\\">{{'Semester'|translate}}:\\r\\n                    </label>\\r\\n                    <select [(ngModel)]=\\\"form.data.semester\\\" name=\\\"semester\\\" class=\\\"form-control\\\" id=\\\"semester\\\">\\r\\n                        <option [value]=\\\"null\\\" [disabled]=\\\"true\\\" selected disabled>{{'Select Semester'|translate}}</option>\\r\\n                        <option [value]=\\\"I\\\">I</option>\\r\\n                        <option [value]=\\\"II\\\">II</option>\\r\\n                        <option [value]=\\\"III\\\">III</option>*\\r\\n                        <option [value]=\\\"IV\\\">IV</option>\\r\\n                        <option [value]=\\\"V\\\">V</option>\\r\\n                        <option [value]=\\\"VI\\\">VI</option>\\r\\n                        <option [value]=\\\"VII\\\">VII</option>\\r\\n                        <option [value]=\\\"VIII\\\">VIII</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group pr-3\\\">\\r\\n                    <label for=\\\"datepicker\\\" class=\\\"form-check-label pr-3\\\">{{'Exam Date'|translate}}:\\r\\n                    </label>\\r\\n                    <input type=\\\"date\\\" id=\\\"datepicker\\\" name=\\\"examDate\\\" [(ngModel)]=\\\"form.data.examDate\\\"\\r\\n                        class=\\\"form-control\\\" placeholder=\\\"{{'Enter Date of Exam'|translate}}\\\">\\r\\n                </div>\\r\\n\\r\\n                <button class=\\\"btn-primary btn\\\" (click)=\\\"submit()\\\">{{'Search'|translate}}</button>&nbsp;&nbsp;\\r\\n                <button class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\">{{'Reset'|translate}}</button>\\r\\n            </form>\\r\\n        </div>\\r\\n        <br>\\r\\n        <div class=\\\"col-6  \\\" *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger\\\"> {{form.message}}</div>\\r\\n        <div class=\\\"col-6 \\\" *ngIf=\\\"!form.error && (form.message != null)\\\" class=\\\"alert alert-success\\\">\\r\\n            {{form.message}}</div>\\r\\n\\r\\n        <br>\\r\\n        <div class=\\\"p-1\\\">\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n                <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n                    <thead class=\\\"thead-light text-uppercase\\\">\\r\\n                        <tr>\\r\\n                            <th>{{'S.No'|translate}}</th>\\r\\n                            <th>{{'Course'|translate}}</th>\\r\\n                            <th>{{'Subject'|translate}}</th>\\r\\n                            <th>{{'Semester'|translate}}</th>\\r\\n                            <th>{{'Date'|translate}}</th>\\r\\n                            <th>{{'Time'|translate}}</th>\\r\\n                            <th>{{'Edit'|translate}} / {{'Delete'|translate}}</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let timetable of form.list; let i = index\\\">\\r\\n                            <td> {{((form.pageNo-1)*10)+i+1}} </td>\\r\\n                            <td> {{ timetable.courseName }} </td>\\r\\n                            <td> {{ timetable.subjectName }} </td>\\r\\n                            <td> {{ timetable.semester }} </td>\\r\\n                            <td> {{ timetable.examDate | date : 'dd-MM-yyyy'}} </td>\\r\\n                            <td> {{ timetable.examTime }} </td>\\r\\n                            <td><a (click)=\\\"forward( '/timetable/' +  timetable.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                    <i class=\\\"fa fa-edit\\\" style=\\\"font-size:20px;color:blue\\\"></i>\\r\\n                                </a> / <a (click)=\\\"delete(timetable.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                    <i class=\\\"fa fa-trash-o\\\" style=\\\"font-size:20px;color:red\\\"></i>\\r\\n                                </a>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n                <div class=\\\" col-lg-12 form-inline mb-0  \\\">\\r\\n                    <div class=\\\"col-4 text-left \\\">\\r\\n                        <div *ngIf=\\\"form.pageNo>1; then sus else fail\\\"></div>\\r\\n                        <ng-template #sus>\\r\\n                            <button (click)=\\\"previous()\\\" class=\\\"btn btn-success\\\">{{'Previous'|translate}}</button>\\r\\n                        </ng-template>\\r\\n                        <ng-template #fail>\\r\\n                            <button (click)=\\\"previous()\\\" disabled\\r\\n                                class=\\\"btn btn-light \\\">{{'Previous'|translate}}</button>\\r\\n                        </ng-template>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4 text-center \\\">\\r\\n                        <button class=\\\"btn-primary btn \\\" (click)=\\\"forward('/timetable/')\\\">{{'Add'|translate}}</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4 text-right \\\">\\r\\n                        <div *ngIf=\\\"form.count>(form.pageSize*form.pageNo);then susN else failN\\\"></div>\\r\\n                        <ng-template #susN>\\r\\n                            <button (click)=\\\"next()\\\" class=\\\"btn btn-success\\\">{{'Next'|translate}}</button>\\r\\n                        </ng-template>\\r\\n                        <ng-template #failN>\\r\\n                            <button (click)=\\\"next()\\\" disabled class=\\\"btn btn-light\\\">{{'Next'|translate}}</button>\\r\\n                        </ng-template>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        \\r\\n    <br><br>\\r\\n    </div>\\r\\n</body>\"","export default \"<body class=\\\" container-fluid row\\\">\\n    <div class=\\\"row ml-3 \\\" style=\\\"padding-top: 0%; background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;background-size: cover;width:100%;height: 700px;\\\"> \\n        <div class=\\\"col-sm-4\\\"></div>\\n        <div class=\\\"col-sm-4 pt-5\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"text-center mb-4\\\">\\n                        <div *ngIf=\\\"form.data.id>0; then hUpdate else hAdd\\\"></div>\\n                        <ng-template #hAdd>\\n                            <h1>{{'Add TimeTable'|translate}}</h1>\\n                        </ng-template>\\n                        <ng-template #hUpdate>\\n                            <h1>{{'Update TimeTable'|translate}}</h1>\\n                        </ng-template>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <form>\\n\\n                        <div class=\\\"form-group row \\\">\\n                            <label for=\\\"courseId\\\" class=\\\"form-check-label \\\">{{'Course Name'|translate}} :<span\\n                                    class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file grey-text\\\"></i> </div>\\n                                </div>\\n                                <select class=\\\"form-control\\\" *ngIf=\\\"form.preload.courseList!=null\\\" name=\\\"courseId\\\"\\n                                    [(ngModel)]=\\\"form.data.courseId\\\" id=\\\"courseId\\\">\\n                                    <option [value]=default [disabled]=\\\"true\\\" selected disabled>{{'Select Course Name'|translate}}\\n                                    </option>\\n                                    <option *ngFor=\\\"let opt of form.preload.courseList\\\" [value]=\\\"opt.id\\\">{{opt.courseName}}\\n                                    </option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\" id=\\\"courseId\\\"> {{form.inputerror.courseId}}\\n                            </span>\\n                        </div>\\n\\n\\n                        <div class=\\\"form-group row \\\">\\n                            <label for=\\\"subjectId\\\" class=\\\"form-check-label \\\">{{'Subject Name'|translate}} :<span\\n                                    class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-book grey-text\\\"></i> </div>\\n                                </div>\\n                                <select class=\\\"form-control\\\" *ngIf=\\\"form.preload.subjectList!=null\\\" name=\\\"subjectId\\\"\\n                                    [(ngModel)]=\\\"form.data.subjectId\\\" id=\\\"subjectId\\\">\\n                                    <option [value]=default [disabled]=\\\"true\\\" selected disabled>{{'Select Subject\\n                                        Name'|translate}}\\n                                    </option>\\n                                    <option *ngFor=\\\"let opt of form.preload.subjectList\\\" [value]=\\\"opt.id\\\">{{opt.subjectName}}\\n                                    </option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\" id=\\\"subjectId\\\"> {{form.inputerror.subjectId}}\\n                            </span>\\n                        </div>\\n\\n\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"semester\\\" class=\\\"form-check-label\\\">{{'Semester'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i> </div>\\n                                </div>\\n                                <select [(ngModel)]=\\\"form.data.semester\\\" name=\\\"semester\\\" class=\\\"form-control\\\"\\n                                    id=\\\"semester\\\">\\n                                    <option [value]=\\\"null\\\" [disabled]=\\\"true\\\" selected disabled>{{'Select Semester'|translate}}</option>\\n                                    <option [value]=\\\"I\\\">I</option>\\n                                    <option [value]=\\\"II\\\">II</option>\\n                                    <option [value]=\\\"III\\\">III</option>\\n                                    <option [value]=\\\"IV\\\">IV</option>\\n                                    <option [value]=\\\"V\\\">V</option>\\n                                    <option [value]=\\\"VI\\\">VI</option>\\n                                    <option [value]=\\\"VII\\\">VII</option>\\n                                    <option [value]=\\\"VIII\\\">VIII</option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.semester}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row \\\">\\n                            <label for=\\\"datepicker\\\" class=\\\"form-check-label\\\">{{'Exam Date'|translate}}:<span\\n                                    class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-list-ol grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"date\\\" id=\\\"datepicker\\\" name=\\\"examDate\\\" [(ngModel)]=\\\"form.data.examDate\\\"\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Date of Exam'|translate}}\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\">{{form.inputerror.examDate}}</span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"examTime\\\" class=\\\"form-check-label\\\">{{'Exam Time'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-clock-o grey-text\\\"></i> </div>\\n                                </div>\\n                                <select [(ngModel)]=\\\"form.data.examTime\\\" name=\\\"examTime\\\" class=\\\"form-control\\\"\\n                                    id=\\\"examTime\\\">\\n                                    <option [value]=\\\"null\\\" [disabled]=\\\"true\\\" selected disabled>{{'Select Exam Time'|translate}}</option>\\n                                    <option value=\\\"10:00 am to 01:00 pm\\\">10:00 am to 01:00 pm</option>\\n                                    <option value=\\\"01:00 pm to 04:00 pm\\\">01:00 pm to 04:00 pm</option>\\n                                    <option value=\\\"04:00 pm to 07:00 pm\\\">04:00 pm to 07:00 pm</option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.examTime}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-inline\\\">\\n                            <div class=\\\"col-sm-4\\\"></div>\\n                            <div class=\\\"text-center\\\">\\n                                <div *ngIf=\\\"form.data.id>0; then update else add\\\"></div>\\n                                <ng-template #add>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success\\\">{{'Save'|translate}}</button>&nbsp;\\n                                        <button (click)=\\\"reset()\\\"\\n                                        class=\\\"btn btn-secondary\\\">{{'Reset'|translate}}</button>&nbsp;\\n                               \\n                                </ng-template>\\n                                <ng-template #update>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success \\\">{{'Update'|translate}}</button>&nbsp;\\n                                    <button (click)=\\\"cancel()\\\" class=\\\"btn btn-secondary\\\">{{'Cancel'|translate}}</button>\\n                                </ng-template>\\n                            </div>\\n                        </div>\\n\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm-4\\\"></div>\\n    </div>\\n</body>\"","export default \"<body class=\\\" container-fluid row\\\">\\r\\n    <div class=\\\"row ml-3\\\" style=\\\"padding-top: 0%; background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;width:100%;\\r\\n    height: 700px;\\\">\\r\\n        <div class=\\\"col-sm-4\\\"></div>\\r\\n        <div class=\\\"col-sm-4 pt-5\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"text-center mb-4\\\">\\r\\n                        <h1>{{'Change Password'|translate}}</h1>\\r\\n\\r\\n                        <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\r\\n                            {{form.message}}\\r\\n                        </div>\\r\\n                        <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\r\\n                            {{form.message}}\\r\\n                        </div>\\r\\n                        <form>\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"password\\\" class=\\\"form-check-label\\\">{{'Old Password'|translate}}:\\r\\n                                    <span class=\\\"text-danger\\\">*</span>\\r\\n                                </label>\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <div class=\\\"input-group-prepend\\\">\\r\\n                                        <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\r\\n                                    </div>\\r\\n                                    <input type=\\\"password\\\" [(ngModel)]=\\\"form.data.oldPassword\\\" name=\\\"oldPassword\\\"\\r\\n                                        class=\\\"form-control\\\" placeholder=\\\"{{'Enter Old Password'|translate}}\\\" id=\\\"oldPassword\\\">\\r\\n                                </div>\\r\\n\\r\\n                                <span class=\\\"text-danger mr-auto mb-auto \\\"> {{form.inputerror.oldPassword}} </span>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"password\\\" class=\\\"form-check-label\\\">{{'New Password'|translate}}:\\r\\n                                    <span class=\\\"text-danger\\\">*</span>\\r\\n                                </label>\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <div class=\\\"input-group-prepend\\\">\\r\\n                                        <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\r\\n                                    </div>\\r\\n                                    <input type=\\\"password\\\" [(ngModel)]=\\\"form.data.password\\\" name=\\\"password\\\"\\r\\n                                        class=\\\"form-control\\\" placeholder=\\\"{{'Enter New Password'|translate}}\\\" id=\\\"password\\\">\\r\\n                                </div>\\r\\n\\r\\n                                <span class=\\\"text-danger mr-auto mb-auto \\\"> {{form.inputerror.password}} </span>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"confirmPassword\\\" class=\\\"form-check-label\\\">{{'Confirm Password'|translate}}:\\r\\n                                    <span class=\\\"text-danger\\\">*</span>\\r\\n                                </label>\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <div class=\\\"input-group-prepend\\\">\\r\\n                                        <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\r\\n                                    </div>\\r\\n                                    <input type=\\\"password\\\" [(ngModel)]=\\\"form.data.confirmPassword\\\"\\r\\n                                        name=\\\"confirmPassword\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Confirm Password'|translate}}\\\"\\r\\n                                        id=\\\"confirmPassword\\\">\\r\\n                                </div>\\r\\n\\r\\n                                <span class=\\\"text-danger mr-auto mb-auto \\\"> {{form.inputerror.confirmPassword}} </span>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-inline\\\">\\r\\n                                <div class=\\\"col-4\\\"></div>\\r\\n                                <div class=\\\"text-center\\\">\\r\\n                                    <button (click)=\\\"submit()\\\" class=\\\"btn btn-success \\\">{{'Save'|translate}}</button>&nbsp;\\r\\n                                    <button class=\\\"btn btn-primary  \\\" (click)=\\\"this.forward('myprofile')\\\">{{'My\\r\\n                                        Profile'|translate}}</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</body>\"","export default \"<body class=\\\"container-fluid row\\\">\\r\\n    <div class=\\\"row ml-3\\\" style=\\\"padding-top: 0%; background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;width:100%;\\r\\n    height: 900px;\\\">\\r\\n        <div class=\\\"col-sm-4\\\"></div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"text-center mb-4\\\">\\r\\n                        <h1 class=\\\"text-dark\\\">{{'My Profile'|translate}}</h1>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\r\\n                        {{form.message}}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\r\\n                        {{form.message}}\\r\\n                    </div>\\r\\n                    <form>\\r\\n                        <div class=\\\"form-group row \\\">\\r\\n                            <div *ngIf=\\\"form.data.picName\\\">\\r\\n                                <img src=\\\"http://localhost:8080/User/getPic/{{form.data.id}}\\\" height=\\\"55px\\\"\\r\\n                                    width=\\\"80px\\\">\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"!form.data.picName\\\">\\r\\n                                <img src=\\\"../../assets/default.jpg\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"picture\\\" class=\\\"form-check-label\\\">{{'Profile Picture'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"file\\\" (change)=\\\"onFileSelect($event.target.files)\\\" accept=\\\"image/*\\\"\\r\\n                                    name=\\\"pic\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Select Picture'|translate}}\\\" id=\\\"pic\\\">\\r\\n                            </div>\\r\\n                            \\r\\n                            <span class=\\\"text-danger mr-auto mb-auto  \\\"> {{form.inputerror.picture}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"fName\\\" class=\\\"form-check-label\\\">{{'First Name'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span></label>\\r\\n\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.firstName\\\" name=\\\"firstName\\\"\\r\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter First Name'|translate}}\\\" id=\\\"fName\\\"\\r\\n                                    [value]=\\\"form.data.firstName\\\">\\r\\n                            </div>\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto  \\\"> {{form.inputerror.firstName}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"lName\\\" class=\\\"form-check-label\\\">{{'Last Name'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-o grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.lastName\\\" name=\\\"lastName\\\" class=\\\"form-control\\\"\\r\\n                                    placeholder=\\\"{{'Enter Last Name'|translate}}\\\" id=\\\"lName\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.lastName}} </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"mNo\\\" class=\\\"form-check-label\\\">{{'Mobile No'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.mobileNo\\\" name=\\\"mobileNo\\\" class=\\\"form-control\\\"\\r\\n                                    placeholder=\\\"{{'Enter Mobile Number'|translate}}\\\" id=\\\"mNo\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.mobileNo}} </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"login\\\" class=\\\"form-check-label\\\">{{'Login ID'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.login\\\" name=\\\"login\\\" class=\\\"form-control\\\"\\r\\n                                    placeholder=\\\"{{'Enter Email'|translate}}\\\" id=\\\"login\\\" disabled>\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.login}} </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"password\\\" class=\\\"form-check-label\\\">{{'Password'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"password\\\" [(ngModel)]=\\\"form.data.password\\\" name=\\\"password\\\"\\r\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Password'|translate}}\\\" id=\\\"password\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\"> {{form.inputerror.password}} </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"gender\\\" class=\\\"form-check-label\\\">{{'Gender'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus-double grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <select [(ngModel)]=\\\"form.data.gender\\\" name=\\\"gender\\\" class=\\\"form-control\\\" id=\\\"gender\\\">\\r\\n                                    <option [value]=\\\"null\\\" [disabled]=\\\"true\\\" selected disabled>{{'Select Gender'|translate}}</option>\\r\\n                                    <option [value]=\\\"Male\\\">Male</option>\\r\\n                                    <option [value]=\\\"Female\\\">Female</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.gender}} </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row \\\">\\r\\n                            <label for=\\\"datepicker\\\" class=\\\"form-check-label\\\">{{'Date of birth'|translate}}:<span\\r\\n                                    class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"date\\\" id=\\\"datepicker\\\" name=\\\"dob\\\" [(ngModel)]=\\\"form.data.dob\\\"\\r\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Date of Birth'|translate}}\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\">{{form.inputerror.dob}}</span>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n\\r\\n                        <div class=\\\"form-inline\\\">\\r\\n                            <div class=\\\"col-3\\\"></div>\\r\\n                            <div class=\\\"text-center\\\">\\r\\n                                <button (click)=\\\"submit()\\\"\\r\\n                                    class=\\\"btn btn-success \\\">{{'Update'|translate}}</button>&nbsp;\\r\\n                                <button (click)=\\\"this.forward('changepassword')\\\" class=\\\"btn btn-secondary\\\">{{'Change\\r\\n                                    Password'|translate}}</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\"></div>\\r\\n    </div>\\r\\n</body>\"","export default \"<body class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"\\\" style=\\\"padding-top: 0%; background-image: url(./assets/list.jpg); background-repeat: no-repeat;\\r\\n      background-attachment: fixed;\\r\\n      background-size: cover;width:100%;\\r\\n      height: 900px;bottom: 0%;\\\">\\r\\n      <div class=\\\"d-flex bg-primary text-white paddin \\\">\\r\\n        <h1 class=\\\"text-center container-fluid \\\">{{'User List'|translate}}</h1>\\r\\n      </div>\\r\\n      <div class=\\\"text-center row\\\">\\r\\n        <div class=\\\"col-2\\\"></div>\\r\\n        <form class=\\\"form-inline pt-3 mr-3 \\\">\\r\\n          <div class=\\\"form-group  pr-3\\\">\\r\\n            <label for=\\\"fName\\\" class=\\\"form-check-label pr-3 \\\">{{'First Name'|translate}} : </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter First Name'|translate}}\\\" name=\\\"firstName\\\"\\r\\n              [(ngModel)]=\\\"form.searchParams.firstName\\\" id=\\\"fName\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group pr-3\\\">\\r\\n            <label for=\\\"lName\\\" class=\\\"form-check-label pr-3 \\\">{{'Login Id'|translate}} : </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"login\\\" id=\\\"lName\\\" placeholder=\\\"{{'Enter Login Id'|translate}}\\\"\\r\\n              [(ngModel)]=\\\"form.searchParams.login\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group pr-3\\\">\\r\\n            <label for=\\\"role\\\" class=\\\"form-check-label pr-3\\\">{{'Role'|translate}} :</label>&nbsp;\\r\\n            <select class=\\\"form-control\\\" name=\\\"roleId\\\" [(ngModel)]=\\\"form.searchParams.roleId\\\" id=\\\"role\\\">\\r\\n              <option [value]=0 [disabled]=\\\"true\\\" selected disabled>{{'Select User Role'|translate}}</option>\\r\\n              <option *ngFor=\\\"let opt of form.preload.roleList\\\" [value]=\\\"opt.id\\\">{{opt.name}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <button class=\\\"btn-primary btn\\\" (click)=\\\"submit()\\\">{{'Search'|translate}}</button>&nbsp;&nbsp;\\r\\n          <button class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\">{{'Reset'|translate}}</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"col-6 \\\" *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger\\\"> {{form.message}}</div>\\r\\n      <div class=\\\"col-6 \\\" *ngIf=\\\"!form.error && (form.message != null)\\\" class=\\\"alert alert-success\\\">\\r\\n        {{form.message}}</div>\\r\\n  \\r\\n      <br>\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th>{{'S.No'|translate }}</th>\\r\\n                <th>{{'Image'|translate}}</th>\\r\\n                <th>{{'First Name' |translate}}</th>\\r\\n                <th>{{'Last Name' |translate }}</th>\\r\\n                <th>{{'Login ID' | translate  }}</th>\\r\\n                <th>{{'Gender'| translate}}</th>\\r\\n                <th>{{'Role'|translate}}</th>\\r\\n                <th>{{'Phone'|translate}}</th>\\r\\n                <th>{{'DOB'|translate}}</th>\\r\\n                <th>{{'Edit'|translate}} /{{'Delete'|translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n  \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let user of form.list; let i = index\\\">\\r\\n                <td> {{((form.pageNo-1)*10)+i+1}} </td>\\r\\n                <td>\\r\\n                  <div *ngIf=\\\"user.picName\\\" >\\r\\n                  <img src=\\\"http://localhost:8080/User/getPic/{{user.id}}\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\r\\n                </div>\\r\\n                <div *ngIf=\\\"!user.picName\\\" >\\r\\n                  <img src=\\\"./assets/default.jpg\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\r\\n                </div> \\r\\n                </td>\\r\\n                <td> {{ user.firstName}} </td>\\r\\n                <td> {{ user.lastName }} </td>\\r\\n                <td> {{ user.login }} </td>\\r\\n                <td> {{ user.gender }} </td>\\r\\n                <td> {{ user.roleName }} </td>\\r\\n                <td> {{ user.mobileNo }} </td>\\r\\n                <td> {{ user.dob | date : 'dd-MM-yyyy'}} </td>\\r\\n                <td>\\r\\n                  <div *ngIf=\\\"user.roleId==1;then read else write\\\"></div>\\r\\n                  <ng-template #read><i class=\\\"fa fa-edit\\\" style=\\\"font-size:20px;color:grey\\\"></i> / <i\\r\\n                      class=\\\"fa fa-trash-o\\\" style=\\\"font-size:20px;color:grey\\\"></i></ng-template>\\r\\n                  <ng-template #write><a (click)=\\\"forward( '/user/' +  user.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                      <i class=\\\"fa fa-edit\\\" style=\\\"font-size:20px;color:blue\\\"></i>\\r\\n                    </a> / <a (click)=\\\"delete(user.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                      <i class=\\\"fa fa-trash-o\\\" style=\\\"font-size:20px;color:red\\\"></i>\\r\\n                    </a></ng-template>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <div class=\\\"form-inline \\\">\\r\\n            <div class=\\\"col-4 text-left \\\">\\r\\n              <div *ngIf=\\\"form.pageNo>1; then sus else fail\\\"></div>\\r\\n              <ng-template #sus>\\r\\n                <button (click)=\\\"previous()\\\" class=\\\"btn btn-success\\\">{{'previous'|translate}}</button>\\r\\n              </ng-template>\\r\\n              <ng-template #fail>\\r\\n                <button (click)=\\\"previous()\\\" disabled class=\\\"btn btn-light \\\">{{'previous'|translate}}</button>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n            <div class=\\\"col-4 text-center \\\">\\r\\n              <button class=\\\"btn-primary btn \\\" (click)=\\\"forward('/user/')\\\">{{'Add'|translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-4 text-right \\\">\\r\\n              <div *ngIf=\\\"form.count>(form.pageSize*form.pageNo);then susN else failN\\\"></div>\\r\\n              <ng-template #susN>\\r\\n                <button (click)=\\\"next()\\\" class=\\\"btn btn-success\\\">{{'next'|translate}}</button>\\r\\n              </ng-template>\\r\\n              <ng-template #failN>\\r\\n                <button (click)=\\\"next()\\\" disabled class=\\\"btn btn-light\\\">{{'next'|translate}}</button>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br><br>\\r\\n    </div>\\r\\n  </body>\"","export default \"<div class=\\\"container-fluid row \\\" >\\n    <div class=\\\"row ml-3\\\" style=\\\"padding-top: 0%; background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;background-size: cover;width:100%;height: 950px;bottom: 0%;\\\">\\n\\n    <div class=\\\"col-sm-4\\\"></div>\\n    <div class=\\\"col-sm-4 pt-5 \\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"text-center mb-4\\\">\\n                    <div *ngIf=\\\"form.data.id>0; then hUpdate else hAdd\\\"></div>\\n                    <ng-template #hAdd>\\n                        <h1 class=\\\"text-dark\\\">{{'Add User'|translate}}</h1>\\n                    </ng-template>\\n                    <ng-template #hUpdate>\\n                        <h1 class=\\\"text-dark\\\">{{'Update User'|translate}}</h1>\\n                    </ng-template>\\n                </div>\\n                <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\n                    {{form.message}}\\n                </div>\\n                <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\n                    {{form.message}}\\n                </div>\\n                <form>\\n                    <div class=\\\"form-group row \\\">\\n                        <label for=\\\"role\\\" class=\\\"form-check-label \\\">{{'Role'|translate}} :<span\\n                                class=\\\"text-danger\\\">*</span>\\n                        </label>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i> </div>\\n                            </div>\\n                            <select class=\\\"form-control\\\" *ngIf=\\\"form.preload.roleList!=null\\\" name=\\\"roleId\\\"\\n                                [(ngModel)]=\\\"form.data.roleId\\\" id=\\\"role\\\">\\n                                <option [value]=default [disabled]=\\\"true\\\" selected disabled>{{'Select User Role'|translate}}\\n                                </option>\\n                                <option *ngFor=\\\"let opt of form.preload.roleList\\\" [value]=\\\"opt.id\\\">{{opt.name}}\\n                                </option>\\n                            </select>\\n                        </div>\\n\\n                        <span class=\\\"text-danger mr-auto mb-auto \\\" id=\\\"role\\\"> {{form.inputerror.roleId}} </span>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"fName\\\" class=\\\"form-check-label\\\">{{'First Name'|translate}}:\\n                            <span class=\\\"text-danger\\\">*</span></label>\\n\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                            </div>\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.firstName\\\" name=\\\"firstName\\\"\\n                                class=\\\"form-control\\\" placeholder=\\\"{{'Enter First Name'|translate}}\\\" id=\\\"fName\\\"\\n                                [value]=\\\"form.data.firstName\\\">\\n                        </div>\\n                        <span class=\\\"text-danger mr-auto mb-auto  \\\"> {{form.inputerror.firstName}}\\n                        </span>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"lName\\\" class=\\\"form-check-label\\\">{{'Last Name'|translate}}:\\n                            <span class=\\\"text-danger\\\">*</span>\\n                        </label>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-o grey-text\\\"></i> </div>\\n                            </div>\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.lastName\\\" name=\\\"lastName\\\" class=\\\"form-control\\\"\\n                                placeholder=\\\"{{'Enter Last Name'|translate}}\\\" id=\\\"lName\\\">\\n                        </div>\\n\\n                        <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.lastName}} </span>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"mNo\\\" class=\\\"form-check-label\\\">{{'Mobile No'|translate}}:\\n                            <span class=\\\"text-danger\\\">*</span>\\n                        </label>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\n                            </div>\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.mobileNo\\\" name=\\\"mobileNo\\\" class=\\\"form-control\\\"\\n                                placeholder=\\\"{{'Enter Mobile Number'|translate}}\\\" id=\\\"mNo\\\">\\n                        </div>\\n\\n                        <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.mobileNo}} </span>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"login\\\" class=\\\"form-check-label\\\">{{'Login ID'|translate}}:\\n                            <span class=\\\"text-danger\\\">*</span>\\n                        </label>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                            </div>\\n                            <div *ngIf=\\\"form.data.id>0; then lUpdate else lAdd\\\"></div>\\n                            <ng-template #lUpdate>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.login\\\" name=\\\"login\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter Email'|translate}}\\\" id=\\\"log\\\">\\n                            </ng-template>\\n                            <ng-template #lAdd><input type=\\\"text\\\" [(ngModel)]=\\\"form.data.login\\\" name=\\\"login\\\"\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Email'|translate}}\\\" id=\\\"login\\\">\\n                            </ng-template>\\n                        </div>\\n\\n                        <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.login}} </span>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"password\\\" class=\\\"form-check-label\\\">{{'Password'|translate}}:\\n                            <span class=\\\"text-danger\\\">*</span>\\n                        </label>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\n                            </div>\\n                            <input type=\\\"password\\\" [(ngModel)]=\\\"form.data.password\\\" name=\\\"password\\\"\\n                                class=\\\"form-control\\\" placeholder=\\\"{{'Enter Password'|translate}}\\\" id=\\\"password\\\">\\n                        </div>\\n\\n                        <span class=\\\"text-danger mr-auto mb-auto \\\"> {{form.inputerror.password}} </span>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"gender\\\" class=\\\"form-check-label\\\">{{'Gender'|translate}}:\\n                            <span class=\\\"text-danger\\\">*</span>\\n                        </label>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus-double grey-text\\\"></i> </div>\\n                            </div>\\n                            <select [(ngModel)]=\\\"form.data.gender\\\" name=\\\"gender\\\" class=\\\"form-control\\\" id=\\\"gender\\\">\\n                                <option [value]=\\\"null\\\" [disabled]=\\\"true\\\" selected disabled>{{'Select Gender'|translate}}</option>\\n                                <option [value]=\\\"Male\\\">Male</option>\\n                                <option [value]=\\\"Female\\\">Female</option>\\n                            </select>\\n                        </div>\\n\\n                        <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.gender}} </span>\\n                    </div>\\n\\n                    <div class=\\\"form-group row \\\">\\n                        <label for=\\\"datepicker\\\" class=\\\"form-check-label\\\">{{'Date of birth'|translate}}:<span\\n                                class=\\\"text-danger\\\">*</span>\\n                        </label>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i> </div>\\n                            </div>\\n                            <input type=\\\"date\\\" id=\\\"datepicker\\\" name=\\\"dob\\\" [(ngModel)]=\\\"form.data.dob\\\"\\n                                class=\\\"form-control\\\" placeholder=\\\"{{'Enter Date of Birth'|translate}}\\\">\\n                        </div>\\n\\n                        <span class=\\\"text-danger mr-auto mb-auto \\\">{{form.inputerror.dob}}</span>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"picture\\\" class=\\\"form-check-label\\\">{{'Upload Image'|translate}}:\\n                        </label>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file-picture-o grey-text\\\"></i> </div>\\n                            </div>\\n                            <input type=\\\"file\\\" (change)=\\\"onFileSelect($event.target.files)\\\" accept=\\\"image/*\\\"\\n                                name=\\\"pic\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Upload Image'|translate}}\\\" id=\\\"pic\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-inline\\\">\\n                        <div class=\\\"col-4\\\"></div>\\n                        <div class=\\\"text-center\\\">\\n                            <div *ngIf=\\\"form.data.id>0; then update else add\\\"></div>\\n                            <ng-template #add>\\n                                <button (click)=\\\"submit()\\\"\\n                                    class=\\\"btn btn-success\\\">{{'Save'|translate}}</button>&nbsp;\\n                                    <button (click)=\\\"reset()\\\"\\n                               class=\\\"btn btn-secondary\\\">{{'Reset'|translate}}</button>&nbsp;\\n                                    \\n                            </ng-template>\\n                            <ng-template #update>\\n                                <button (click)=\\\"submit()\\\"\\n                                    class=\\\"btn btn-success \\\">{{'Update'|translate}}</button>&nbsp;\\n                                <button (click)=\\\"cancel()\\\" class=\\\"btn btn-secondary\\\">{{'Cancel'|translate}}</button>\\n                            </ng-template>\\n                        </div>\\n                    </div>\\n\\n\\n\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-sm-4\\\"></div>\\n</div>\\n</div>\"","export default \"<body class=\\\"container-fluid row \\\">\\n    <div class=\\\"content-wrapper row ml-3\\\" style=\\\"padding-top: 0%; background-image: url(./assets/wel.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;background-size: cover;width:100%;height: 650px;bottom: 0%;\\\">\\n\\n        <div class=\\\"col-sm-12\\\">\\n            \\n            <h1 class=\\\"text-light text-center font-weight-bold \\\" style=\\\"margin-top: 17%;\\\">{{'Welcome To Online Result System'|translate}}</h1>\\n        </div>\\n\\n    </div>\\n</body>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Component, NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CollegeListComponent } from './college/college-list.component';\nimport { CollegeComponent } from './college/college.component';\nimport { CourseListComponent } from './course/course-list.component';\nimport { CourseComponent } from './course/course.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { FacultyListComponent } from './faculty/faculty-list.component';\nimport { FacultyComponent } from './faculty/faculty.component';\nimport { LoginComponent } from './login/login.component';\nimport { UserRegistrationComponent } from './login/user-registration.component';\nimport { MarksheetComponent } from './marksheet/marksheet.component';\nimport { GetMarksheetComponent } from './marksheet/get-marksheet.component';\nimport { MarksheetListComponent } from './marksheet/marksheet-list.component';\nimport { MeritListComponent } from './marksheet/merit-list.component';\nimport { RoleListComponent } from './role/role-list.component';\nimport { RoleComponent } from './role/role.component';\nimport { StudentListComponent } from './student/student-list.component';\nimport { StudentComponent } from './student/student.component';\nimport { SubjectListComponent } from './subject/subject-list.component';\nimport { SubjectComponent } from './subject/subject.component';\nimport { TimetableListComponent } from './timetable/timetable-list.component';\nimport { TimetableComponent } from './timetable/timetable.component';\nimport { ChangePasswordComponent } from './user/change-password.component';\nimport { UserListComponent } from './user/user-list.component';\nimport { UserComponent } from './user/user.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { MyProfileComponent } from './user/my-profile.component';\nimport { ForgotPasswordComponent } from './login/forgot-password.component';\n\nconst routes: Routes = [\n  {\n    path: 'user',\n    component: UserComponent\n  },\n  {\n    path: 'user/:id',\n    component: UserComponent\n  },\n  {\n    path: 'userlist',\n    component: UserListComponent\n  },\n  {\n    path: 'role',\n    component: RoleComponent\n  },\n  {\n    path: 'role/:id',\n    component: RoleComponent\n  },\n  {\n    path: 'rolelist',\n    component: RoleListComponent\n  },\n  {\n    path: 'subject',\n    component: SubjectComponent\n  },\n  {\n    path: 'subject/:id',\n    component: SubjectComponent\n  },\n  {\n    path: 'subjectlist',\n    component: SubjectListComponent\n  },\n  {\n    path: 'student',\n    component: StudentComponent\n  },\n  {\n    path: 'student/:id',\n    component: StudentComponent\n  },\n  {\n    path: 'studentlist',\n    component: StudentListComponent\n  },\n  {\n    path: 'college',\n    component: CollegeComponent\n  },\n  {\n    path: 'college/:id',\n    component: CollegeComponent\n  },\n  {\n    path: 'collegelist',\n    component: CollegeListComponent\n  },\n  {\n    path: 'course',\n    component: CourseComponent\n  },\n  {\n    path: 'course/:id',\n    component: CourseComponent\n  },\n  {\n    path: 'courselist',\n    component: CourseListComponent\n  },\n  {\n    path: 'timetable',\n    component: TimetableComponent\n\n  },\n  {\n    path: 'timetable/:id',\n    component: TimetableComponent\n  },\n  {\n    path: 'timetablelist',\n    component: TimetableListComponent\n  },\n    {\n      path: 'marksheet',\n      component: MarksheetComponent\n    },\n  \n  {\n    path: 'marksheetlist',\n    component: MarksheetListComponent\n  },\n  {\n    \n      path: 'marksheet/:id',\n      component: MarksheetComponent\n    },\n  \n  {\n    path:'getmarksheet',\n    component: GetMarksheetComponent\n  },\n  {\n    path: 'meritlist',\n    component: MeritListComponent\n  },\n  {\n    path: 'faculty',\n    component: FacultyComponent\n  },\n  {\n    path: 'facultylist',\n    component: FacultyListComponent\n  },\n  {\n    path: 'faculty/:id',\n    component: FacultyComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'login/:in',\n    component: LoginComponent\n  },\n  {\n    path:'login/:id',\n    component:LoginComponent\n    },\n  {\n    path:'signup',\n    component:UserRegistrationComponent\n\n  },\n  {\n    path: 'changepassword',\n    component: ChangePasswordComponent\n\n  },\n  {\n    path: 'forgotpassword',\n    component: ForgotPasswordComponent\n  },\n  {\n    path: 'myprofile',\n    component: MyProfileComponent,\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent\n  },\n  {\n    path: 'welcome',\n    component:WelcomeComponent\n  },\n  {\n    path: '',\n    component:WelcomeComponent\n  },\n  // {\n  //   path:'**',\n  //   component:PageNotFoundComponent\n  // },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Project5_UI';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BaseCtl } from './base.component';\nimport { RoleComponent } from './role/role.component';\nimport { RoleListComponent } from \"./role/role-list.component\";\nimport { FormsModule } from '@angular/forms';\nimport { HttpServiceService } from './http-service.service';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { CourseComponent } from './course/course.component';\nimport { CourseListComponent } from './course/course-list.component';\nimport { CollegeComponent } from './college/college.component';\nimport { CollegeListComponent } from './college/college-list.component';\nimport { StudentComponent } from './student/student.component';\nimport { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\nimport { TranslateLoader, TranslateModule } from \"@ngx-translate/core\";\nimport { NavComponent } from './nav/nav.component';\nimport { FootComponent } from './foot/foot.component'\nimport { StudentListComponent } from './student/student-list.component';\nimport { SubjectComponent } from './subject/subject.component';\nimport { SubjectListComponent } from './subject/subject-list.component';\nimport { MarksheetComponent } from './marksheet/marksheet.component';\nimport { UserComponent } from './user/user.component';\nimport { UserListComponent } from './user/user-list.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MarksheetListComponent } from './marksheet/marksheet-list.component';\nimport { GetMarksheetComponent } from './marksheet/get-marksheet.component';\nimport { MeritListComponent } from './marksheet/merit-list.component';\nimport { TimetableComponent } from './timetable/timetable.component';\nimport { TimetableListComponent } from './timetable/timetable-list.component';\nimport { FacultyComponent } from './faculty/faculty.component';\nimport { FacultyListComponent } from './faculty/faculty-list.component';\nimport { LoginComponent } from './login/login.component';\nimport { UserRegistrationComponent } from './login/user-registration.component';\nimport { ChangePasswordComponent } from './user/change-password.component';\nimport { MyProfileComponent } from './user/my-profile.component';\nimport { ForgotPasswordComponent } from './login/forgot-password.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nexport function myHttpLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, \"./assets/i18n/\", \".json\");\n}\n@NgModule({\n  declarations: [\n    AppComponent,\n    RoleComponent,\n    RoleListComponent,\n    CourseComponent,\n    CourseListComponent,\n    CollegeComponent,\n    CollegeListComponent,\n    StudentComponent,\n    StudentListComponent,\n    NavComponent,\n    FootComponent,\n    SubjectComponent,\n    SubjectListComponent,\n    MarksheetComponent,\n    MarksheetListComponent,\n    GetMarksheetComponent,\n    MeritListComponent,\n    UserComponent,\n    UserListComponent,\n    WelcomeComponent,\n    DashboardComponent,\n    TimetableComponent,\n    TimetableListComponent,\n    FacultyComponent,\n    FacultyListComponent,\n    LoginComponent,\n    UserRegistrationComponent,\n    ChangePasswordComponent,\n    MyProfileComponent,\n    ForgotPasswordComponent,\n    PageNotFoundComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n     TranslateModule.forRoot({\n       loader: {\n         provide: TranslateLoader,\n         useFactory: myHttpLoader,\n         deps: [HttpClient],\n       },\n     })\n\n  ],\n  \n  providers: [\n    HttpServiceService,\n    //DataValidator,\n    LoginComponent,\n    CookieService,\n    {provide: LocationStrategy,\n      useClass: HashLocationStrategy}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ActivatedRoute } from \"@angular/router\";\r\nimport { BaseCtl } from \"./base.component\";\r\nimport { ServiceLocatorService } from \"./service-locator.service\";\r\n\r\nexport class BaseListCtl extends BaseCtl {\r\n    //flag: boolean;\r\n    constructor(public endpoint, public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n        super(endpoint, locator, route);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.preload();\r\n        this.form.data.pageNo = 1;\r\n        this.form.data.pageSize = 10;\r\n        this.display();\r\n    }\r\n\r\n    display() {\r\n        \r\n        this.form.error=false;\r\n        this.form.message=null;\r\n        this.search();\r\n    }\r\n\r\n    submit() {\r\n        \r\n        this.form.error=false;\r\n        this.form.message=null;\r\n        this.form.data.pageNo = 1;\r\n        this.search();\r\n    }\r\n\r\n\r\n    delete(id) {\r\n        super.delete(id);\r\n\r\n\r\n    }\r\n\r\n    next() {\r\n        this.form.error=false;\r\n        this.form.message=null;\r\n        this.form.data.pageNo++;\r\n        console.log(this.form.data.pageNo + '----pageNo')\r\n        this.display();\r\n    }\r\n\r\n    previous() {\r\n        this.form.error=false;\r\n        this.form.message=null;\r\n        if (this.form.data.pageNo > 0) {\r\n            this.form.data.pageNo--;\r\n            this.display();\r\n        }\r\n    }\r\n    reset() {\r\n        //this.flag = false;\r\n        \r\n        this.form.searchParams = {};\r\n        this.form.error=false;\r\n        this.form.message=null;\r\n        this.submit()\r\n    }\r\n    deleteAll(ids) {\r\n        for (let i = 0; i < ids.length; i++) {\r\n            this.delete(ids[i]);\r\n        }\r\n    }\r\n    selectAll(){\r\n        \r\n    }\r\n}","import { OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from './service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { EndpointServiceService } from './endpoint-service.service';\r\n\r\n\r\nexport class BaseCtl implements OnInit {\r\n  sadaf: {};\r\n  new : number\r\n  reset() {\r\n    this.form.error= false,\r\n    this.form.message= null,\r\n    this.sadaf = {},\r\n     this.form.inputerror = {};\r\n     this.form.data = {id:null,pageNo:null,pageSize:null};\r\n     this.display();\r\n  }\r\n\r\n  public api = {\r\n    endpoint: null,\r\n    get: null,\r\n    save: null,\r\n    search: null,\r\n    delete: null,\r\n    preload: null,\r\n  }\r\n  \r\n\r\n  initApi(ep) {\r\n    this.api.endpoint = ep;\r\n    this.api.get = ep + \"/get\";\r\n    this.api.save = ep + \"/save\";\r\n    this.api.search = ep + \"/search\";\r\n    this.api.delete = ep + \"/delete\";\r\n    this.api.preload = ep + \"/preload\";\r\n    //console.log(\"API\", this.api);\r\n  }\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: null,\r\n    data: { id: null, pageNo: 0, pageSize: 10 },\r\n    inputerror: {},\r\n    searchParams: {},\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0,\r\n    pageSize: 0,\r\n    count: 0,\r\n\r\n  };\r\n\r\n  constructor(public endpoint: EndpointServiceService, public serviceLocator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    var _self = this;\r\n\r\n    _self.initApi(endpoint);\r\n    serviceLocator.getPathVariable(route, function (params) {\r\n      _self.form.data.id = params[\"id\"];\r\n      console.log('I GOT ID', _self.form.data.id);\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.preload();\r\n    if (this.form.data.id && this.form.data.id > 0) {\r\n      this.display();\r\n    }\r\n    console.log('run')\r\n  }\r\n\r\n  preload() {\r\n    var _self = this;\r\n    this.serviceLocator.httpService.get(_self.api.preload, function (res) {\r\n      if (res.success) {\r\n        _self.form.preload = res.result;\r\n      } else {\r\n        _self.form.error = false;\r\n        //_self.form.message = res.result.message;\r\n        //_self.form.message = \"An Error Occured please reload\";\r\n      }\r\n      //console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  display() {\r\n\r\n    var _self = this;\r\n    \r\n    this.serviceLocator.httpService.get(_self.api.get + \"/\" + _self.form.data.id, function (res) {\r\n\r\n      if (res.success) {\r\n        _self.populateForm(_self.form.data, res.result);\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      //console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n\r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = null;\r\n      _self.form.inputerror = {};\r\n\r\n      if (res.success) {\r\n        _self.form.error = false;\r\n        \r\n        _self.form.message = \"Data is saved\";\r\n        \r\n        //_self.forward('/user/'+res.result)\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.inputerror = res.result.inputerror;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      //console.log('FORM', _self.form);\r\n    });\r\n  }\r\n  \r\n  search() {\r\n    var _self = this;\r\n    //_self.populateForm(_self.form.data,_self.form.searchParams)\r\n    _self.form.searchParams[\"pageNo\"] = _self.form.data.pageNo;\r\n    _self.form.searchParams[\"pageSize\"] = _self.form.data.pageSize;\r\n    //console.log(\"Search Form\", _self.form.searchParams);\r\n    this.serviceLocator.httpService.post(_self.api.search, _self.form.searchParams, function (res) {\r\n\r\n      if (res.success) {\r\n        _self.form.list = res.result.list;\r\n        console.log(_self.form.list);\r\n        _self.form.pageNo = res.result.pageNo;\r\n        _self.form.pageSize = res.result.pageSize;\r\n        _self.form.count = res.result.count;\r\n        _self.form.searchParams = res.result.searchParams;\r\n\r\n        if (_self.form.count == 0) {\r\n          console.log(\"gardad------------------------------\")\r\n          _self.form.message = \"No record found\";\r\n          _self.form.error = true;\r\n        }\r\n        //console.log(\"List Size\", _self.form.count,\"Page No\",_self.form.pageNo,\"page Size\",_self.form.pageSize,\"count\",_self.form.count);\r\n      } else {\r\n        _self.form.error = false;\r\n        }\r\n      \r\n      console.log(\"form ----------------------\"+_self.form.message);\r\n    });\r\n  }\r\n\r\n  delete(id) {\r\n    var _self = this;\r\n    this.serviceLocator.httpService.get(_self.api.delete + \"/\" + id, function (res) {\r\n      if (res.success) {\r\n        _self.form.error = false;\r\n        _self.form.message = \"Data is deleted\";\r\n        _self.search();\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.message = res.result.message;\r\n      }\r\n    });\r\n  }\r\n\r\n  forward(page) {\r\n    this.serviceLocator.forward(page);\r\n  }\r\n\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { BaseListCtl } from \"../base-list.component\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\n\r\n@Component({\r\n    selector:'app-college-list',\r\n    templateUrl:'college-list.component.html',\r\n})\r\nexport class CollegeListComponent extends BaseListCtl{\r\n    constructor(public serviceLocator: ServiceLocatorService,public route:ActivatedRoute) {\r\n        super(serviceLocator.endpointService.COLLEGE,serviceLocator,route);\r\n      \r\n      }\r\n      populateForm(form, searchParams) {\r\n        form.collegeName = searchParams.collegeName;\r\n        form.city = searchParams.city;\r\n        form.state = searchParams.state;    \r\n  }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbGxlZ2UvY29sbGVnZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-college',\n  templateUrl: './college.component.html',\n  styleUrls: ['./college.component.css']\n})\nexport class CollegeComponent extends BaseCtl {\n\n  constructor(public serviceLocator:ServiceLocatorService,public route:ActivatedRoute) {\n    super(serviceLocator.endpointService.COLLEGE,serviceLocator,route );\n  }\n  populateForm(form,data){\n    form.id = data.id;\n    form.name = data.name;\n    form.address = data.address;\n    form.city = data.city;\n    form.state = data.state;\n    form.phoneNo = data.phoneNo;\n  \n  }\n  cancel(){\n    this.forward('/collegelist')\n  }\n  \n}\n","import { Component } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { BaseListCtl } from \"../base-list.component\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\n\r\n\r\n@Component({\r\n    selector:'app-course-list',\r\n    templateUrl:'course-list.component.html',\r\n})\r\nexport class CourseListComponent extends BaseListCtl{\r\n    constructor(public serviceLocator: ServiceLocatorService,public route:ActivatedRoute) {\r\n        super(serviceLocator.endpointService.COURSE,serviceLocator,route);\r\n      \r\n      }\r\n      populateForm(form,searchParams){\r\n       // form.collegeId = searchParams.collegeId;\r\n        form.name = searchParams.name;\r\n        form.courseDescription = searchParams.courseDescription;\r\n        form.courseDuration = searchParams.courseDuration;\r\n        \r\n      }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvdXJzZS9jb3Vyc2UuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styleUrls: ['./course.component.css']\n})\nexport class CourseComponent extends BaseCtl {\n\n  constructor(public serviceLocator:ServiceLocatorService,public route:ActivatedRoute) {\n    super(serviceLocator.endpointService.COURSE,serviceLocator,route );\n  }\n\n  populateForm(form,data){\n    form.id=data.id\n    form.courseName=data.courseName\n    form.courseDescription=data.courseDescription\n    form.courseDuration=data.courseDuration\n  }\n\n  cancel(){\n    this.forward('/courselist')\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  \n  constructor() {\n\n   }\n\n  ngOnInit() {\n      \n  }\n\n}\n\n\n\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class EndpointServiceService {\n\n\n  constructor() { }\n\n  public SERVER_URL = \"http://localhost:8080\";\n  public AUTH = this.SERVER_URL + \"/Auth\";\n  public MESSAGE = this.SERVER_URL + \"/Message\";\n  public USER = this.SERVER_URL + \"/User\";\n  public ROLE = this.SERVER_URL + \"/Role\";\n  public COLLEGE = this.SERVER_URL + \"/College\";\n  public MARKSHEET = this.SERVER_URL + \"/Marksheet\";\n  public STUDENT = this.SERVER_URL + \"/Student\";\n  public COURSE = this.SERVER_URL + \"/Course\";\n  public SUBJECT = this.SERVER_URL + \"/Subject\";\n  public TIMETABLE = this.SERVER_URL + \"/Timetable\";\n  public FACULTY = this.SERVER_URL + \"/Faculty\";\n\n\n}","import { Component } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { BaseListCtl } from \"../base-list.component\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\n\r\n@Component({\r\n    selector:'app-faculty-list',\r\n    templateUrl:'faculty-list.component.html',\r\n})\r\nexport class FacultyListComponent extends BaseListCtl{\r\n    constructor(public serviceLocator: ServiceLocatorService,public route:ActivatedRoute) {\r\n        super(serviceLocator.endpointService.FACULTY,serviceLocator,route);\r\n      \r\n      }\r\n      populateForm(form,searchParams){\r\n        form.firstName = searchParams.firstName;\r\n        form.email = searchParams.email;\r\n        form.collegeId = searchParams.collegeId;\r\n        \r\n      }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZhY3VsdHkvZmFjdWx0eS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-faculty',\n  templateUrl: './faculty.component.html',\n  styleUrls: ['./faculty.component.css']\n})\nexport class FacultyComponent extends BaseCtl {\n\n  constructor(public serviceLocator:ServiceLocatorService,public route:ActivatedRoute) {\n    super(serviceLocator.endpointService.FACULTY,serviceLocator,route );\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.firstName = data.firstName;\n    form.lastName = data.lastName;    \n    form.email = data.email;\n    form.mobileNo = data.mobileNo;\n    form.address = data.address;\n    form.gender = data.gender;\n    form.collegeId = data.collegeId;\n    form.courseId = data.courseId\n    form.subjectId = data.subjectId;\n    form.dob = data.dob;\n     \n    \n  }\n  cancel(){\n    this.forward('/facultylist')\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvb3QvZm9vdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-foot',\n  templateUrl: './foot.component.html',\n  styleUrls: ['./foot.component.css']\n})\nexport class FootComponent  {\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router'\n\n\n@Injectable()\n\nexport class HttpServiceService {\n\n\n  constructor(private router: Router, private httpClient: HttpClient, private cookie: CookieService) {\n\n  }\n  isLogout() {\n    var _self = this\n    let SessionID = localStorage.getItem('firstName');\n    console.log(this.router.url+\"------------------------------------------------\")\n    if ((SessionID == \"\" || SessionID == null) &&\n      (    this.router.url != \"/login\"\n        && this.router.url != \"/Auth\"\n        && this.router.url != \"/login/logout\"\n        && this.router.url != \"/forgotpassword\"\n        && this.router.url != \"/signup\"\n        && !this.router.url.includes(\"/login/\")\n      )) {\n      if (_self.router.url.includes(\"login\")) {\n        var uri = _self.router.url;\n      } else {\n        var uri = '/login' + _self.router.url;\n      }\n      _self.router.navigateByUrl(uri)\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  get(endpoint, callback) {\n    var _self = this;\n    if (this.isLogout()) {\n      return true;\n    }\n    return _self.httpClient.get(endpoint, { withCredentials: true }).subscribe((data) => {\n      console.log(data);\n      callback(data);\n\n    });\n  }\n\n  post(endpoint, bean, callback) {\n    var _self = this\n    if (this.isLogout()) {\n      return true;\n    }\n    return _self.httpClient.post(endpoint, bean, { withCredentials: true }).subscribe((data) => {\n      console.log(data);\n      callback(data);\n\n    }, error => {\n      console.log('ORS Error', error);\n    });\n  }\n\n\n}\n\n","\r\n\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { EndpointServiceService } from \"../endpoint-service.service\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\n\r\n@Component({\r\n    selector:'app-forgot-password',\r\n    templateUrl:'forgot-password.component.html',\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n    constructor(private serviceLocator: ServiceLocatorService, private endpoint: EndpointServiceService ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  \r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    data:{},\r\n    inputerror: {},\r\n    \r\n\r\n  };\r\n\r\n  forgot(){\r\n      var _self = this;\r\n      this.serviceLocator.httpService.post(this.endpoint.AUTH+\"/forgotPassword\",this.form.data,function(res){\r\n        if(res.success){\r\n       //   _self.populateForm(this.form.data,res.result.data);\r\n          _self.form.message=res.result;\r\n\r\n        }else{\r\n          _self.form.inputerror=_self.form.inputerror;\r\n          _self.form.message = _self.form.message;\r\n\r\n        }\r\n      })\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.login = data.login;\r\n  }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { EndpointServiceService } from '../endpoint-service.service';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(public route: ActivatedRoute, public endpoint: EndpointServiceService, public serviceLocator: ServiceLocatorService) {\n    var s = \"in\"\n    var _self = this\n    this.serviceLocator.getPathVariable(this.route, function (params) {\n      s = params[\"in\"];\n      console.log(s + \"uri------------\");\n    })\n\n\n    if (s == \"logout\") {\n      _self.form.message = \"Logout Successfull\"\n    } else if (s != undefined) {\n      _self.form.error = true;\n      _self.form.message = \"Session Expired Please Login\";\n\n    }\n  }\n\n  ngOnInit() {\n\n  }\n\n\n  public form = {\n    error: false,\n    message: null,\n    inputerror: {},\n    data: {},\n\n  };\n  signIn() {\n    console.log(\"login\");\n    var _self = this;\n    var uri = \"in\"\n    this.serviceLocator.httpService.post(this.endpoint.AUTH + '/login', this.form.data, function (res) {\n      if (res.success) {\n        localStorage.setItem('firstName', res.result.data.firstName);\n        localStorage.setItem('roleName', res.result.data.roleName)\n        console.log(uri + \"uri\")\n        _self.serviceLocator.getPathVariable(_self.route, function (params) {\n          uri = params[\"in\"];\n          console.log(uri + \"uri------------\");\n        })\n        if (uri == undefined) {\n          console.log(\"1\")\n          _self.serviceLocator.forward('dashboard');\n        } else if (uri == \"logout\") {\n          _self.serviceLocator.forward('dashboard');\n        }\n        else if (uri != undefined) {\n          _self.serviceLocator.forward(uri);\n        }\n\n\n\n      } else {\n        console.log('inelse');\n        _self.populateForm(_self.form.data, res.result.data);\n        _self.form.inputerror = res.result.inputerror;\n        console.log(\"------------------\", res.result.inputerror)\n        _self.form.error = false;\n        if (res.result.message) {\n          _self.form.error = true;\n          _self.form.message = res.result.message\n          \n        } else {\n          _self.form.message = null\n        }\n\n      }\n    })\n  }\n  signUp() {\n    this.serviceLocator.forward('signup')\n  }\n\n\n  populateForm(form, data) {\n    form.login = data.login;\n    form.password = data.password;\n\n  }\n\n}\n","import { formatNumber } from \"@angular/common\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { BaseCtl } from \"../base.component\";\r\nimport { EndpointServiceService } from \"../endpoint-service.service\";\r\nimport { HttpServiceService } from \"../http-service.service\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\nimport { LoginComponent } from \"./login.component\";\r\n\r\n@Component({\r\n    selector:'app-user-registration',\r\n    templateUrl:'user-registration.component.html',\r\n})\r\nexport class UserRegistrationComponent extends LoginComponent {\r\n    \r\n    reset() {\r\n        this.form.error= false,\r\n        this.form.message= null,\r\n         this.form.inputerror = {};\r\n         this.form.data = {};\r\n      }\r\n\r\n    constructor(public router: ActivatedRoute, public endpoint: EndpointServiceService, public serviceLocator:ServiceLocatorService) {\r\n        super(router,endpoint, serviceLocator);\r\n      }\r\n    ngOnInit(){\r\n\r\n    }\r\n    \r\n    submit(){\r\n        var _self = this;\r\n\r\n        _self.serviceLocator.httpService.post(this.endpoint.AUTH+\"/register\",this.form.data,function(res){\r\n            if(res.success){\r\n                _self.form.message=\"User Registered Successfully please login\";\r\n            \r\n                _self.populateForm(_self.form.data,res.result.data);\r\n                _self.form.inputerror = res.result.inputerror;\r\n            } else {\r\n                _self.populateForm(_self.form.data,res.result.data);\r\n                _self.form.inputerror= res.result.inputerror;\r\n                console.log(_self.form.inputerror)\r\n            }\r\n        });\r\n\r\n    }\r\n    populateForm(form, data) {\r\n        form.firstName = data.firstName;\r\n        form.lastName = data.lastName;    \r\n        form.login = data.login;\r\n        form.password = data.password;\r\n        form.gender = data.gender;\r\n        form.mobileNo = data.mobileNo;\r\n        form.dob = data.dob;\r\n       \r\n      }\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { EndpointServiceService } from \"../endpoint-service.service\";\r\nimport { HttpServiceService } from \"../http-service.service\";\r\n\r\n@Component({\r\n    selector:'app-get-marksheet',\r\n    templateUrl:'get-marksheet.component.html'\r\n})\r\nexport class GetMarksheetComponent implements OnInit{\r\n    flag: boolean;\r\n    ngOnInit() {\r\n    }\r\n    constructor(private httpService : HttpServiceService,private endpoint : EndpointServiceService){\r\n\r\n    }\r\n    public form={\r\n        error:false,\r\n        message:null,\r\n        data:{},\r\n        searchParams : {},\r\n        inputerror : {}\r\n    }\r\n    submit(){\r\n        var _self = this;\r\n        this.flag = false;\r\n        this.httpService.post(_self.endpoint.MARKSHEET+\"/getMarksheet\",this.form,function(res){\r\n            if(res.success){\r\n                _self.flag = true;\r\n                _self.form.data = res.result;\r\n            }else {\r\n                _self.flag = false;\r\n                _self.form.error=true;\r\n                _self.form.inputerror = res.inputerror\r\n                \r\n            }\r\n\r\n        })\r\n    }\r\n    populateForm(form,data){\r\n        \r\n    }\r\n    reset(){\r\n        this.form.data = {}\r\n        this.flag = false;\r\n        this.form.error=false;\r\n        this.form.message=null;\r\n        \r\n    }\r\n    \r\n}","import { Component } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { BaseListCtl } from \"../base-list.component\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\n\r\n@Component({\r\n    selector:'app-marksheet-list',\r\n    templateUrl:'marksheet-list.component.html',\r\n})\r\nexport class MarksheetListComponent extends BaseListCtl{\r\n    constructor(public serviceLocator: ServiceLocatorService,public route:ActivatedRoute) {\r\n        super(serviceLocator.endpointService.MARKSHEET,serviceLocator,route);\r\n\r\n      }\r\n      \r\n      populateForm(form,searchParams){\r\n        form.firstName = searchParams.firstName;\r\n       form.rollNo = searchParams.rollNo;\r\n        \r\n      }\r\n      result(physics,maths,chemistry){\r\n        if((physics+maths+chemistry)/3>=35.0 && physics >=35 && maths >=35 && chemistry >=35 ){\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n      percentage(physics,maths,chemistry){\r\n        var per = 0.00;\r\n        per = (physics+maths+chemistry)/3\r\n\r\n      }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hcmtzaGVldC9tYXJrc2hlZXQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-marksheet',\n  templateUrl: './marksheet.component.html',\n  styleUrls: ['./marksheet.component.css']\n})\nexport class MarksheetComponent extends BaseCtl {\n\n  constructor(public serviceLocator:ServiceLocatorService,public route:ActivatedRoute) {\n    super(serviceLocator.endpointService.MARKSHEET,serviceLocator,route );\n  }\n  cancel(){\n    this.forward('/marksheetlist')\n  }\n\n  populateForm(form,data){\n    form.id= data.id\n    form.rollNo = data.rollNo\n    form.studentId=data.studentId\n    form.physics=data.physics\n    form.chemistry=data.chemistry\n    form.maths=data.maths\n  }\n\n}\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { EndpointServiceService } from \"../endpoint-service.service\";\r\nimport { HttpServiceService } from \"../http-service.service\";\r\n\r\n@Component({\r\n    selector: 'app-merit-list',\r\n    templateUrl: 'merit-list.component.html',\r\n})\r\nexport class MeritListComponent implements OnInit {\r\n\r\n    constructor(private httpService: HttpServiceService, private endpoint: EndpointServiceService) {\r\n\r\n    }\r\n\r\n    public form = {\r\n        list: [],\r\n        error: false,\r\n        pageNo: 0,\r\n        pageSize: 0,\r\n        count: 0\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.meritList();\r\n    }\r\n    result(physics, maths, chemistry) {\r\n        if ((physics + maths + chemistry) / 3 >= 35.0 && physics >= 35 && maths >= 35 && chemistry >= 35) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    meritList() {\r\n        var _self = this;\r\n        _self.httpService.get(_self.endpoint.MARKSHEET + \"/meritList\", function (res) {\r\n            if (res.success) {\r\n                _self.form.error = false;\r\n                _self.form.list = res.result.list;\r\n                _self.form.pageNo = res.result.pageNo;\r\n                _self.form.pageSize = res.result.pageSize;\r\n                _self.form.count = res.result.count;\r\n            }\r\n            else {\r\n                _self.form.error = true\r\n            }\r\n        })\r\n    }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdi9uYXYuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n//import { CookieService } from 'ngx-cookie-service';\nimport { EndpointServiceService } from '../endpoint-service.service';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  firstName = '';\n  roleName = '';\n  menu = {}\n  constructor(private translate: TranslateService, private serviceLocator: ServiceLocatorService, private endpoint: EndpointServiceService) {\n    this.changeLocale(\"en\");\n    translate.setDefaultLang(localStorage.getItem(\"locale\"));\n  }\n\n  changeLocale(locale: string) {\n    localStorage.setItem(\"locale\", locale);\n    this.translate.use(localStorage.getItem(\"locale\"));\n\n    this.ngOnInit();\n  }\n\n  ngOnInit() {\n\n\n  }\n  checkLogin() {\n    var _self = this;\n    var session = ''\n    session = localStorage.getItem('firstName');\n    if (session != null) {\n      this.firstName = localStorage.getItem('firstName');\n      this.roleName = localStorage.getItem('roleName');\n      return true;\n    }\n    return false;\n  }\n  logout() {\n    var _self = this\n    this.serviceLocator.httpService.get(this.endpoint.AUTH + \"/logout\", function (res) {\n      if (res.success) {\n        localStorage.removeItem('firstName');\n        localStorage.removeItem('roleName');\n        \n        _self.serviceLocator.forward('login/logout');\n\n      } else {\n        console.log('inelse');\n      }\n    })\n    //_self.cookie.delete('connect.sid');\n  }\n\n}\n","import { Component } from \"@angular/core\";\nimport { ServiceLocatorService } from \"../service-locator.service\";\n\n\n@Component({\n    selector:'app-page-not-found',\n    templateUrl:'page-not-found.component.html',\n})\nexport class PageNotFoundComponent extends ServiceLocatorService {\n    \n}","import { Component } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { BaseListCtl } from \"../base-list.component\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\n\r\n@Component({\r\n    selector:'app-role-list',\r\n    templateUrl:'role-list.component.html',\r\n})\r\nexport class RoleListComponent extends BaseListCtl {\r\n    constructor(public serviceLocator: ServiceLocatorService,public route:ActivatedRoute) {\r\n        super(serviceLocator.endpointService.ROLE,serviceLocator,route);\r\n      \r\n      }\r\n      populateForm(form, searchParams){\r\n        \r\n        form.name = searchParams.name;\r\n        form.description = searchParams.description;\r\n      }\r\n\r\n     /* select(){\r\n         this.flag = true;\r\n      }*/\r\n      \r\n\t\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGUvcm9sZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-role',\n  templateUrl: './role.component.html',\n  styleUrls: ['./role.component.css']\n})\nexport class RoleComponent extends BaseCtl {\n\n  constructor(public serviceLocator:ServiceLocatorService,public route:ActivatedRoute) {\n    super(serviceLocator.endpointService.ROLE,serviceLocator,route );\n  }\n\n  populateForm(form,data){\n    form.id = data.id;\n    form.name = data.name;\n    form.description = data.description;\n    \n  }\n  cancel(){\n    this.forward('/rolelist')\n  }\n  \n}\n\n","import { Injectable } from '@angular/core';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { EndpointServiceService } from './endpoint-service.service';\nimport { HttpServiceService } from './http-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceLocatorService {\n  httpService = null;\n  endpointService = null;\n  router = null;\n  constructor(private hs : HttpServiceService,private ep : EndpointServiceService,private r: Router) {\n      this.httpService = hs;\n      this.endpointService = ep;\n      this.router = r;\n   }\n\n   getPathVariable(route: ActivatedRoute, callback) {\n    route.params.subscribe(params => {\n      callback(params)\n    });\n  }\n\n\n  forward(page){\n    this.router.navigateByUrl(page);\n  }\n}\n","import { Component,OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { BaseListCtl } from \"../base-list.component\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\n\r\n@Component({\r\n    selector:'app-student-list',\r\n    templateUrl:'student-list.component.html',\r\n})\r\nexport class StudentListComponent extends BaseListCtl{\r\n    constructor(public serviceLocator: ServiceLocatorService,public route:ActivatedRoute) {\r\n        super(serviceLocator.endpointService.STUDENT,serviceLocator,route);\r\n      \r\n      }\r\n      populateForm(form,searchParams){\r\n          form.firstName = searchParams.firstName;\r\n          form.email =searchParams.email;\r\n          form.collegeId = searchParams.collegeId;\r\n      }\r\n     \r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0dWRlbnQvc3R1ZGVudC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-student',\n  templateUrl: './student.component.html',\n  styleUrls: ['./student.component.css']\n})\nexport class StudentComponent extends BaseCtl {\n\n  constructor(public serviceLocator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(serviceLocator.endpointService.STUDENT, serviceLocator, route);\n  }\n  populateForm(form,data){\n    form.id = data.id;\n    form.firstName = data.firstName;\n    form.lastName = data.lastName;  \n    form.collegeId = data.collegeId;\n    form.email = data.email;\n    form.mobileNo = data.mobileNo;\n    form.dob = data.dob;\n  }\n  cancel(){\n    this.forward('/student')\n  }\n}\n","import { Component } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { BaseListCtl } from \"../base-list.component\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\n\r\n@Component({\r\n    selector:'app-subject-list',\r\n    templateUrl:\"subject-list.component.html\",\r\n})\r\nexport class SubjectListComponent extends BaseListCtl{\r\n    \r\n    constructor(public serviceLocator: ServiceLocatorService,public route:ActivatedRoute) {\r\n        super(serviceLocator.endpointService.SUBJECT,serviceLocator,route);\r\n      }\r\n      populateForm(form,searchParams){\r\n        form.subjectName = searchParams.subjectName;\r\n        form.courseId = searchParams.courseId;\r\n        form.courseName = searchParams.courseName;\r\n      }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1YmplY3Qvc3ViamVjdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-subject',\n  templateUrl: './subject.component.html',\n  styleUrls: ['./subject.component.css']\n})\nexport class SubjectComponent extends BaseCtl {\n\n  constructor(public serviceLocator:ServiceLocatorService,public route:ActivatedRoute) {\n    super(serviceLocator.endpointService.SUBJECT,serviceLocator,route );\n  }\n  cancel(){\n    this.forward('/subjectlist')\n  }\n\n    populateForm(form,data){\n      form.id=data.id\n      form.courseId = data.courseId;\n      form.courseName = data.courseName;\n      form.subjectName = data.subjectName;\n      form.subjectDescription = data.subjectDescription;\n      \n\n    }\n\n}\n","import { Component } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { BaseListCtl } from \"../base-list.component\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\n\r\n@Component({\r\n    selector:'app-timetable-list',\r\n    templateUrl:'timetable-list.component.html',\r\n})\r\nexport class TimetableListComponent extends BaseListCtl{\r\n    constructor(public serviceLocator: ServiceLocatorService,public route:ActivatedRoute) {\r\n        super(serviceLocator.endpointService.TIMETABLE,serviceLocator,route);\r\n      \r\n      }\r\n      populateForm(form,searchParams){\r\n        \r\n        form.collegeId = searchParams.collegeId;\r\n        \r\n      }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RpbWV0YWJsZS90aW1ldGFibGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-timetable',\n  templateUrl: './timetable.component.html',\n  styleUrls: ['./timetable.component.css']\n})\nexport class TimetableComponent extends BaseCtl {\n\n  constructor(public serviceLocator:ServiceLocatorService,public route:ActivatedRoute) {\n    super(serviceLocator.endpointService.TIMETABLE,serviceLocator,route );\n  }\n\n  populateForm(form,data){\n    form.id =data.id;\n    form.courseId = data.courseId;\n    form.subjectId = data.subjectId;\n    form.semester = data.semester;\n    form.examDate = data.examDate;\n    form.examTime = data.examTime;\n  }\n\n  cancel(){\n    this.forward('/timetablelist')\n  }\n  \n}\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { BaseCtl } from \"../base.component\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\n\r\n@Component({\r\n    selector:'app-change-password',\r\n    templateUrl:'change-password.component.html',\r\n})\r\nexport class ChangePasswordComponent extends BaseCtl {\r\n    \r\n    constructor(public serviceLocator: ServiceLocatorService, public route: ActivatedRoute,public httpClient: HttpClient) {\r\n        super(serviceLocator.endpointService.AUTH, serviceLocator, route);\r\n      }\r\n    \r\n    submit(){\r\n        var _self = this;\r\n        this.serviceLocator.httpService.post(this.serviceLocator.endpointService.AUTH+\"/changePassword\",this.form.data,function(res){\r\n            if(res.success){\r\n                _self.form.error= false;\r\n                _self.form.message = \"Password Changed successfully\";\r\n                \r\n            }else {\r\n                _self.form.error = true;\r\n                _self.form.message = \"Error\";\r\n            }\r\n        })\r\n    }\r\n    populateForm(form,data){\r\n        form.oldPassword = data.oldPassword\r\n        form.password = data.password;\r\n        form.confirmPassword = form.confirmPassword;\r\n    }\r\n}","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { BaseCtl } from \"../base.component\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\nimport { UserComponent } from \"./user.component\";\r\n\r\n@Component({\r\n    selector:'app-my-profile',\r\n    templateUrl:'my-profile.component.html',\r\n})\r\nexport class MyProfileComponent extends BaseCtl {\r\n  uploadId = 0;\r\n  getKey = false;\r\n  selected = null;\r\n  fileToUpload: File = null;\r\n  userForm : FormGroup = null;\r\n  uploadForm: FormGroup; \r\n  constructor(public serviceLocator: ServiceLocatorService, public route: ActivatedRoute,public httpClient: HttpClient) {\r\n    super(serviceLocator.endpointService.USER, serviceLocator, route);\r\n  }\r\n      ngOnInit(){\r\n        var _self = this;\r\n\r\n        this.serviceLocator.httpService.get(_self.api.endpoint+\"/myProfile\",function(res){\r\n          if(res.success){\r\n            _self.populateForm(_self.form.data,res.result);\r\n\r\n          }else {\r\n            _self.form.error = true;\r\n            _self.form.message = \"error\"\r\n            _self.form.inputerror = res.result.inputerror;\r\n\r\n          }\r\n        })\r\n      }\r\n      \r\n      populateForm(form, data) {\r\n        form.id = data.id;\r\n        form.firstName = data.firstName;\r\n        form.lastName = data.lastName;    \r\n        form.login = data.login;\r\n        form.password = data.password;\r\n        form.gender = data.gender;\r\n        form.mobileNo = data.mobileNo;\r\n        form.dob = data.dob;\r\n        form.status = data.status;\r\n        form.roleId = data.roleId;\r\n        form.picName =data.picName\r\n      }\r\n      myFile(){\r\n         this.onSubmitProfile(this.fileToUpload, this.userForm).subscribe(data => {\r\n           console.log(this.fileToUpload);\r\n           }, error => {\r\n             console.log(error);\r\n           });\r\n     \r\n         }\r\n         onSubmitProfile(fileToUpload: File, userform : FormGroup) {\r\n          const formData = new FormData();\r\n          \r\n        var _self= this;\r\n          formData.append('pic', fileToUpload);\r\n          return this.httpClient.post(this.endpoint.USER+\"/profilePic/\"+this.uploadId, formData,{withCredentials:true});\r\n      }\r\n      onFileSelect(files: FileList) {\r\n        this.fileToUpload = files.item(0);\r\n        console.log(this.fileToUpload);\r\n    \r\n      }\r\n    \r\n      onUpload(userform : FormData) {\r\n       this.submit();\r\n     \r\n      }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n})\r\nexport class UserListComponent extends BaseListCtl {\r\n\r\n  constructor(public serviceLocator: ServiceLocatorService,public route:ActivatedRoute) {\r\n    super(serviceLocator.endpointService.USER,serviceLocator,route);\r\n  }\r\n\r\n  populateForm(form,searchParams){\r\n    form.firstName = searchParams.firstName;\r\n   // form.lastName = searchParams.lastName;\r\n    form.login = searchParams.login;\r\n    //form.status = searchParams.status;\r\n    form.roleId = searchParams.roleId;\r\n  }\r\n  search(){\r\n    this.form.data.pageSize=5;\r\n    super.search();\r\n  }\r\n\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { BaseCtl } from 'src/app/base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormsModule } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent extends BaseCtl {\n  uploadId = 0;\n  getKey = false;\n  selected = null;\n  fileToUpload: File = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n  constructor(public serviceLocator: ServiceLocatorService, public route: ActivatedRoute, public httpClient: HttpClient) {\n    super(serviceLocator.endpointService.USER, serviceLocator, route);\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.firstName = data.firstName;\n    form.lastName = data.lastName;\n    form.login = data.login;\n    form.password = data.password;\n    form.gender = data.gender;\n    form.mobileNo = data.mobileNo;\n    form.dob = data.dob;\n    form.status = data.status;\n    form.roleId = data.roleId;\n  }\n\n  submit() {\n    var _self = this;\n\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = null;\n      _self.form.inputerror = {};\n\n      if (res.success) {\n\n        _self.uploadId = res.result;\n        if (_self.fileToUpload!=null) {\n          _self.myFile();\n        }\n        _self.form.error = false;\n\n        _self.form.message = \"Data is saved\";\n        //_self.forward('/user/'+res.result)\n      } else {\n        _self.form.error = true;\n        _self.form.inputerror = res.result.inputerror;\n        _self.form.message = res.result.message;\n\n      }\n      //console.log('FORM', _self.form);\n    });\n  }\n  myFile() {\n    console.log(this.form.data.id + 'after super.submit-----');\n    this.onSubmitProfile(this.fileToUpload, this.userForm).subscribe(data => {\n      console.log(this.fileToUpload);\n    }, error => {\n      console.log(error);\n    });\n\n  }\n  onSubmitProfile(fileToUpload: File, userform: FormGroup) {\n    const formData = new FormData();\n\n    var _self = this;\n    formData.append('pic', fileToUpload);\n    console.log(this.uploadId + 'this id number ======');\n    return this.httpClient.post(\"http://localhost:8080/User/profilePic/\" + this.uploadId, formData, { withCredentials: true });\n  }\n  onFileSelect(files: FileList) {\n    this.fileToUpload = files.item(0);\n    console.log(this.fileToUpload);\n\n  }\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n\n  }\n  cancel() {\n    this.forward('/userlist')\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dlbGNvbWUvd2VsY29tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}