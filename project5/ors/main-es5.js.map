{"version":3,"sources":["$_lazy_route_resource lazy namespace object","src/app/app.component.html","src/app/college/college-list.component.html","src/app/college/college.component.html","src/app/course/course-list.component.html","src/app/course/course.component.html","src/app/dashboard/dashboard.component.html","src/app/faculty/faculty-list.component.html","src/app/faculty/faculty.component.html","src/app/foot/foot.component.html","src/app/login/forgot-password.component.html","src/app/login/login.component.html","src/app/login/user-registration.component.html","src/app/marksheet/get-marksheet.component.html","src/app/marksheet/marksheet-list.component.html","src/app/marksheet/marksheet.component.html","src/app/marksheet/merit-list.component.html","src/app/nav/nav.component.html","src/app/page-not-found/page-not-found.component.html","src/app/role/role-list.component.html","src/app/role/role.component.html","src/app/student/student-list.component.html","src/app/student/student.component.html","src/app/subject/subject-list.component.html","src/app/subject/subject.component.html","src/app/timetable/timetable-list.component.html","src/app/timetable/timetable.component.html","src/app/user/change-password.component.html","src/app/user/my-profile.component.html","src/app/user/user-list.component.html","src/app/user/user.component.html","src/app/welcome/welcome.component.html","node_modules/tslib/tslib.es6.js","src/app/app-routing.module.ts","src/app/app.component.css","src/app/app.component.ts","src/app/app.module.ts","src/app/base-list.component.ts","src/app/base.component.ts","src/app/college/college-list.component.ts","src/app/college/college.component.css","src/app/college/college.component.ts","src/app/course/course-list.component.ts","src/app/course/course.component.css","src/app/course/course.component.ts","src/app/dashboard/dashboard.component.css","src/app/dashboard/dashboard.component.ts","src/app/endpoint-service.service.ts","src/app/faculty/faculty-list.component.ts","src/app/faculty/faculty.component.css","src/app/faculty/faculty.component.ts","src/app/foot/foot.component.css","src/app/foot/foot.component.ts","src/app/http-service.service.ts","src/app/login/forgot-password.component.ts","src/app/login/login.component.css","src/app/login/login.component.ts","src/app/login/user-registration.component.ts","src/app/marksheet/get-marksheet.component.ts","src/app/marksheet/marksheet-list.component.ts","src/app/marksheet/marksheet.component.css","src/app/marksheet/marksheet.component.ts","src/app/marksheet/merit-list.component.ts","src/app/nav/nav.component.css","src/app/nav/nav.component.ts","src/app/page-not-found/page-not-found.component.ts","src/app/role/role-list.component.ts","src/app/role/role.component.css","src/app/role/role.component.ts","src/app/service-locator.service.ts","src/app/student/student-list.component.ts","src/app/student/student.component.css","src/app/student/student.component.ts","src/app/subject/subject-list.component.ts","src/app/subject/subject.component.css","src/app/subject/subject.component.ts","src/app/timetable/timetable-list.component.ts","src/app/timetable/timetable.component.css","src/app/timetable/timetable.component.ts","src/app/user/change-password.component.ts","src/app/user/my-profile.component.ts","src/app/user/user-list.component.ts","src/app/user/user.component.css","src/app/user/user.component.ts","src/app/welcome/welcome.component.css","src/app/welcome/welcome.component.ts","src/environments/environment.ts","src/main.ts"],"names":[],"mappings":"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","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","export default \"\\n\\n<app-nav></app-nav>\\n<app-foot></app-foot>\\n\\n<router-outlet></router-outlet>\"","export default \"<body class=\\\"container-fluid text-center\\\">\\r\\n  <div class=\\\"content-wrapper\\\" style=\\\"background-image: url(./assets/list.jpg); background-repeat: no-repeat;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;width:100%;\\r\\n    height: 850px;\\\">\\r\\n    <div class=\\\"d-flex bg-primary text-white paddin \\\">\\r\\n        <h1 class=\\\"text-center container-fluid \\\">{{'College List'|translate}}</h1>\\r\\n      </div>\\r\\n      <div class=\\\"text-center row\\\">\\r\\n        <div class=\\\"col-2\\\"></div>\\r\\n        <form class=\\\"form-inline pt-3  \\\">\\r\\n          <div class=\\\"form-group  pr-3\\\">\\r\\n            <label for=\\\"name\\\" class=\\\"form-check-label pr-3 \\\">{{'College Name'|translate}} : </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter College Name'|translate}}\\\" name=\\\"firstName\\\"\\r\\n              [(ngModel)]=\\\"form.searchParams.name\\\" id=\\\"name\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group pr-3\\\">\\r\\n            <label for=\\\"city\\\" class=\\\"form-check-label pr-3 \\\">{{'City'|translate}} : </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"city\\\" id=\\\"city\\\" placeholder=\\\"{{'Enter College City'|translate}}\\\"\\r\\n              [(ngModel)]=\\\"form.searchParams.city\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group pr-3\\\">\\r\\n            <label for=\\\"state\\\" class=\\\"form-check-label pr-3 \\\">{{'State'|translate}} : </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"state\\\" id=\\\"state\\\" placeholder=\\\"{{'Enter College State'|translate}}\\\"\\r\\n                          [(ngModel)]=\\\"form.searchParams.state\\\">\\r\\n          </div>\\r\\n  \\r\\n          <button class=\\\"btn-primary btn\\\" (click)=\\\"submit()\\\">{{'Search'|translate}}</button>&nbsp;&nbsp;\\r\\n          <button class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\">{{'Reset'|translate}}</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"col-6  \\\" *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger\\\"> {{form.message}}</div>\\r\\n      <div class=\\\"col-6 \\\" *ngIf=\\\"!form.error && (form.message != null)\\\" class=\\\"alert alert-success\\\">\\r\\n        {{form.message}}</div>\\r\\n  \\r\\n      <br>\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th>{{'S.No'|translate}}</th>\\r\\n                <th>{{'Name'|translate}}</th>\\r\\n                <th>{{'Address'|translate}}</th>\\r\\n                <th>{{'City'|translate}}</th>\\r\\n                <th>{{'State'|translate}}</th>\\r\\n                <th>{{'Phone No'|translate}}</th>\\r\\n                <th>{{'Edit'|translate}} / {{'Delete'|translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n  \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let college of form.list; let i = index\\\">\\r\\n                <td> {{((form.pageNo-1)*10)+i+1}} </td>\\r\\n                <td> {{ college.name }} </td>\\r\\n                <td> {{ college.address }} </td>\\r\\n                <td> {{ college.city }} </td>\\r\\n                <td> {{ college.state }} </td>\\r\\n                <td> {{ college.phoneNo }} </td>\\r\\n                <td><a (click)=\\\"forward( '/college/' +  college.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit\\\" style=\\\"font-size:20px;color:blue\\\"></i>\\r\\n                  </a> / <a (click)=\\\"delete(college.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash-o\\\" style=\\\"font-size:20px;color:red\\\"></i>\\r\\n                  </a>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <div class=\\\" col-12 form-inline mb-0  \\\">\\r\\n            <div class=\\\"col-4 text-left \\\">\\r\\n              <div *ngIf=\\\"form.pageNo>1; then sus else fail\\\"></div>\\r\\n              <ng-template #sus>\\r\\n                <button (click)=\\\"previous()\\\" class=\\\"btn btn-success\\\">{{'previous'|translate}}</button>\\r\\n              </ng-template>\\r\\n              <ng-template #fail>\\r\\n                <button (click)=\\\"previous()\\\" disabled class=\\\"btn btn-light \\\">{{'previous'|translate}}</button>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n            <div class=\\\"col-4 text-center \\\">\\r\\n              <button class=\\\"btn-primary btn \\\" (click)=\\\"forward('/college/')\\\">{{'Add'|translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-4 text-right \\\">\\r\\n              <div *ngIf=\\\"form.count>(form.pageSize*form.pageNo);then susN else failN\\\"></div>\\r\\n              <ng-template #susN>\\r\\n                <button (click)=\\\"next()\\\" class=\\\"btn btn-success\\\">{{'next'|translate}}</button>\\r\\n              </ng-template>\\r\\n              <ng-template #failN>\\r\\n                <button (click)=\\\"next()\\\" disabled class=\\\"btn btn-light\\\">{{'next'|translate}}</button>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br><br>\\r\\n    </div>\\r\\n  </body>\"","export default \"<body class=\\\" container-fluid row\\\">\\n    <div class=\\\"row ml-3\\\" style=\\\"background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;background-size: cover;width:100%;height: 700px;\\\">\\n        <div class=\\\"col-sm-4\\\"></div>\\n        <div class=\\\"col-sm-4 pt-5\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"text-center mb-4\\\">\\n                        <div *ngIf=\\\"form.data.id>0; then hUpdate else hAdd\\\"></div>\\n                        <ng-template #hAdd>\\n                            <h1>{{'Add College'|translate}}</h1>\\n                        </ng-template>\\n                        <ng-template #hUpdate>\\n                            <h1>{{'Update College'|translate}}</h1>\\n                        </ng-template>\\n                    </div>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <form>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"name\\\" class=\\\"form-check-label\\\">{{'College Name'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span></label>\\n\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-university grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.name\\\" name=\\\"name\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter College Name'|translate}}\\\" id=\\\"name\\\" [value]=\\\"form.data.name\\\">\\n                            </div>\\n                            <span class=\\\"text-danger mr-auto mb-auto  \\\"> {{form.inputerror.name}}\\n                            </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"address\\\" class=\\\"form-check-label\\\">{{'Address'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-map-marker grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.address\\\" name=\\\"address\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter Address'|translate}}\\\" id=\\\"lName\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.address}} </span>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"mNo\\\" class=\\\"form-check-label\\\">{{'City'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-location-arrow grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.city\\\" name=\\\"city\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter College City'|translate}}\\\"id=\\\"mNo\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.city}} </span>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"state\\\" class=\\\"form-check-label\\\">{{'State'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-address-card grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.state\\\" name=\\\"state\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter College State'|translate}}\\\" id=\\\"state\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.state}} </span>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"phoneNo\\\" class=\\\"form-check-label\\\">{{'Phone No'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.phoneNo\\\" name=\\\"phoneNo\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter Phone Number'|translate}}\\\" id=\\\"mNo\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.phoneNo}} </span>\\n                        </div>\\n\\n\\n                        <div class=\\\"form-inline\\\">\\n                            <div class=\\\"col-4\\\"></div>\\n                            <div class=\\\"\\\">\\n                                <div *ngIf=\\\"form.data.id>0; then update else add\\\"></div>\\n                                <ng-template #add>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success\\\">{{'Save'|translate}}</button>&nbsp;\\n                                        <button (click)=\\\"reset()\\\"\\n                                        class=\\\"btn btn-secondary\\\">{{'Reset'|translate}}</button>&nbsp;\\n                                </ng-template>\\n                                <ng-template #update>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success \\\">{{'Update'|translate}}</button>&nbsp;\\n                                    <button (click)=\\\"cancel()\\\" class=\\\"btn btn-secondary\\\">{{'Cancel'|translate}}</button>\\n                                </ng-template>\\n                            </div>\\n                        </div>\\n\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm-4\\\"></div>\\n    </div>\\n</body>\"","export default \"<body class=\\\"container-fluid text-center\\\">\\r\\n  <div class=\\\"content-wrapper\\\" style=\\\"padding-top: 0%; background-image: url(./assets/list.jpg); background-repeat: no-repeat;\\r\\n  background-attachment: fixed;\\r\\n  background-size: cover;width:100%;\\r\\n  height: 850px;bottom: 0%;\\\">\\r\\n      <div class=\\\"d-flex bg-primary text-white paddin \\\">\\r\\n        <h1 class=\\\"text-center container-fluid \\\">{{'Course List'|translate}}</h1>\\r\\n      </div>\\r\\n      <div class=\\\"text-center row\\\">\\r\\n        <div class=\\\"col-2\\\"></div>\\r\\n        <form class=\\\"form-inline pt-3  \\\">\\r\\n          <div class=\\\"form-group  pr-3\\\">\\r\\n            <label for=\\\"courseName\\\" class=\\\"form-check-label pr-3 \\\">{{'Course Name'|translate}}: </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter Course Name'|translate}}\\\" name=\\\"courseName\\\"\\r\\n              [(ngModel)]=\\\"form.searchParams.courseName\\\" id=\\\"courseName\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group  pr-3\\\">\\r\\n            <label for=\\\"courseDescription\\\" class=\\\"form-check-label pr-3 \\\">{{'Course Description'|translate}}: </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter Course Description'|translate}}\\\" name=\\\"courseDescription\\\"\\r\\n              [(ngModel)]=\\\"form.searchParams.courseDescription\\\" id=\\\"fName\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group pr-3\\\">\\r\\n            <label for=\\\"courseDuration\\\" class=\\\"form-check-label pr-3\\\">{{'Course Duration'|translate}}:\\r\\n            </label>\\r\\n            <span class=\\\"text-danger ml-auto mb-auto\\\"> {{form.inputerror.courseDuration}} </span>\\r\\n            <select [(ngModel)]=\\\"form.searchParams.courseDuration\\\" name=\\\"courseDuration\\\" class=\\\"form-control\\\" id=\\\"courseDuration\\\">\\r\\n              <option [value]=default [disabled]=\\\"true\\\" selected disabled>{{'Select Course Duration'|translate}}</option>\\r\\n              <option value=\\\"1 Year\\\">1 Year</option>\\r\\n              <option value=\\\"2 Year\\\">2 Year</option>\\r\\n              <option value=\\\"3 Year\\\">3 Year</option>\\r\\n              <option value=\\\"4 Year\\\">4 Year</option>\\r\\n              <option value=\\\"5 Year\\\">5 Year</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <button class=\\\"btn-primary btn\\\" (click)=\\\"submit()\\\">{{'Search'|translate}}</button>&nbsp;&nbsp;\\r\\n          <button class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\">{{'Reset'|translate}}</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"col-6  \\\" *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger\\\"> {{form.message|translate}}</div>\\r\\n      <div class=\\\"col-6 \\\" *ngIf=\\\"!form.error && (form.message != null)\\\" class=\\\"alert alert-success\\\">\\r\\n        {{form.message|translate}}</div>\\r\\n  \\r\\n      <br>\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th>{{'S.No'|translate}}</th>\\r\\n                <th>{{'Course Name'|translate}}</th>\\r\\n                <th>{{'Course Description'|translate}}</th>\\r\\n                <th>{{'Course Duration'|translate}}</th>\\r\\n                <th>{{'Edit'|translate}} / {{'Delete'|translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n  \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let course of form.list; let i = index\\\">\\r\\n                <td> {{((form.pageNo-1)*10)+i+1}} </td>\\r\\n                <td> {{ course.courseName }} </td>\\r\\n                <td> {{ course.courseDescription }} </td>\\r\\n                <td> {{ course.courseDuration }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/course/' +  course.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit\\\" style=\\\"font-size:20px;color:blue\\\"></i>\\r\\n                  </a> / <a (click)=\\\"delete(course.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash-o\\\" style=\\\"font-size:20px;color:red\\\"></i>\\r\\n                  </a>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <div class=\\\" col-12 form-inline mb-0  \\\">\\r\\n            <div class=\\\"col-4 text-left \\\">\\r\\n              <div *ngIf=\\\"form.pageNo>1; then sus else fail\\\"></div>\\r\\n              <ng-template #sus>\\r\\n                <button (click)=\\\"previous()\\\" class=\\\"btn btn-success\\\">{{'previous'|translate}}</button>\\r\\n              </ng-template>\\r\\n              <ng-template #fail>\\r\\n                <button (click)=\\\"previous()\\\" disabled class=\\\"btn btn-light \\\">{{'previous'|translate}}</button>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n            <div class=\\\"col-4 text-center \\\">\\r\\n              <button class=\\\"btn-primary btn \\\" (click)=\\\"forward('/course/')\\\">{{'Add'|translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-4 text-right \\\">\\r\\n              <div *ngIf=\\\"form.count>(form.pageSize*form.pageNo);then susN else failN\\\"></div>\\r\\n              <ng-template #susN>\\r\\n                <button (click)=\\\"next()\\\" class=\\\"btn btn-success\\\">{{'next'|translate}}</button>\\r\\n              </ng-template>\\r\\n              <ng-template #failN>\\r\\n                <button (click)=\\\"next()\\\" disabled class=\\\"btn btn-light\\\">{{'next'|translate}}</button>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br><br>\\r\\n    </div>\\r\\n  </body>\"","export default \"<body class=\\\" container-fluid row\\\">\\n    <div class=\\\"row ml-3\\\" style=\\\"padding-top: 0%; background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;background-size: cover;width:100%;height: 700px;bottom: 0%;\\\">\\n        <div class=\\\"col-sm-4\\\"></div>\\n        <div class=\\\"col-sm-4 pt-5\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"text-center mb-4\\\">\\n                        <div *ngIf=\\\"form.data.id>0; then hUpdate else hAdd\\\"></div>\\n                        <ng-template #hAdd>\\n                            <h1>{{'Add Course'|translate}}</h1>\\n                        </ng-template>\\n                        <ng-template #hUpdate>\\n                            <h1>{{'Update Course'|translate}}</h1>\\n                        </ng-template>\\n                    </div>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <form>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"courseName\\\" class=\\\"form-check-label\\\">{{'Course Name'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span></label>\\n\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-graduation-cap grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.courseName\\\" name=\\\"courseName\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter Course Name'|translate}}\\\" id=\\\"courseName\\\">\\n                            </div>\\n                            <span class=\\\"text-danger mr-auto mb-auto  \\\"> {{form.inputerror.courseName}}\\n                            </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"courseDescription\\\" class=\\\"form-check-label\\\">{{'Course Description'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.courseDescription\\\" name=\\\"courseDescription\\\"\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Course Description'|translate}}\\\" id=\\\"courseDescription\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.courseDescription}} </span>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"courseDuration\\\" class=\\\"form-check-label\\\">{{'Course Duration'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-clock-o grey-text\\\"></i> </div>\\n                                </div>\\n                                <select [(ngModel)]=\\\"form.data.courseDuration\\\" name=\\\"courseDuration\\\"\\n                                    class=\\\"form-control\\\" id=\\\"courseDuration\\\">\\n                                    <option [value]=default [disabled]=\\\"true\\\" selected disabled>{{'Select Course Duration'|translate}}\\n                                    </option>\\n                                    <option value=\\\"1 year\\\">1 Year</option>\\n                                    <option value=\\\"2 year\\\">2 Year</option>\\n                                    <option value=\\\"3 year\\\">3 Year</option>\\n                                    <option value=\\\"4 year\\\">4 Year</option>\\n                                    <option value=\\\"5 year\\\">5 Year</option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.courseDuration}} </span>\\n                        </div>\\n\\n\\n                        <div class=\\\"form-inline\\\">\\n                            <div class=\\\"col-4\\\"></div>\\n                            <div class=\\\"text-center\\\">\\n                                <div *ngIf=\\\"form.data.id>0; then update else add\\\"></div>\\n                                <ng-template #add>\\n                                    <button (click)=\\\"submit()\\\" class=\\\"btn btn-success\\\">{{'Save'|translate}}</button>&nbsp;\\n                                    <button (click)=\\\"reset()\\\"\\n                                    class=\\\"btn btn-secondary\\\">{{'Reset'|translate}}</button>&nbsp;\\n                             </ng-template>\\n                                <ng-template #update>\\n                                    <button (click)=\\\"submit()\\\" class=\\\"btn btn-success \\\">{{'Update'|translate}}</button>&nbsp;\\n                                    <button (click)=\\\"cancel()\\\" class=\\\"btn btn-secondary\\\">{{'Cancel'|translate}}</button>\\n                                </ng-template>\\n                            </div>\\n                        </div>\\n\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm-4\\\"></div>\\n    </div>\\n    \\n</body>\"","export default \"<body class=\\\"container-fluid row \\\" >\\n    <div class=\\\"content-wrapper row ml-3\\\" style=\\\"padding-top: 0%; background-image: url(./assets/wel.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;background-size: cover;width:100%;height: 650px;bottom: 0%;\\\" >\\n    <div class=\\\"col-3\\\"></div>\\n    \\n    <div class=\\\"col-6\\\">    \\n\\n        <h1 class=\\\"text-light text-center font-weight-bold \\\" style=\\\"margin-top: 30%;\\\">{{'Welcome To Online Result System'|translate}}</h1>\\n    </div>\\n    <div class=\\\"col-3\\\"></div>\\n    </div>\\n</body>\"","export default \"<body class=\\\"container-fluid text-center\\\">\\r\\n    <div class=\\\"content-wrapper\\\" style=\\\"padding-top: 0%; background-image: url(./assets/list.jpg); background-repeat: no-repeat;\\r\\n      background-attachment: fixed;\\r\\n      background-size: cover;width:100%;\\r\\n      height: 850px;bottom: 0%;\\\">\\r\\n  <div class=\\\"d-flex bg-primary text-white paddin \\\">\\r\\n    <h1 class=\\\"text-center container-fluid \\\">{{'Faculty List'|translate}}</h1>\\r\\n  </div>\\r\\n  <div class=\\\"text-center col-12 row\\\">\\r\\n    <div class=\\\"col-2\\\"></div>\\r\\n    <form class=\\\"form-inline pt-3  \\\">\\r\\n      <div class=\\\"form-group  pr-3\\\">\\r\\n        <label for=\\\"fName\\\" class=\\\"form-check-label pr-3 \\\">{{'First Name'|translate}} : </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter Name'|translate}}\\\" name=\\\"firstName\\\"\\r\\n          [(ngModel)]=\\\"form.searchParams.firstName\\\" id=\\\"fName\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group pr-3\\\">\\r\\n        <label for=\\\"email\\\" class=\\\"form-check-label pr-3 \\\">{{'Email Id'|translate}} : </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"email\\\" id=\\\"email\\\" placeholder=\\\"{{'Enter Email Id'|translate}}\\\"\\r\\n          [(ngModel)]=\\\"form.searchParams.email\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group pr-3\\\">\\r\\n        <label for=\\\"role\\\" class=\\\"form-check-label pr-3\\\">{{'College'|translate}} :</label>&nbsp;\\r\\n        <select class=\\\"form-control\\\" name=\\\"collegeId\\\" [(ngModel)]=\\\"form.searchParams.collegeId\\\" id=\\\"college\\\">\\r\\n          <option [value]=0 [disabled]=\\\"true\\\" selected disabled>{{'Select College'|translate}}</option>\\r\\n          <option *ngFor=\\\"let opt of form.preload.collegeList\\\" [value]=\\\"opt.id\\\">{{opt.name}}</option>\\r\\n        </select>\\r\\n      </div>\\r\\n      <button class=\\\"btn-primary btn\\\" (click)=\\\"submit()\\\">{{'Search'|translate}}</button>&nbsp;&nbsp;\\r\\n      <button class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\">{{'Reset'|translate}}</button>\\r\\n    </form>\\r\\n  </div>\\r\\n  <br>\\r\\n  <div class=\\\"col-6  \\\" *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger\\\"> {{form.message}}</div>\\r\\n      <div class=\\\"col-6 \\\" *ngIf=\\\"!form.error && (form.message != null)\\\" class=\\\"alert alert-success\\\">\\r\\n        {{form.message}}</div>\\r\\n  \\r\\n  <br>\\r\\n  <div class=\\\"p-1\\\">\\r\\n    <div class=\\\"table-responsive\\\">\\r\\n      <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n        <thead class=\\\"thead-light text-uppercase\\\">\\r\\n          <tr>\\r\\n            <th>{{'S.No'|translate}}</th>\\r\\n            <th>{{'First Name'|translate}}</th>\\r\\n            <th>{{'Last Name'|translate}}</th>\\r\\n            <th>{{'Email Id'|translate}}</th>\\r\\n            <th>{{'Gender'|translate}}</th>\\r\\n            <th>{{'College'|translate}}</th>\\r\\n            <th>{{'Course'|translate}}</th>\\r\\n            <th>{{'Subject'|translate}}</th>\\r\\n            <th>{{'Phone'|translate}}</th>\\r\\n            <th>{{'DOB'|translate}}</th>\\r\\n            <th>{{'Edit'|translate}} / {{'Delete'|translate}}</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n  \\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let faculty of form.list; let i = index\\\">\\r\\n            <td> {{((form.pageNo-1)*10)+i+1}} </td>\\r\\n            <td> {{ faculty.firstName }} </td>\\r\\n            <td> {{ faculty.lastName }} </td>\\r\\n            <td> {{ faculty.email }} </td>\\r\\n            <td> {{ faculty.gender }} </td>\\r\\n            <td> {{ faculty.collegeName }} </td>\\r\\n            <td> {{ faculty.courseName }} </td>\\r\\n            <td> {{ faculty.subjectName }} </td>\\r\\n            <td> {{ faculty.mobileNo }} </td>\\r\\n            <td> {{ faculty.dob | date : 'dd-MM-yyyy'}} </td>\\r\\n            <td><a (click)=\\\"forward( '/faculty/' +  faculty.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                <i class=\\\"fa fa-edit\\\" style=\\\"font-size:20px;color:blue\\\"></i>\\r\\n              </a> / <a (click)=\\\"delete(faculty.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                <i class=\\\"fa fa-trash-o\\\" style=\\\"font-size:20px;color:red\\\"></i>\\r\\n              </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n  \\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\" col-12 form-inline mb-0  \\\">\\r\\n    <div class=\\\"col-4 text-left \\\">\\r\\n      <div *ngIf=\\\"form.pageNo>1; then sus else fail\\\"></div>\\r\\n      <ng-template #sus>\\r\\n        <button (click)=\\\"previous()\\\" class=\\\"btn btn-success\\\">{{'previous'|translate}}</button>\\r\\n      </ng-template>\\r\\n      <ng-template #fail>\\r\\n        <button (click)=\\\"previous()\\\" disabled class=\\\"btn btn-light \\\">{{'previous'|translate}}</button>\\r\\n      </ng-template>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 text-center \\\">\\r\\n      <button class=\\\"btn-primary btn \\\" (click)=\\\"forward('/faculty/')\\\">{{'Add'|translate}}</button>\\r\\n    </div>\\r\\n    <div class=\\\"col-4 text-right \\\">\\r\\n      <div *ngIf=\\\"form.count>(form.pageSize*form.pageNo);then susN else failN\\\"></div>\\r\\n      <ng-template #susN>\\r\\n        <button (click)=\\\"next()\\\" class=\\\"btn btn-success\\\">{{'next'|translate}}</button>\\r\\n      </ng-template>\\r\\n      <ng-template #failN>\\r\\n        <button (click)=\\\"next()\\\" disabled class=\\\"btn btn-light\\\">{{'next'|translate}}</button>\\r\\n      </ng-template>\\r\\n    </div>\\r\\n  </div>\\r\\n  <br><br>\\r\\n  </div>\\r\\n  </body>\"","export default \"<body class=\\\" container-fluid row\\\">\\n    <div class=\\\"row ml-3 text-center\\\" style=\\\"padding-top: 0%; background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;\\n    background-size: cover;width:100%;\\n    height: 950px;\\\">\\n        <div class=\\\"col-sm-4\\\"></div>\\n        <div class=\\\"col-sm-4 pt-5\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"text-center mb-4\\\">\\n                        <div *ngIf=\\\"form.data.id>0; then hUpdate else hAdd\\\"></div>\\n                        <ng-template #hAdd>\\n                            <h1>{{'Add Faculty'|translate}}</h1>\\n                        </ng-template>\\n                        <ng-template #hUpdate>\\n                            <h1>{{'Update Faculty'|translate}}</h1>\\n                        </ng-template>\\n                    </div>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <form>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"fName\\\" class=\\\"form-check-label\\\">{{'First Name'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span></label>\\n\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.firstName\\\" name=\\\"firstName\\\"\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter First Name'|translate}}\\\" id=\\\"fName\\\"\\n                                    [value]=\\\"form.data.firstName\\\">\\n                            </div>\\n                            <span class=\\\"text-danger mr-auto mb-auto  \\\"> {{form.inputerror.firstName}}\\n                            </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"lName\\\" class=\\\"form-check-label\\\">{{'Last Name'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-o grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.lastName\\\" name=\\\"lastName\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter Last Name'|translate}}\\\" id=\\\"lName\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.lastName}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"email\\\" class=\\\"form-check-label\\\">{{'Email'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                                </div>\\n                                <div *ngIf=\\\"form.data.id>0; then lUpdate else lAdd\\\"></div>\\n                                <ng-template #lUpdate>\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.email\\\" name=\\\"email\\\" class=\\\"form-control\\\"\\n                                        placeholder=\\\"{{'Enter Email'|translate}}\\\" id=\\\"email\\\" disabled>\\n                                </ng-template>\\n                                <ng-template #lAdd><input type=\\\"text\\\" [(ngModel)]=\\\"form.data.email\\\" name=\\\"email\\\"\\n                                        class=\\\"form-control\\\" placeholder=\\\"{{'Enter Email'|translate}}\\\" id=\\\"email\\\">\\n                                </ng-template>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.email}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"mNo\\\" class=\\\"form-check-label\\\">{{'Mobile No'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.mobileNo\\\" name=\\\"mobileNo\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter Mobile Number'|translate}}\\\" id=\\\"mNo\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.mobileNo}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row \\\">\\n                            <label for=\\\"collegeId\\\" class=\\\"form-check-label \\\">{{'College Name'|translate}} :<span\\n                                    class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-university grey-text\\\"></i> </div>\\n                                </div>\\n                                <select class=\\\"form-control\\\" *ngIf=\\\"form.preload.collegeList!=null\\\" name=\\\"collegeId\\\"\\n                                    [(ngModel)]=\\\"form.data.collegeId\\\" id=\\\"collegeId\\\">\\n                                    <option [value]=default [disabled]=\\\"true\\\" selected disabled>{{'Select College Name'|translate}}\\n                                    </option>\\n                                    <option *ngFor=\\\"let opt of form.preload.collegeList\\\" [value]=\\\"opt.id\\\">{{opt.name}}\\n                                    </option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\" id=\\\"collegeId\\\"> {{form.inputerror.collegeId}}\\n                            </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row \\\">\\n                            <label for=\\\"courseId\\\" class=\\\"form-check-label \\\">{{'Course Name'|translate}} :<span\\n                                    class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-graduation-cap grey-text\\\"></i> </div>\\n                                </div>\\n                                <select class=\\\"form-control\\\" *ngIf=\\\"form.preload.courseList!=null\\\" name=\\\"courseId\\\"\\n                                    [(ngModel)]=\\\"form.data.courseId\\\" id=\\\"collegeId\\\">\\n                                    <option [value]=default [disabled]=\\\"true\\\" selected disabled>{{'Select Course Name'|translate}}\\n                                    </option>\\n                                    <option *ngFor=\\\"let opt of form.preload.courseList\\\" [value]=\\\"opt.id\\\">{{opt.courseName}}\\n                                    </option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\" id=\\\"courseId\\\"> {{form.inputerror.courseId}}\\n                            </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row \\\">\\n                            <label for=\\\"subjectId\\\" class=\\\"form-check-label \\\">{{'Subject Name'|translate}} :<span\\n                                    class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-book grey-text\\\"></i> </div>\\n                                </div>\\n                                <select class=\\\"form-control\\\" *ngIf=\\\"form.preload.subjectList!=null\\\" name=\\\"subjectId\\\"\\n                                    [(ngModel)]=\\\"form.data.subjectId\\\" id=\\\"subjectId\\\">\\n                                    <option [value]=default [disabled]=\\\"true\\\" selected disabled>{{'Select Subject Name'|translate}}\\n                                    </option>\\n                                    <option *ngFor=\\\"let opt of form.preload.subjectList\\\" [value]=\\\"opt.id\\\">{{opt.subjectName}}\\n                                    </option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\" id=\\\"subjectId\\\"> {{form.inputerror.subjectId}}\\n                            </span>\\n                        </div>\\n\\n\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"gender\\\" class=\\\"form-check-label\\\">{{'Gender'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus-mars grey-text\\\"></i> </div>\\n                                </div>\\n                                <select [(ngModel)]=\\\"form.data.gender\\\" name=\\\"gender\\\" class=\\\"form-control\\\" id=\\\"gender\\\">\\n                                    <option [value]=\\\"null\\\" [disabled]=\\\"true\\\" selected disabled>{{'Select Gender'|translate}}</option>\\n                                    <option [value]=\\\"Male\\\">Male</option>\\n                                    <option [value]=\\\"Female\\\">Female</option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.gender}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row \\\">\\n                            <label for=\\\"datepicker\\\" class=\\\"form-check-label\\\">{{'Date of birth'|translate}}:<span\\n                                    class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"date\\\" id=\\\"datepicker\\\" name=\\\"dob\\\" [(ngModel)]=\\\"form.data.dob\\\"\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Date of Birth'|translate}}\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\">{{form.inputerror.dob}}</span>\\n                        </div>\\n\\n                        <div class=\\\"form-inline\\\">\\n                            <div class=\\\"col-4\\\"></div>\\n                            <div class=\\\"text-center\\\">\\n                                <div *ngIf=\\\"form.data.id>0; then update else add\\\"></div>\\n                                <ng-template #add>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success\\\">{{'Save'|translate}}</button>&nbsp;\\n                                        <button (click)=\\\"reset()\\\"\\n                                        class=\\\"btn btn-secondary\\\">{{'Reset'|translate}}</button>&nbsp;\\n                                </ng-template>\\n                                <ng-template #update>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success \\\">{{'Update'|translate}}</button>&nbsp;\\n                                    <button (click)=\\\"cancel()\\\" class=\\\"btn btn-secondary\\\">{{'Cancel'|translate}}</button>\\n                                </ng-template>\\n                            </div>\\n                        </div>\\n\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm-4\\\"></div>\\n    </div>\\n    \\n</body>\"","export default \"<footer class=\\\"footer\\\" style=\\\" position: fixed;\\nleft: 0;\\nbottom: 0;\\nwidth: 100%;\\\">\\n    <div class=\\\"container-fluid d-flex bg-primary justify-content-center \\\">\\n        <h5 class=\\\"text-center text-white float-center \\\"> &copy; Copyright Rays 2021</h5>\\n    </div>\\n</footer>\"","export default \"<body class=\\\" container-fluid row\\\">\\r\\n    <div class=\\\"row ml-3 \\\" style=\\\"background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\r\\n    background-attachment: fixed;background-size: cover;width:100%;height: 700px;\\\">\\r\\n        <div class=\\\"col-sm-4\\\"></div>\\r\\n        <div class=\\\"col-sm-4 pt-5 mt-5\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"text-center mb-4\\\">\\r\\n                        <h1>{{'Forgot Password'|translate}}</h1>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\r\\n                        {{form.message}}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\r\\n                        {{form.message}}\\r\\n                    </div>\\r\\n                    <form>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"login\\\" class=\\\"form-check-label\\\">{{'Email ID'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            \\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.login\\\" name=\\\"login\\\" class=\\\"form-control\\\"\\r\\n                                    placeholder=\\\"{{'Enter Registered Email ID'|translate}}\\\" id=\\\"login\\\">\\r\\n                            </div>\\r\\n                            <span class=\\\"text-danger ml-auto mb-auto\\\"> {{form.inputerror.login}} </span>\\r\\n                        </div>\\r\\n                        \\r\\n\\r\\n\\r\\n                        <div class=\\\"form-inline\\\">\\r\\n                            <div class=\\\"col-4\\\"></div>\\r\\n                            <div class=\\\"text-center\\\">\\r\\n                                <button (click)=\\\"forgot()\\\" class=\\\"btn btn-success\\\">{{'GO'|translate}}</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</body>\"","export default \"<body class=\\\"row container-fluid\\\">\\n    <div class=\\\" row ml-3 text-center \\\" style=\\\"padding-top: 0%; background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;\\n    background-size: cover;width:100%;\\n    height: 700px;\\\">\\n        <div class=\\\"col-sm-4\\\"></div>\\n        <div class=\\\"col-sm-4  \\\" style=\\\"margin-top: 7%;\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <h1 class=\\\"text-center\\\" >{{'Login'|translate}}</h1>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <form class=\\\"form-signin\\\">\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"login\\\" class=\\\"form-check-label\\\">{{'Login ID'|translate}}<span\\n                                    class=\\\"text-danger\\\">*</span></label>\\n\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                                </div>\\n                                <input id=\\\"login\\\" type=\\\"text\\\"  [(ngModel)]=\\\"form.data.login\\\" name=\\\"login\\\"\\n                                    placeholder=\\\"{{'Enter Login ID'|translate}}\\\" class=\\\"form-control\\\">\\n                            </div>\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\" id=\\\"login\\\"> {{form.inputerror.login}} </span>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"password\\\" class=\\\"form-check-label\\\">{{'Password'|translate}}<span\\n                                    class=\\\"text-danger\\\">*</span></label>\\n\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\n                                </div>\\n                                <input id=\\\"password\\\" type=\\\"password\\\" [(ngModel)]=\\\"form.data.password\\\" name=\\\"password\\\"\\n                                    placeholder=\\\"{{'Enter Password'|translate}}\\\" class=\\\"form-control\\\">\\n                            </div>\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\" id=\\\"password\\\"> {{form.inputerror.password}}\\n                            </span>\\n                        </div>\\n                        <button (click)=\\\"signIn()\\\" class=\\\"btn btn-success mr-2\\\">{{'Sign In'|translate}}</button>\\n                        <button (click)=\\\"signUp()\\\" class=\\\"btn btn-primary \\\">{{'Sign Up'|translate}}</button>\\n                        <br>\\n                        <a routerLink=\\\"/forgotpassword\\\">{{'Forgot my password'|translate}}</a>\\n\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</body>\"","export default \"<body class=\\\" container-fluid row\\\">\\r\\n    <div class=\\\" row ml-3\\\" style=\\\"background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\r\\n    background-attachment: fixed;background-size: cover;width:100%;height: 1100px;\\\">\\r\\n        <div class=\\\"col-sm-4\\\"></div>\\r\\n        <div class=\\\"col-sm-4 pt-5\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"text-center mb-4\\\">\\r\\n                        <h1>{{'User Registration'|translate}}</h1>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\r\\n                        {{form.message}}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\r\\n                        {{form.message}}\\r\\n                    </div>\\r\\n                    <form>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"fName\\\" class=\\\"form-check-label\\\">{{'First Name'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span></label>\\r\\n\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.firstName\\\" name=\\\"firstName\\\"\\r\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter First Name'|translate}}\\\" id=\\\"fName\\\"\\r\\n                                    [value]=\\\"form.data.firstName\\\">\\r\\n                            </div>\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto  \\\"> {{form.inputerror.firstName}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"lName\\\" class=\\\"form-check-label\\\">{{'Last Name'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-o grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.lastName\\\" name=\\\"lastName\\\" class=\\\"form-control\\\"\\r\\n                                    placeholder=\\\"{{'Enter Last Name'|translate}}\\\" id=\\\"lName\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.lastName}} </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"mNo\\\" class=\\\"form-check-label\\\">{{'Mobile No'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-mobile grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.mobileNo\\\" name=\\\"mobileNo\\\" class=\\\"form-control\\\"\\r\\n                                    placeholder=\\\"{{'Enter Mobile Number'|translate}}\\\" id=\\\"mNo\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.mobileNo}} </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"login\\\" class=\\\"form-check-label\\\">{{'Login'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <div *ngIf=\\\"form.data.id>0; then lUpdate else lAdd\\\"></div>\\r\\n                                <ng-template #lUpdate>\\r\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.login\\\" name=\\\"login\\\" class=\\\"form-control\\\"\\r\\n                                        placeholder=\\\"{{'Enter Email'|translate}}\\\" id=\\\"login\\\" disabled>\\r\\n                                </ng-template>\\r\\n                                <ng-template #lAdd><input type=\\\"text\\\" [(ngModel)]=\\\"form.data.login\\\" name=\\\"login\\\"\\r\\n                                        class=\\\"form-control\\\" placeholder=\\\"{{'Enter Email ID'|translate}}\\\" id=\\\"login\\\">\\r\\n                                </ng-template>\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.login}} </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"password\\\" class=\\\"form-check-label\\\">{{'Password'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"password\\\" [(ngModel)]=\\\"form.data.password\\\" name=\\\"password\\\"\\r\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Password'|translate}}\\\" id=\\\"password\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\"> {{form.inputerror.password}} </span>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"confirmPassword\\\" class=\\\"form-check-label\\\">{{'Confirm Password'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"password\\\" [(ngModel)]=\\\"form.data.confirmPassword\\\" name=\\\"confirmPassword\\\"\\r\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Confirm Password'|translate}}\\\" id=\\\"confirmPassword\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\"> {{form.inputerror.confirmPassword}} </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"gender\\\" class=\\\"form-check-label\\\">{{'Gender'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus-double grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <select [(ngModel)]=\\\"form.data.gender\\\" name=\\\"gender\\\" class=\\\"form-control\\\" id=\\\"gender\\\">\\r\\n                                    <option [value]=\\\"default\\\" [disabled]=\\\"true\\\" selected disabled>{{'Select Gender'|translate}}</option>\\r\\n                                    <option [value]=\\\"Male\\\">Male</option>\\r\\n                                    <option [value]=\\\"Female\\\">Female</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.gender}} </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row \\\">\\r\\n                            <label for=\\\"datepicker\\\" class=\\\"form-check-label\\\">{{'Date of birth'|translate}}:<span\\r\\n                                    class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-birthday-cake grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"date\\\" id=\\\"datepicker\\\" name=\\\"dob\\\" [(ngModel)]=\\\"form.data.dob\\\"\\r\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Date of Birth'|translate}}\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\">{{form.inputerror.dob}}</span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-inline\\\">\\r\\n                            <div class=\\\"col-4\\\"></div>\\r\\n                            <div class=\\\"text-center\\\">\\r\\n                                <button (click)=\\\"submit()\\\" class=\\\"btn btn-success\\\">{{'Save'|translate}}</button>&nbsp;\\r\\n                                <button class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\">{{'Reset'|translate}}</button>\\r\\n\\r\\n                            </div>\\r\\n                        </div>\\r\\n\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\"></div>\\r\\n    </div>\\r\\n</body>\"","export default \"<body class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"\\\" style=\\\"padding-top: 0%; background-image: url(./assets/list.jpg); background-repeat: no-repeat;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;width:100%;\\r\\n    height: 850px;bottom: 0%;\\\">\\r\\n        <div class=\\\"d-flex bg-primary text-white \\\">\\r\\n            <h1 class=\\\"text-center container-fluid \\\">{{'Get Marksheet'|translate}}</h1>\\r\\n        </div>\\r\\n        <br>\\r\\n\\r\\n        <form class=\\\"form-inline\\\">\\r\\n            <div class=\\\"col-4\\\"></div>\\r\\n            <div class=\\\"form-group  pr-3\\\">\\r\\n                <label for=\\\"rollNo\\\" class=\\\"form-check-label pr-3 \\\">{{'Roll No'|translate}}: </label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter Roll Number'|translate}}\\\" name=\\\"rollNo\\\"\\r\\n                    [(ngModel)]=\\\"form.rollNo\\\" id=\\\"rollNo\\\">\\r\\n            </div>\\r\\n            <button class=\\\"btn-primary btn\\\" (click)=\\\"submit()\\\">{{'Search'|translate}}</button>&nbsp;&nbsp;\\r\\n            <button class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\">{{'Reset'|translate}}</button>\\r\\n        </form>\\r\\n        <div class=\\\"\\\" *ngIf=\\\"this.flag\\\">\\r\\n\\r\\n            <div class=\\\"p-1\\\">\\r\\n                <div class=\\\"table-responsive \\\">\\r\\n                    <table class=\\\"table table-bordered\\\">\\r\\n                        <thead class=\\\"thread-light \\\">\\r\\n                            <tr>\\r\\n                                <tr>{{'Student Name'|translate}}    : {{form.data.student.firstName}} {{form.data.student.lastName}}</tr>\\r\\n                                <tr>{{'College Name'|translate}}    : {{form.data.college.name}}</tr>\\r\\n                            \\r\\n                                <tr>{{'College Address'|translate}}         : {{form.data.college.address}}, {{form.data.college.city}} ,{{form.data.college.state}}</tr>\\r\\n                                <tr>{{'Phone No'|translate}}        : {{form.data.college.phoneNo}}\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n                        <thead class=\\\"thread-light text-uppercase \\\">\\r\\n                            <tr>\\r\\n                                <td>{{'Subject'|translate}}</td>\\r\\n                                <td>{{'Maximum Marks'|translate}}</td>\\r\\n                                <td>{{'Passing Marks'|translate}}</td>\\r\\n                                <td>{{'Marks Obtained'|translate}}</td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Physics'|translate}}</td>\\r\\n                                <td>100</td>\\r\\n                                <td>35</td>\\r\\n                                <td>{{form.data.marksheet.physics}}</td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Chemistry'|translate}}</td>\\r\\n                                <td>100</td>\\r\\n                                <td>35</td>\\r\\n                                <td>{{form.data.marksheet.chemistry}}</td>\\r\\n                            </tr>\\r\\n                            <tr>\\r\\n                                <td>{{'Maths'|translate}}</td>\\r\\n                                <td>100</td>\\r\\n                                <td>35</td>\\r\\n                                <td>{{form.data.marksheet.maths}}</td>\\r\\n                            </tr>\\r\\n                            \\r\\n                            <tr>\\r\\n                                <td>{{'Total'|translate}}:</td>\\r\\n                                \\r\\n                                <td> {{\\r\\n                                    (form.data.marksheet.physics+form.data.marksheet.maths+form.data.marksheet.chemistry)\\r\\n                                    }}\\r\\n                                    /300</td>\\r\\n                                <td>{{'Percentage'|translate}}:</td>\\r\\n                                <td> {{\\r\\n                                    (form.data.marksheet.physics+form.data.marksheet.maths+form.data.marksheet.chemistry)/3\\r\\n                                    | number:'1.0-2' }}\\r\\n                                </td>\\r\\n                            </tr>\\r\\n                        </thead>\\r\\n\\r\\n                    </table>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n\\r\\n    </div>\\r\\n</body>\"","export default \"<body class=\\\"container-fluid text-center\\\">\\r\\n  <div class=\\\"content-wrapper\\\" style=\\\"padding-top: 0%; background-image: url(./assets/list.jpg); background-repeat: no-repeat;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;width:100%;\\r\\n    height: 850px;bottom: 0%;\\\">\\r\\n  <div class=\\\"d-flex bg-primary text-white paddin \\\">\\r\\n    <h1 class=\\\"text-center container-fluid \\\">{{'Marksheet List'|translate}}</h1>\\r\\n  </div>\\r\\n  <div class=\\\"text-center row\\\">\\r\\n    <div class=\\\"col-3\\\"></div>\\r\\n    <form class=\\\"form-inline pt-3  \\\">\\r\\n      <div class=\\\"form-group  pr-3\\\">\\r\\n        <label for=\\\"name\\\" class=\\\"form-check-label pr-3 \\\">{{'Student Name'|translate}} : </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter Student Name'|translate}}\\\" name=\\\"name\\\"\\r\\n          [(ngModel)]=\\\"form.searchParams.name\\\" id=\\\"name\\\">\\r\\n      </div>\\r\\n      <div class=\\\"form-group pr-3\\\">\\r\\n        <label for=\\\"rollNo\\\" class=\\\"form-check-label pr-3 \\\">{{'Roll No'|translate}} : </label>\\r\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"rollNo\\\" id=\\\"rollNo\\\" placeholder=\\\"{{'Enter Roll Number'|translate}}\\\"\\r\\n          [(ngModel)]=\\\"form.searchParams.rollNo\\\">\\r\\n      </div>\\r\\n\\r\\n\\r\\n      <button class=\\\"btn-primary btn\\\" (click)=\\\"submit()\\\">{{'Search'|translate}}</button>&nbsp;&nbsp;\\r\\n      <button class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\">{{'Reset'|translate}}</button>\\r\\n    </form>\\r\\n  </div>\\r\\n  <br>\\r\\n  <div class=\\\"col-6  \\\" *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger\\\"> {{form.message}}</div>\\r\\n  <div class=\\\"col-6 \\\" *ngIf=\\\"!form.error && (form.message != null)\\\" class=\\\"alert alert-success\\\">\\r\\n    {{form.message}}</div>\\r\\n\\r\\n  <br>\\r\\n  <div class=\\\"p-1\\\">\\r\\n    <div class=\\\"table-responsive-sm\\\">\\r\\n      <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n        <thead class=\\\"thead-light text-uppercase\\\">\\r\\n          <tr>\\r\\n            <th>{{'S.No'|translate}}</th>\\r\\n            <th>{{'Roll No'|translate}}</th>\\r\\n            <th>{{'Student Name'|translate}}</th>\\r\\n            <th>{{'Physics'|translate}}</th>\\r\\n            <th>{{'Maths'|translate}}</th>\\r\\n            <th>{{'Chemistry'|translate}}</th>\\r\\n            <th>{{'Total'|translate}}</th>\\r\\n            <th>{{'Percentage'|translate}}</th>\\r\\n            <th>{{'Result'|translate}}</th>\\r\\n            <th>{{'Edit'|translate}} / {{'Delete'|translate}}</th>\\r\\n          </tr>\\r\\n        </thead>\\r\\n\\r\\n        <tbody>\\r\\n          <tr *ngFor=\\\"let marksheet of form.list; let i = index\\\">\\r\\n            <td> {{((form.pageNo-1)*10)+i+1}} </td>\\r\\n            <td> {{ marksheet.rollNo }} </td>\\r\\n            <td> {{ marksheet.name }} </td>\\r\\n            <td> {{ marksheet.physics }} </td>\\r\\n            <td> {{ marksheet.maths }} </td>\\r\\n            <td> {{ marksheet.chemistry }} </td>\\r\\n            <td> {{ (marksheet.physics+marksheet.maths+marksheet.chemistry) }} /300</td>\\r\\n            <td> {{ (marksheet.physics+marksheet.maths+marksheet.chemistry)/3 | number:'1.0-2' }} </td>\\r\\n            <td>\\r\\n              <div class=\\\"\\\" *ngIf=\\\"result(marksheet.physics,marksheet.maths,marksheet.chemistry);then pass else fail \\\">\\r\\n              </div>\\r\\n              <ng-template #pass>\\r\\n                <div class=\\\"text-success font-weight-bold\\\"> Pass </div>\\r\\n              </ng-template>\\r\\n              <ng-template #fail>\\r\\n                <div class=\\\"text-danger font-weight-bold \\\"> Fail </div>\\r\\n              </ng-template>\\r\\n            </td>\\r\\n            <td><a (click)=\\\"forward( '/marksheet/' +  marksheet.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                <i class=\\\"fa fa-edit\\\" style=\\\"font-size:20px;color:blue\\\"></i>\\r\\n              </a> / <a (click)=\\\"delete(marksheet.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                <i class=\\\"fa fa-trash-o\\\" style=\\\"font-size:20px;color:red\\\"></i>\\r\\n              </a>\\r\\n            </td>\\r\\n          </tr>\\r\\n        </tbody>\\r\\n      </table>\\r\\n    </div>\\r\\n  </div>\\r\\n  <form class=\\\"form-inline \\\">\\r\\n    <div class=\\\"col-4 text-left \\\">\\r\\n      <div *ngIf=\\\"form.pageNo>1; then sus else fail\\\"></div>\\r\\n      <ng-template #sus>\\r\\n        <button (click)=\\\"previous()\\\" class=\\\"btn btn-success\\\">{{'previous'|translate}}</button>\\r\\n      </ng-template>\\r\\n      <ng-template #fail>\\r\\n        <button (click)=\\\"previous()\\\" disabled class=\\\"btn btn-light \\\">{{'previous'|translate}}</button>\\r\\n      </ng-template>\\r\\n    </div>\\r\\n    <div class=\\\" col-4 text-center \\\">\\r\\n      <button class=\\\"btn-primary btn \\\" (click)=\\\"forward('/marksheet/')\\\">{{'Add'|translate}}</button>\\r\\n    </div>\\r\\n    <div class=\\\" col-4 text-right \\\">\\r\\n      <div *ngIf=\\\"form.count>(form.pageSize*form.pageNo);then susN else failN\\\"></div>\\r\\n      <ng-template #susN>\\r\\n        <button (click)=\\\"next()\\\" class=\\\"btn btn-success\\\">{{'next'|translate}}</button>\\r\\n      </ng-template>\\r\\n      <ng-template #failN>\\r\\n        <button (click)=\\\"next()\\\" disabled class=\\\"btn btn-light\\\">{{'next'|translate}}</button>\\r\\n      </ng-template>\\r\\n    </div>\\r\\n  </form>\\r\\n  \\r\\n  <br><br>\\r\\n  </div>\\r\\n</body>\"","export default \"\\n<body class=\\\" container-fluid row\\\">\\n    <div class=\\\" row ml-3\\\" style=\\\"padding-top: 0%; background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;background-size: cover;width:100%;height: 700px;bottom: 0%;\\\">\\n        <div class=\\\"col-sm-4\\\"></div>\\n        <div class=\\\"col-sm-4 pt-5\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"text-center mb-4\\\">\\n                        <div *ngIf=\\\"form.data.id>0; then hUpdate else hAdd\\\"></div>\\n                        <ng-template #hAdd>\\n                            <h1>{{'Add Marksheet'|translate}}</h1>\\n                        </ng-template>\\n                        <ng-template #hUpdate>\\n                            <h1>{{'Update Marksheet'|translate}}</h1>\\n                        </ng-template>\\n                    </div>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <form>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"rollNo\\\" class=\\\"form-check-label\\\">{{'Roll No'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span></label>\\n\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-id-card grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.rollNo\\\" name=\\\"rollNo\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter RollNo[00XX00]'|translate}}\\\" id=\\\"rollNo\\\" [value]=\\\"form.data.rollNo\\\">\\n                            </div>\\n                            <span class=\\\"text-danger mr-auto mb-auto  \\\"> {{form.inputerror.rollNo}}\\n                            </span>\\n                        </div>\\n                        <div class=\\\"form-group row \\\">\\n                            <label for=\\\"studentId\\\" class=\\\"form-check-label \\\">{{'Student Name'|translate}} :<span\\n                                    class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                                </div>\\n                                <select class=\\\"form-control\\\" name=\\\"studentId\\\" [(ngModel)]=\\\"form.data.studentId\\\"\\n                                    id=\\\"studentId\\\">\\n                                    <option [value]=default [disabled]=\\\"true\\\" selected disabled>{{'Select Student Name'|translate}}\\n                                    </option>\\n                                    <option *ngFor=\\\"let opt of form.preload.studentList\\\" [value]=\\\"opt.id\\\">{{opt.firstName}}\\n                                    </option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\" id=\\\"studentId\\\"> {{form.inputerror.studentId}}\\n                            </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"physics\\\" class=\\\"form-check-label\\\">{{'Physics'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-sticky-note grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.physics\\\" name=\\\"physics\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter Physics Marks'|translate}}\\\" id=\\\"physics\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.physics}} </span>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"maths\\\" class=\\\"form-check-label\\\">{{'Maths'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-sticky-note grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.maths\\\" name=\\\"maths\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter Maths Marks'|translate}}\\\" id=\\\"maths\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.maths}} </span>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"chemistry\\\" class=\\\"form-check-label\\\">{{'Chemistry'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-sticky-note grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.chemistry\\\" name=\\\"chemistry\\\"\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Chemistry Marks'|translate}}\\\" id=\\\"chemistry\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.chemistry}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-inline\\\">\\n                            <div class=\\\"col-4\\\"></div>\\n                            <div class=\\\"text-center\\\">\\n                                <div *ngIf=\\\"form.data.id>0; then update else add\\\"></div>\\n                                <ng-template #add>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success\\\">{{'Save'|translate}}</button>&nbsp;\\n                                        <button (click)=\\\"reset()\\\"\\n                                        class=\\\"btn btn-secondary\\\">{{'Reset'|translate}}</button>&nbsp;\\n                                </ng-template>\\n                                <ng-template #update>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success \\\">{{'Update'|translate}}</button>&nbsp;\\n                                    <button (click)=\\\"cancel()\\\" class=\\\"btn btn-secondary\\\">{{'Cancel'|translate}}</button>\\n                                </ng-template>\\n                            </div>\\n                        </div>\\n\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm-4\\\"></div>\\n    </div>\\n</body>\"","export default \"<body class=\\\"container-fluid text-center\\\">\\r\\n    <div class=\\\"\\\" style=\\\"padding-top: 0%; background-image: url(./assets/list.jpg); background-repeat: no-repeat;\\r\\n      background-attachment: fixed;\\r\\n      background-size: cover;width:100%;\\r\\n      height: 850px;bottom: 0%;\\\">\\r\\n      <div class=\\\"d-flex bg-primary text-white \\\">\\r\\n        <h1 class=\\\"text-center container-fluid \\\">{{'Marksheet Merit List'|translate}}</h1>\\r\\n      </div>\\r\\n      \\r\\n    <br>\\r\\n      <div class=\\\"col-6  \\\" *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger\\\"> {{form.message}}</div>\\r\\n      <div class=\\\"col-6 \\\" *ngIf=\\\"!form.error && (form.message != null)\\\"\\r\\n        class=\\\"alert alert-success\\\">\\r\\n        {{form.message}}</div>\\r\\n    \\r\\n      <br>\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th>{{'S.No'|translate}}</th>\\r\\n                <th>{{'Roll No'|translate}}</th>\\r\\n                <th>{{'Student Name'|translate}}</th>\\r\\n                <th>{{'Physics'|translate}}</th>\\r\\n                <th>{{'Maths'|translate}}</th>\\r\\n                <th>{{'Chemistry'|translate}}</th>\\r\\n                <th>{{'Total'|translate}}</th>\\r\\n                <th>{{'Percentage'|translate}}</th>\\r\\n                <th>{{'Result'|translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n    \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let marksheet of form.list; let i = index\\\">\\r\\n                <td> {{1+i}} </td>\\r\\n                <td> {{ marksheet.rollNo }} </td>\\r\\n                <td> {{ marksheet.name }} </td>\\r\\n                <td> {{ marksheet.physics }} </td>\\r\\n                <td> {{ marksheet.maths }} </td>\\r\\n                <td> {{ marksheet.chemistry }} </td>\\r\\n                <td> {{ (marksheet.physics+marksheet.maths+marksheet.chemistry) }} /300</td>\\r\\n                <td> {{ (marksheet.physics+marksheet.maths+marksheet.chemistry)/3 | number:'1.0-2' }} </td>\\r\\n                <td> <div class=\\\"\\\" *ngIf=\\\"result(marksheet.physics,marksheet.maths,marksheet.chemistry);then pass else fail \\\" ></div>\\r\\n                  <ng-template #pass ><div class=\\\"text-success font-weight-bold\\\"> Pass </div></ng-template>\\r\\n                  <ng-template #fail ><div class=\\\"text-danger font-weight-bold \\\"> Fail </div></ng-template>\\r\\n                </td>\\r\\n                \\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n      <br><br>\\r\\n      </div>\\r\\n    </body>\"","export default \"<!--LOG IN START-->\\n<div *ngIf=\\\"checkLogin()\\\">\\n  <nav class=\\\"navbar navbar-expand-lg bg-secondary navbar-secondary \\\">\\n\\n    <a class=\\\"navbar-brand\\\" href=\\\"/ORSui\\\"><img class=\\\"image-responsive\\\" src='./assets/logo.png' height=\\\"30px\\\"></a>\\n\\n    <button class=\\\"navbar-toggler navbar-light \\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\"\\n      aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n<!--CHECK-->\\n \\n\\n<!--CHECK-->\\n    <div class=\\\"collapse navbar-collapse bg-secondary \\\" id=\\\"navbarNav\\\">\\n      <select #locale (change)='changeLocale(locale.value)' class=\\\"bg-secondary text-light\\\">\\n        <option class=\\\"text-light\\\" value=\\\"en\\\">English</option>\\n        <option class=\\\"text-light\\\" value=\\\"hi\\\">{{'Hindi' | translate }}</option>\\n      </select>\\n      <ul class=\\\"nav navbar-nav \\\" style=\\\"list-style-type: none;\\\">\\n        <li class=\\\"nav-item dropdown\\\" style=\\\"list-style-type: none;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary  dropdown-toggle\\\"\\n            data-toggle=\\\"dropdown\\\">{{'User'|translate}}</button>\\n          <div class=\\\"dropdown-menu\\\">\\n            <a routerLink=\\\"/user\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-user-plus\\\"></i> {{'Add User'|translate}}</a>\\n            <a routerLink=\\\"/userlist\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-list\\\"></i> {{'User List'|translate}}</a>\\n          </div>\\n\\n        </li>\\n\\n        <li class=\\\"nav-item dropdown\\\" style=\\\"list-style-type: none;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\"\\n            data-toggle=\\\"dropdown\\\">{{'Role'|translate}}</button>\\n          <div class=\\\"dropdown-menu\\\">\\n            <a routerLink=\\\"/role\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-user-circle\\\"></i>{{'Add Role'|translate}}</a>\\n            <a routerLink=\\\"/rolelist\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-list\\\"></i> {{'Role List'|translate}}</a>\\n          </div>\\n        </li>\\n\\n        <li class=\\\"nav-item dropdown\\\" style=\\\"list-style-type: none;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\"\\n            data-toggle=\\\"dropdown\\\">{{'College'|translate}}</button>\\n          <div class=\\\"dropdown-menu\\\">\\n            <a routerLink=\\\"/college\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-university\\\"></i> {{'Add\\n              College'|translate}}</a>\\n            <a routerLink=\\\"/collegelist\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-list\\\"></i> {{'College\\n              List'|translate}}</a>\\n          </div>\\n        </li>\\n\\n        <li class=\\\"nav-item dropdown\\\" style=\\\"list-style-type: none;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\"\\n            data-toggle=\\\"dropdown\\\">{{'Student'|translate}}</button>\\n          <div class=\\\"dropdown-menu\\\">\\n            <a routerLink=\\\"/student\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-users\\\"></i> {{'Add Student'|translate}}</a>\\n            <a routerLink=\\\"/studentlist\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-list\\\"></i> {{'Student\\n              List'|translate}}</a>\\n          </div>\\n        </li>\\n\\n        <li class=\\\"nav-item dropdown\\\" style=\\\"list-style-type: none;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\"\\n            data-toggle=\\\"dropdown\\\">{{'Course'|translate}}</button>\\n          <div class=\\\"dropdown-menu\\\">\\n            <a routerLink=\\\"/course\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-plus\\\"></i> {{'Add Course'|translate}}</a>\\n            <a routerLink=\\\"/courselist\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-list\\\"></i> {{'Course\\n              List'|translate}}</a>\\n          </div>\\n        </li>\\n\\n        <li class=\\\" nav-item dropdown\\\" style=\\\"list-style-type: none;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\"\\n            data-toggle=\\\"dropdown\\\">{{'Subject'|translate}}</button>\\n          <div class=\\\"dropdown-menu\\\">\\n            <a routerLink=\\\"/subject\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-plus\\\"></i> {{'Add Subject'|translate}}</a>\\n            <a routerLink=\\\"/subjectlist\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-list\\\"></i> {{'Subject\\n              List'|translate}}</a>\\n          </div>\\n        </li>\\n\\n        <li class=\\\"nav-item dropdown\\\" style=\\\"list-style-type: none;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\"\\n            data-toggle=\\\"dropdown\\\">{{'Marksheet'|translate}}</button>\\n          <div class=\\\"dropdown-menu\\\">\\n            <a routerLink=\\\"/marksheet\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-plus\\\"></i> {{'Add\\n              Marksheet'|translate}}</a>\\n            <a routerLink=\\\"/marksheetlist\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-list\\\"></i> {{'Marksheet\\n              List'|translate}}</a>\\n            <a routerLink=\\\"/meritlist\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-list-ol\\\"></i> {{'Merit\\n              List'|translate}}</a>\\n            <a routerLink=\\\"/getmarksheet\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-id-card-o\\\"></i> {{'Get\\n              Marksheet'|translate}}</a>\\n          </div>\\n        </li>\\n\\n        <li class=\\\"nav-item dropdown\\\" style=\\\"list-style-type: none;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\"\\n            data-toggle=\\\"dropdown\\\">{{'Faculty'|translate}}</button>\\n          <div class=\\\"dropdown-menu\\\">\\n            <a routerLink=\\\"/faculty\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-user-circle\\\"></i> {{'Add\\n              Faculty'|translate}}</a>\\n            <a routerLink=\\\"/facultylist\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-list\\\"></i> {{'Faculty\\n              List'|translate}}</a>\\n          </div>\\n        </li>\\n\\n        <li class=\\\"nav-item dropdown\\\" style=\\\"list-style-type: none;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\"\\n            data-toggle=\\\"dropdown\\\">{{'TimeTable'|translate}}</button>\\n          <div class=\\\"dropdown-menu\\\">\\n            <a routerLink=\\\"/timetable\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-clock-o\\\"></i> {{'Add\\n              TimeTable'|translate}}</a>\\n            <a routerLink=\\\"/timetablelist\\\" class=\\\"dropdown-item\\\"><i class=\\\"fa fa-list\\\"></i> {{'TimeTable\\n              List'|translate}}</a>\\n          </div>\\n        </li>\\n      </ul>\\n      <ul class=\\\"nav navbar-nav ml-auto\\\" style=\\\"list-style-type: none;\\\">\\n        <li class=\\\"nav-item dropdown ml-auto \\\" style=\\\"list-style-type: none;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle ml-auto\\\" data-toggle=\\\"dropdown\\\">\\n            <i class=\\\"fa fa-user-circle\\\" style=\\\"font-size: 19px;\\\"> </i> {{firstName}} ({{roleName}})</button>\\n          <div class=\\\"dropdown-menu dropdown-menu-right  ml-auto\\\">\\n            <a class=\\\"dropdown-item \\\" routerLink=\\\"/myprofile\\\"><i class=\\\"fa fa-user\\\"></i> {{'My Profile'|translate}}</a>\\n            <a class=\\\"dropdown-item \\\" routerLink=\\\"/changepassword\\\"><i class=\\\"fa fa-key\\\"></i> {{'Change Password'|translate}}</a>\\n            <a class=\\\"dropdown-item \\\" (click)=\\\"logout();\\\"><i class=\\\"fa fa-sign-out\\\"></i> {{'Sign Out'|translate}}</a>\\n          </div>\\n        </li>\\n\\n      </ul>\\n    </div>\\n  </nav>\\n</div>\\n<!--LOG IN END-->\\n\\n<!--LOG OUT START-->\\n\\n<div *ngIf=\\\"!checkLogin();\\\">\\n  <nav class=\\\"navbar navbar-expand-lg bg-secondary navbar-secondary \\\">\\n\\n    <a class=\\\"navbar-brand\\\" href=\\\"/ORSui\\\"><img class=\\\"image-responsive\\\" src='./assets/logo.png' height=\\\"30px\\\"></a>\\n\\n    <button class=\\\"navbar-toggler navbar-light \\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\" data-target=\\\"#navbarNav\\\"\\n      aria-controls=\\\"navbarNav\\\" aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\">\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\n    </button>\\n\\n    <div class=\\\"collapse navbar-collapse bg-secondary \\\" id=\\\"navbarNav\\\">\\n      <select #locale (change)='changeLocale(locale.value)' class=\\\"bg-secondary text-light\\\">\\n        <option class=\\\"text-light\\\" value=\\\"en\\\">English</option>\\n        <option class=\\\"text-light\\\" value=\\\"hi\\\">{{'Hindi'|translate}}</option>\\n      </select>\\n      <ul class=\\\"nav navbar-nav ml-auto\\\" style=\\\"list-style-type: none;\\\">\\n        <li class=\\\"nav-item dropdown ml-auto\\\" style=\\\"list-style-type: none;\\\">\\n          <button type=\\\"button\\\" class=\\\"btn btn-secondary dropdown-toggle\\\" data-toggle=\\\"dropdown\\\"><i\\n              class=\\\"fa fa-user-circle\\\" style=\\\"font-size: 19px;\\\"> </i> {{'Hi, Guest'|translate}}</button>\\n          <div class=\\\"dropdown-menu dropdown-menu-right ml-auto\\\">\\n\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"/login\\\"><i class=\\\"fa fa-sign-in\\\"></i> &nbsp;{{'Log in' |\\n              translate}}</a>\\n            <a class=\\\"dropdown-item\\\" routerLink=\\\"/signup\\\"><i class=\\\"fa fa-users\\\"></i> &nbsp;{{'User Registration' |\\n              translate}}</a>\\n          </div>\\n        <li>\\n      </ul>\\n    </div>\\n  </nav>\\n\\n</div>\"","export default \"<p>page-not-found works!</p>\\n\"","export default \"<body class=\\\"container-fluid text-center\\\">\\r\\n    <div class=\\\"content-wrapper\\\" style=\\\"padding-top: 0%; background-image: url(./assets/list.jpg); background-repeat: no-repeat;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;width:100%;\\r\\n    height: 850px;bottom: 0%;\\\">\\r\\n    <div class=\\\"d-flex bg-primary text-white paddin \\\">\\r\\n        <h1 class=\\\"text-center container-fluid \\\">{{'Role List'|translate}}</h1>\\r\\n    </div>\\r\\n    <div class=\\\"text-center row\\\">\\r\\n        <div class=\\\"col-3\\\"></div>\\r\\n        <form class=\\\"form-inline pt-3  \\\">\\r\\n            <div class=\\\"form-group  pr-3\\\">\\r\\n                <label for=\\\"name\\\" class=\\\"form-check-label pr-3 \\\">{{'Name'|translate}} : </label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter Role Name'|translate}}\\\" name=\\\"name\\\"\\r\\n                    [(ngModel)]=\\\"form.searchParams.name\\\" id=\\\"name\\\">\\r\\n            </div>\\r\\n            <div class=\\\"form-group pr-3\\\">\\r\\n                <label for=\\\"description\\\" class=\\\"form-check-label pr-3 \\\">{{'Description'|translate}} : </label>\\r\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"description\\\" id=\\\"description\\\"\\r\\n                    placeholder=\\\"{{'Enter Role Description'|translate}}\\\" [(ngModel)]=\\\"form.searchParams.description\\\">\\r\\n            </div>\\r\\n            <button class=\\\"btn-primary btn\\\" (click)=\\\"submit()\\\">{{'Search'|translate}}</button>&nbsp;&nbsp;\\r\\n            <button class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\">{{'Reset'|translate}}</button>\\r\\n        </form>\\r\\n    </div>\\r\\n    <div class=\\\"col-6  \\\" *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger\\\"> {{form.message}}</div>\\r\\n    <div class=\\\"col-6 \\\" *ngIf=\\\"!form.error && form.message != null && form.message.length()>0\\\"\\r\\n        class=\\\"alert alert-success\\\">\\r\\n        {{form.message}}</div>\\r\\n\\r\\n    <br>\\r\\n\\r\\n\\r\\n    <br>\\r\\n    <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n            <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n                <thead class=\\\"thead-light text-uppercase\\\">\\r\\n                    <tr>\\r\\n                        <th>{{'S.No'|translate}}</th>\\r\\n                        <th>{{'Name'|translate}}</th>\\r\\n                        <th>{{'Description'|translate}}</th>\\r\\n                        <th>{{'Edit'|translate}}/{{'Delete'|translate}}</th>\\r\\n                    </tr>\\r\\n                </thead>\\r\\n                <tbody>\\r\\n                    <tr *ngFor=\\\"let role of form.list; let i = index\\\">\\r\\n                        <td> {{((form.pageNo-1)*10)+i+1}} </td>\\r\\n                        <td> {{ role.name }} </td>\\r\\n                        <td> {{ role.description }} </td>\\r\\n                        <td>\\r\\n                            <div *ngIf=\\\"role.id==1;then read else write\\\"></div>\\r\\n                            <ng-template #read><i class=\\\"fa fa-edit\\\" style=\\\"font-size:20px;color:grey\\\"></i> / <i\\r\\n                                    class=\\\"fa fa-trash-o\\\" style=\\\"font-size:20px;color:grey\\\"></i></ng-template>\\r\\n                            <ng-template #write><a (click)=\\\"forward( '/role/' +  role.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                    <i class=\\\"fa fa-edit\\\" style=\\\"font-size:20px;color:blue\\\"></i>\\r\\n                                </a> / <a (click)=\\\"delete(role.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                    <i class=\\\"fa fa-trash-o\\\" style=\\\"font-size:20px;color:red\\\"></i>\\r\\n                                </a></ng-template>\\r\\n                        </td>\\r\\n                    </tr>\\r\\n                </tbody>\\r\\n            </table>\\r\\n        </div>\\r\\n    </div>\\r\\n\\r\\n    <div class=\\\" col-12 form-inline\\\">\\r\\n        <div class=\\\"col-4 text-left \\\">\\r\\n            <div *ngIf=\\\"form.pageNo>1; then sus else fail\\\"></div>\\r\\n            <ng-template #sus>\\r\\n                <button (click)=\\\"previous()\\\" class=\\\"btn btn-success\\\">{{'Previous'|translate}}</button>\\r\\n            </ng-template>\\r\\n            <ng-template #fail>\\r\\n                <button (click)=\\\"previous()\\\" disabled class=\\\"btn btn-light \\\">{{'Previous'|translate}}</button>\\r\\n            </ng-template>\\r\\n        </div>\\r\\n\\r\\n        <div class=\\\"text-center col-4\\\">\\r\\n            <button class=\\\"btn-primary btn  \\\" (click)=\\\"forward('/role/')\\\">{{'Add'|translate}}</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-3 text-right \\\">\\r\\n            <div *ngIf=\\\"form.count>(form.pageSize*form.pageNo);then susN else failN\\\"></div>\\r\\n            <ng-template #susN>\\r\\n                <button (click)=\\\"next()\\\" class=\\\"btn btn-success\\\">{{'Next'|translate}}</button>\\r\\n            </ng-template>\\r\\n            <ng-template #failN>\\r\\n                <button (click)=\\\"next()\\\" disabled class=\\\"btn btn-light\\\">{{'Next'|translate}}</button>\\r\\n            </ng-template>\\r\\n        </div>\\r\\n    </div>\\r\\n    \\r\\n    <br><br>\\r\\n    </div>\\r\\n</body>\"","export default \"<body class=\\\"container-fluid row \\\">\\n    <div class=\\\"row ml-3\\\" style=\\\" background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;background-size: cover;width:100%;height: 700px;bottom: 0%;\\\">\\n        <div class=\\\"col-sm-4\\\"></div>\\n        <div class=\\\"col-sm-4 pt-5 \\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"text-center mb-4\\\">\\n                        <div *ngIf=\\\"form.data.id>0; then hUpdate else hAdd\\\"></div>\\n                        <ng-template #hAdd>\\n                            <h1>{{'Add Role'|translate}}</h1>\\n                        </ng-template>\\n                        <ng-template #hUpdate>\\n                            <h1>{{'Update Role'|translate}}</h1>\\n                        </ng-template>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\" *ngIf=\\\"form.error && form.message!=null \\\" class=\\\"alert alert-danger\\\">\\n                        {{form.message}}</div>\\n                    <div class=\\\"col-sm-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\"alert alert-success\\\">\\n                        {{form.message}}</div>\\n                    <form>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"rName\\\" class=\\\"form-check-label\\\">{{'Role Name'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span></label>\\n\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.name\\\" name=\\\"name\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter Role Name'|translate}}\\\" id=\\\"rName\\\" [value]=\\\"form.data.name\\\">\\n                            </div>\\n                            <span class=\\\"text-danger mr-auto mb-auto  \\\"> {{form.inputerror.name}}\\n                            </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"description\\\" class=\\\"form-check-label\\\">{{'Role Description'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span></label>\\n\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.description\\\" name=\\\"firstName\\\"\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Role Description'|translate}}\\\" id=\\\"description\\\"\\n                                    [value]=\\\"form.data.description\\\">\\n                            </div>\\n                            <span class=\\\"text-danger mr-auto mb-auto  \\\"> {{form.inputerror.description}}\\n                            </span>\\n                        </div>\\n\\n                        <div class=\\\"form-inline\\\">\\n                            <div class=\\\"col-4\\\"></div>\\n                            <div class=\\\"justify-content-center text-center\\\">\\n                                <div *ngIf=\\\"form.data.id>0; then update else add\\\"></div>\\n                                <ng-template #add>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success\\\">{{'Save'|translate}}</button>&nbsp;\\n                                    <button (click)=\\\"reset()\\\"\\n                                    class=\\\"btn btn-secondary\\\">{{'Reset'|translate}}</button>&nbsp;\\n                                         \\n                                </ng-template>\\n                                <ng-template #update>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success \\\">{{'Update'|translate}}</button>&nbsp;\\n                                    <button (click)=\\\"cancel()\\\" class=\\\"btn btn-secondary\\\">{{'Cancel'|translate}}</button>\\n                                </ng-template>\\n                            </div>\\n                        </div>\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</body>\"","export default \"<body class=\\\"container-fluid text-center\\\">\\r\\n    <div class=\\\"content-wrapper\\\" style=\\\"padding-top: 0%; background-image: url(./assets/list.jpg); background-repeat: no-repeat;\\r\\n      background-attachment: fixed;\\r\\n      background-size: cover;width:100%;\\r\\n      height: 850px;bottom: 0%;\\\">\\r\\n      <div class=\\\"d-flex bg-primary text-white paddin \\\">\\r\\n        <h1 class=\\\"text-center container-fluid \\\">{{'Student List'|translate}}</h1>\\r\\n      </div>\\r\\n      <div class=\\\"text-center row\\\">\\r\\n        <div class=\\\"col-2\\\"></div>\\r\\n        <form class=\\\"form-inline pt-3  \\\">\\r\\n          <div class=\\\"form-group  pr-3\\\">\\r\\n            <label for=\\\"fName\\\" class=\\\"form-check-label pr-3 \\\">{{'First Name'|translate}} : </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter First Name'|translate}}\\\" name=\\\"firstName\\\"\\r\\n              [(ngModel)]=\\\"form.searchParams.firstName\\\" id=\\\"fName\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group  pr-3\\\">\\r\\n            <label for=\\\"email\\\" class=\\\"form-check-label pr-3 \\\">{{'Email Id'|translate}} : </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter Email ID'|translate}}\\\" name=\\\"email\\\"\\r\\n              [(ngModel)]=\\\"form.searchParams.email\\\" id=\\\"email\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group pr-3\\\">\\r\\n            <label for=\\\"collegeId\\\" class=\\\"form-check-label pr-3\\\">{{'College'|translate}} :</label>&nbsp;\\r\\n            <select class=\\\"form-control\\\" name=\\\"collegeId\\\" [(ngModel)]=\\\"form.searchParams.collegeId\\\" id=\\\"role\\\">\\r\\n              <option [value]=0 [disabled]=\\\"true\\\" selected disabled>{{'Select College'|translate}}</option>\\r\\n              <option *ngFor=\\\"let opt of form.preload.collegeList\\\" [value]=\\\"opt.id\\\">{{opt.name}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          \\r\\n          <button class=\\\"btn-primary btn\\\" (click)=\\\"submit()\\\">{{'Search'|translate}}</button>&nbsp;&nbsp;\\r\\n          <button class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\">{{'Reset'|translate}}</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"col-6  \\\" *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger\\\"> {{form.message}}</div>\\r\\n      <div class=\\\"col-6 \\\" *ngIf=\\\"!form.error && (form.message != null)\\\" class=\\\"alert alert-success\\\">\\r\\n        {{form.message}}</div>\\r\\n  \\r\\n      <br>\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th>{{'S.No'|translate}}</th>\\r\\n                <th>{{'First Name'|translate}}</th>\\r\\n                <th>{{'Last Name'|translate}}</th>\\r\\n                <th>{{'Email'|translate}}</th>\\r\\n                <th>{{'College'|translate}}</th>\\r\\n                <th>{{'Phone'|translate}}</th>\\r\\n                <th>{{'DOB'|translate}}</th>\\r\\n                <th>{{'Edit'|translate}} / {{'Delete'|translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n  \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let student of form.list; let i = index\\\">\\r\\n                <td> {{((form.pageNo-1)*10)+i+1}} </td>\\r\\n                <td> {{ student.firstName }} </td>\\r\\n                <td> {{ student.lastName }} </td>\\r\\n                <td> {{ student.email }} </td>\\r\\n                <td> {{ student.collegeName }} </td>\\r\\n                <td> {{ student.mobileNo }} </td>\\r\\n                <td> {{ student.dob | date : 'dd-MM-yyyy'}} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/student/' +  student.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit\\\" style=\\\"font-size:20px;color:blue\\\"></i>\\r\\n                  </a> / <a (click)=\\\"delete(student.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash-o\\\" style=\\\"font-size:20px;color:red\\\"></i>\\r\\n                  </a>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <div class=\\\" col-12 form-inline mb-0  \\\">\\r\\n            <div class=\\\"col-4 text-left \\\">\\r\\n              <div *ngIf=\\\"form.pageNo>1; then sus else fail\\\"></div>\\r\\n              <ng-template #sus>\\r\\n                <button (click)=\\\"previous()\\\" class=\\\"btn btn-success\\\">{{'previous'|translate}}</button>\\r\\n              </ng-template>\\r\\n              <ng-template #fail>\\r\\n                <button (click)=\\\"previous()\\\" disabled class=\\\"btn btn-light \\\">{{'previous'|translate}}</button>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n            <div class=\\\"col-4 text-center \\\">\\r\\n              <button class=\\\"btn-primary btn \\\" (click)=\\\"forward('/student/')\\\">{{'Add'|translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-4 text-right \\\">\\r\\n              <div *ngIf=\\\"form.count>(form.pageSize*form.pageNo);then susN else failN\\\"></div>\\r\\n              <ng-template #susN>\\r\\n                <button (click)=\\\"next()\\\" class=\\\"btn btn-success\\\">{{'next'|translate}}</button>\\r\\n              </ng-template>\\r\\n              <ng-template #failN>\\r\\n                <button (click)=\\\"next()\\\" disabled class=\\\"btn btn-light\\\">{{'next'|translate}}</button>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n  \\r\\n      <br><br>\\r\\n    </div>\\r\\n  </body>\"","export default \"<body class=\\\" container-fluid row\\\">\\n    <div class=\\\" row ml-3\\\" style=\\\"padding-top: 0%; background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;background-size: cover;width:100%;height: 750px;bottom: 0%;\\\">\\n        <div class=\\\"col-sm-4\\\"></div>\\n        <div class=\\\"col-sm-4 pt-5\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"text-center mb-4\\\">\\n                        <div *ngIf=\\\"form.data.id>0; then hUpdate else hAdd\\\"></div>\\n                        <ng-template #hAdd>\\n                            <h1>{{'Add Student'|translate}}</h1>\\n                        </ng-template>\\n                        <ng-template #hUpdate>\\n                            <h1>{{'Update Student'|translate}}</h1>\\n                        </ng-template>\\n                    </div>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <form>\\n                        <div class=\\\"form-group row \\\">\\n                            <label for=\\\"collegeId\\\" class=\\\"form-check-label \\\">{{'College'|translate}} :<span\\n                                    class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-university grey-text\\\"></i> </div>\\n                                </div>\\n                                <select class=\\\"form-control\\\" name=\\\"collegeId\\\"\\n                                    [(ngModel)]=\\\"form.data.collegeId\\\" id=\\\"collegeId\\\">\\n                                    <option [value]=default [disabled]=\\\"true\\\" selected disabled>{{'Select College'|translate}}\\n                                    </option>\\n                                    \\n                                    <option *ngFor=\\\"let opt of form.preload.collegeList\\\" [value]=\\\"opt.id\\\">{{opt.name}}\\n                                    </option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\" id=\\\"role\\\"> {{form.inputerror.collegeId}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"fName\\\" class=\\\"form-check-label\\\">{{'First Name'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span></label>\\n\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.firstName\\\" name=\\\"firstName\\\"\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter First Name'|translate}}\\\" id=\\\"fName\\\">\\n                            </div>\\n                            <span class=\\\"text-danger mr-auto mb-auto  \\\"> {{form.inputerror.firstName}}\\n                            </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"lName\\\" class=\\\"form-check-label\\\">{{'Last Name'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-o grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.lastName\\\" name=\\\"lastName\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter Last Name'|translate}}\\\" id=\\\"lName\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.lastName}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"mNo\\\" class=\\\"form-check-label\\\">{{'Mobile No'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.mobileNo\\\" name=\\\"mobileNo\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter Mobile Number'|translate}}\\\" id=\\\"mNo\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.mobileNo}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                                <label for=\\\"email\\\" class=\\\"form-check-label\\\">{{'Email'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                                </div>\\n                                <div *ngIf=\\\"form.data.id>0; then lUpdate else lAdd\\\"></div>\\n\\n                                <ng-template #lUpdate>\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.email\\\" name=\\\"email\\\" class=\\\"form-control\\\"\\n                                        placeholder=\\\"Enter Email\\\" id=\\\"login\\\" disabled>\\n                                </ng-template>\\n                                <ng-template #lAdd><input type=\\\"text\\\" [(ngModel)]=\\\"form.data.email\\\" name=\\\"email\\\"\\n                                        class=\\\"form-control\\\" placeholder=\\\"{{'Enter Email'|translate}}\\\" id=\\\"email\\\">\\n                                </ng-template>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.email}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row \\\">\\n                            <label for=\\\"datepicker\\\" class=\\\"form-check-label\\\">{{'Date of birth'|translate}}:<span\\n                                    class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"date\\\" id=\\\"datepicker\\\" name=\\\"dob\\\" [(ngModel)]=\\\"form.data.dob\\\"\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Date of Birth'|translate}}\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\">{{form.inputerror.dob}}</span>\\n                        </div>\\n\\n                        <div class=\\\"form-inline\\\">\\n                            <div class=\\\"col-4\\\"></div>\\n                            <div class=\\\"text-center\\\">\\n                                <div *ngIf=\\\"form.data.id>0; then update else add\\\"></div>\\n                                <ng-template #add>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success\\\">{{'Save'|translate}}</button>&nbsp;\\n                                        <button (click)=\\\"reset()\\\"\\n                                        class=\\\"btn btn-secondary\\\">{{'Reset'|translate}}</button>&nbsp;\\n                                </ng-template>\\n                                <ng-template #update>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success \\\">{{'Update'|translate}}</button>&nbsp;\\n                                    <button (click)=\\\"cancel()\\\" class=\\\"btn btn-secondary\\\">{{'Cancel'|translate}}</button>\\n                                </ng-template>\\n                            </div>\\n                        </div>\\n\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm-4\\\"></div>\\n    </div>\\n</body>\"","export default \"<body class=\\\"container-fluid text-center\\\">\\r\\n    <div class=\\\"content-wrapper\\\" style=\\\"padding-top: 0%; background-image: url(./assets/list.jpg); background-repeat: no-repeat;\\r\\n      background-attachment: fixed;\\r\\n      background-size: cover;width:100%;\\r\\n      height: 850px;bottom: 0%;\\\">\\r\\n      <div class=\\\"d-flex bg-primary text-white paddin \\\">\\r\\n        <h1 class=\\\"text-center container-fluid \\\">{{'Subject List'|translate}}</h1>\\r\\n      </div>\\r\\n      <div class=\\\"text-center row\\\">\\r\\n        <div class=\\\"col-2\\\"></div>\\r\\n        <form class=\\\"form-inline pt-3  \\\">\\r\\n          <div class=\\\"form-group  pr-3\\\">\\r\\n            <label for=\\\"subjectName\\\" class=\\\"form-check-label pr-3 \\\">{{'Subject Name'|translate}} : </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter Subject Name'|translate}}\\\" name=\\\"subjectName\\\"\\r\\n              [(ngModel)]=\\\"form.searchParams.subjectName\\\" id=\\\"fName\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group pr-3\\\">\\r\\n            <label for=\\\"courseId\\\" class=\\\"form-check-label pr-3\\\">{{'Course'|translate}} :</label>&nbsp;\\r\\n            <select class=\\\"form-control\\\" name=\\\"courseId\\\" [(ngModel)]=\\\"form.searchParams.courseId\\\" id=\\\"lname\\\">\\r\\n              <option [value]=0 [disabled]=\\\"true\\\" selected disabled>{{'Select Course Name'|translate}}</option>\\r\\n              <option *ngFor=\\\"let opt of form.preload.courseList\\\" [value]=\\\"opt.id\\\">{{opt.courseName}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <button class=\\\"btn-primary btn\\\" (click)=\\\"submit()\\\">{{'Search'|translate}}</button>&nbsp;&nbsp;\\r\\n          <button class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\">{{'Reset'|translate}}</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"col-6  \\\" *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger\\\"> {{form.message}}</div>\\r\\n      <div class=\\\"col-6 \\\" *ngIf=\\\"!form.error && (form.message != null)\\\" class=\\\"alert alert-success\\\">\\r\\n        {{form.message}}</div>\\r\\n  \\r\\n      <br>\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th>{{'S.No'|translate}}</th>\\r\\n                <th>{{'Name'|translate}}</th>\\r\\n                <th>{{'Description'|translate}}</th>\\r\\n                <th>{{'Course Name'|translate}}</th>\\r\\n                <th>{{'Edit'|translate}} / {{'Delete'|translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n  \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let subject of form.list; let i = index\\\">\\r\\n                <td> {{((form.pageNo-1)*10)+i+1}} </td>\\r\\n                <td> {{ subject.subjectName }} </td>\\r\\n                <td> {{ subject.subjectDescription }} </td>\\r\\n                <td> {{ subject.courseName }} </td>\\r\\n                <td>\\r\\n                  <a (click)=\\\"forward( '/subject/' +  subject.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-edit\\\" style=\\\"font-size:20px;color:blue\\\"></i>\\r\\n                  </a> / <a (click)=\\\"delete(subject.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                    <i class=\\\"fa fa-trash-o\\\" style=\\\"font-size:20px;color:red\\\"></i>\\r\\n                  </a>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <div class=\\\" col-12 form-inline mb-0  \\\">\\r\\n            <div class=\\\"col-4 text-left \\\">\\r\\n              <div *ngIf=\\\"form.pageNo>1; then sus else fail\\\"></div>\\r\\n              <ng-template #sus>\\r\\n                <button (click)=\\\"previous()\\\" class=\\\"btn btn-success\\\">{{'previous'|translate}}</button>\\r\\n              </ng-template>\\r\\n              <ng-template #fail>\\r\\n                <button (click)=\\\"previous()\\\" disabled class=\\\"btn btn-light \\\">{{'previous'|translate}}</button>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n            <div class=\\\"col-4 text-center \\\">\\r\\n              <button class=\\\"btn-primary btn \\\" (click)=\\\"forward('/subject/')\\\">{{'Add'|translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-4 text-right \\\">\\r\\n              <div *ngIf=\\\"form.count>(form.pageSize*form.pageNo);then susN else failN\\\"></div>\\r\\n              <ng-template #susN>\\r\\n                <button (click)=\\\"next()\\\" class=\\\"btn btn-success\\\">{{'next'|translate}}</button>\\r\\n              </ng-template>\\r\\n              <ng-template #failN>\\r\\n                <button (click)=\\\"next()\\\" disabled class=\\\"btn btn-light\\\">{{'next'|translate}}</button>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      \\r\\n    <br><br>\\r\\n    </div>\\r\\n  </body>\"","export default \"<body class=\\\" container-fluid row \\\">\\n    <div class=\\\"row ml-3\\\" style=\\\"padding-top: 0%; background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;background-size: cover;width:100%;height: 700px;\\\">\\n        <div class=\\\"col-sm-4\\\"></div>\\n        <div class=\\\"col-sm-4 pt-5\\\">\\n            <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"text-center mb-4\\\">\\n                    <div *ngIf=\\\"form.data.id>0; then hUpdate else hAdd\\\"></div>\\n                    <ng-template #hAdd>\\n                        <h1>{{'Add Subject'|translate}}</h1>\\n                    </ng-template>\\n                    <ng-template #hUpdate>\\n                        <h1>{{'Update Subject'|translate}}</h1>\\n                    </ng-template>\\n                </div>\\n                <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\n                    {{form.message}}\\n                </div>\\n                <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\n                    {{form.message}}\\n                </div>\\n                    <form>\\n                        <div class=\\\"form-group row \\\">\\n                            <label for=\\\"courseId\\\" class=\\\"form-check-label \\\">{{'Course Name'|translate}} :<span\\n                                 class=\\\"text-danger\\\">*</span> </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-graduation-cap grey-text\\\"></i>.</div>\\n                                </div>\\n                                <select class=\\\"form-control\\\" name=\\\"courseId\\\"\\n                                    [(ngModel)]=\\\"form.data.courseId\\\" id=\\\"courseId\\\">\\n                                    <option [value]=default [disabled]=\\\"true\\\" selected disabled>{{'Select Course Name'|translate}}\\n                                    </option>\\n                                    <option *ngFor=\\\"let opt of form.preload.courseList\\\" [value]=\\\"opt.id\\\">{{opt.courseName}}</option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\" id=\\\"role\\\"> {{form.inputerror.courseId}}\\n                            </span>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"subjectName\\\" class=\\\"form-check-label\\\">{{'Subject Name'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-book grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.subjectName\\\" name=\\\"subjectName\\\"\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Subject Name'|translate}}\\\" id=\\\"lName\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.subjectName}} </span>\\n                        </div>\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"subjectDescription\\\" class=\\\"form-check-label\\\">{{'Description'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-bars grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.subjectDescription\\\" name=\\\"subjectDescription\\\"\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Subject Description'|translate}}\\\"\\n                                    id=\\\"subjectDescription\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.subjectDescription}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-inline\\\">\\n                            <div class=\\\"col-4\\\"></div>\\n                            <div class=\\\"text-center\\\">\\n                                <div *ngIf=\\\"form.data.id>0; then update else add\\\"></div>\\n                                <ng-template #add>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success\\\">{{'Save'|translate}}</button>&nbsp;\\n                                        <button (click)=\\\"reset()\\\"\\n                                        class=\\\"btn btn-secondary\\\">{{'Reset'|translate}}</button>&nbsp;\\n                                </ng-template>\\n                                <ng-template #update>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success \\\">{{'Update'|translate}}</button>&nbsp;\\n                                    <button (click)=\\\"cancel()\\\" class=\\\"btn btn-secondary\\\">{{'Cancel'|translate}}</button>\\n                                </ng-template>\\n                            </div>\\n                        </div>\\n\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm-3\\\"></div>\\n    </div>\\n    <br>\\n    <br>\\n</body>\"","export default \"<body class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"\\\" style=\\\"padding-top: 0%; background-image: url(./assets/list.jpg); background-repeat: no-repeat;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;width:100%;\\r\\n    height: 850px;bottom: 0%;\\\">\\r\\n        <div class=\\\"d-flex bg-primary text-white paddin \\\">\\r\\n            <h1 class=\\\"text-center container-fluid \\\">{{'TimeTable List'|translate}}</h1>\\r\\n        </div>\\r\\n        <div class=\\\"text-center row\\\">\\r\\n            <form class=\\\"form-inline pt-3 text-center pl-5\\\">\\r\\n                <div class=\\\"form-group  pr-3\\\">\\r\\n                    <label for=\\\"subjectName\\\" class=\\\"form-check-label pr-3 \\\">{{'Subject Name'|translate}} : </label>\\r\\n                    <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter Subject Name'|translate}}\\\" name=\\\"subjectName\\\"\\r\\n                        [(ngModel)]=\\\"form.searchParams.subjectName\\\" id=\\\"subjectName\\\">\\r\\n                </div>\\r\\n\\r\\n                <div class=\\\"form-group pr-3\\\">\\r\\n                    <label for=\\\"courseId\\\" class=\\\"form-check-label pr-3\\\">{{'Course Name'|translate}}:</label>&nbsp;\\r\\n                    <select class=\\\"form-control\\\" name=\\\"courseId\\\" [(ngModel)]=\\\"form.searchParams.courseId\\\" id=\\\"courseId\\\">\\r\\n                        <option [value]=0 [disabled]=\\\"true\\\" selected disabled>{{'Course Name'|translate}}</option>\\r\\n                  \\r\\n                        <option *ngFor=\\\"let opt of form.preload.courseList\\\" [value]=\\\"opt.id\\\">{{opt.courseName}}</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                \\r\\n                <div class=\\\"form-group pr-3\\\">\\r\\n                    <label for=\\\"semester\\\" class=\\\"form-check-label pr-3\\\">{{'Semester'|translate}}:\\r\\n                    </label>\\r\\n                    <select [(ngModel)]=\\\"form.data.semester\\\" name=\\\"semester\\\" class=\\\"form-control\\\" id=\\\"semester\\\">\\r\\n                        <option [value]=\\\"null\\\" [disabled]=\\\"true\\\" selected disabled>{{'Select Semester'|translate}}</option>\\r\\n                        <option [value]=\\\"I\\\">I</option>\\r\\n                        <option [value]=\\\"II\\\">II</option>\\r\\n                        <option [value]=\\\"III\\\">III</option>*\\r\\n                        <option [value]=\\\"IV\\\">IV</option>\\r\\n                        <option [value]=\\\"V\\\">V</option>\\r\\n                        <option [value]=\\\"VI\\\">VI</option>\\r\\n                        <option [value]=\\\"VII\\\">VII</option>\\r\\n                        <option [value]=\\\"VIII\\\">VIII</option>\\r\\n                    </select>\\r\\n                </div>\\r\\n                <div class=\\\"form-group pr-3\\\">\\r\\n                    <label for=\\\"datepicker\\\" class=\\\"form-check-label pr-3\\\">{{'Exam Date'|translate}}:\\r\\n                    </label>\\r\\n                    <input type=\\\"date\\\" id=\\\"datepicker\\\" name=\\\"examDate\\\" [(ngModel)]=\\\"form.data.examDate\\\"\\r\\n                        class=\\\"form-control\\\" placeholder=\\\"{{'Enter Date of Exam'|translate}}\\\">\\r\\n                </div>\\r\\n\\r\\n                <button class=\\\"btn-primary btn\\\" (click)=\\\"submit()\\\">{{'Search'|translate}}</button>&nbsp;&nbsp;\\r\\n                <button class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\">{{'Reset'|translate}}</button>\\r\\n            </form>\\r\\n        </div>\\r\\n        <br>\\r\\n        <div class=\\\"col-6  \\\" *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger\\\"> {{form.message}}</div>\\r\\n        <div class=\\\"col-6 \\\" *ngIf=\\\"!form.error && (form.message != null)\\\" class=\\\"alert alert-success\\\">\\r\\n            {{form.message}}</div>\\r\\n\\r\\n        <br>\\r\\n        <div class=\\\"p-1\\\">\\r\\n            <div class=\\\"table-responsive\\\">\\r\\n                <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n                    <thead class=\\\"thead-light text-uppercase\\\">\\r\\n                        <tr>\\r\\n                            <th>{{'S.No'|translate}}</th>\\r\\n                            <th>{{'Course'|translate}}</th>\\r\\n                            <th>{{'Subject'|translate}}</th>\\r\\n                            <th>{{'Semester'|translate}}</th>\\r\\n                            <th>{{'Date'|translate}}</th>\\r\\n                            <th>{{'Time'|translate}}</th>\\r\\n                            <th>{{'Edit'|translate}} / {{'Delete'|translate}}</th>\\r\\n                        </tr>\\r\\n                    </thead>\\r\\n\\r\\n                    <tbody>\\r\\n                        <tr *ngFor=\\\"let timetable of form.list; let i = index\\\">\\r\\n                            <td> {{((form.pageNo-1)*10)+i+1}} </td>\\r\\n                            <td> {{ timetable.courseName }} </td>\\r\\n                            <td> {{ timetable.subjectName }} </td>\\r\\n                            <td> {{ timetable.semester }} </td>\\r\\n                            <td> {{ timetable.examDate | date : 'dd-MM-yyyy'}} </td>\\r\\n                            <td> {{ timetable.examTime }} </td>\\r\\n                            <td><a (click)=\\\"forward( '/timetable/' +  timetable.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                    <i class=\\\"fa fa-edit\\\" style=\\\"font-size:20px;color:blue\\\"></i>\\r\\n                                </a> / <a (click)=\\\"delete(timetable.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                                    <i class=\\\"fa fa-trash-o\\\" style=\\\"font-size:20px;color:red\\\"></i>\\r\\n                                </a>\\r\\n                            </td>\\r\\n                        </tr>\\r\\n                    </tbody>\\r\\n                </table>\\r\\n                <div class=\\\" col-lg-12 form-inline mb-0  \\\">\\r\\n                    <div class=\\\"col-4 text-left \\\">\\r\\n                        <div *ngIf=\\\"form.pageNo>1; then sus else fail\\\"></div>\\r\\n                        <ng-template #sus>\\r\\n                            <button (click)=\\\"previous()\\\" class=\\\"btn btn-success\\\">{{'Previous'|translate}}</button>\\r\\n                        </ng-template>\\r\\n                        <ng-template #fail>\\r\\n                            <button (click)=\\\"previous()\\\" disabled\\r\\n                                class=\\\"btn btn-light \\\">{{'Previous'|translate}}</button>\\r\\n                        </ng-template>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4 text-center \\\">\\r\\n                        <button class=\\\"btn-primary btn \\\" (click)=\\\"forward('/timetable/')\\\">{{'Add'|translate}}</button>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4 text-right \\\">\\r\\n                        <div *ngIf=\\\"form.count>(form.pageSize*form.pageNo);then susN else failN\\\"></div>\\r\\n                        <ng-template #susN>\\r\\n                            <button (click)=\\\"next()\\\" class=\\\"btn btn-success\\\">{{'Next'|translate}}</button>\\r\\n                        </ng-template>\\r\\n                        <ng-template #failN>\\r\\n                            <button (click)=\\\"next()\\\" disabled class=\\\"btn btn-light\\\">{{'Next'|translate}}</button>\\r\\n                        </ng-template>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        \\r\\n    <br><br>\\r\\n    </div>\\r\\n</body>\"","export default \"<body class=\\\" container-fluid row\\\">\\n    <div class=\\\"row ml-3 \\\" style=\\\"padding-top: 0%; background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;background-size: cover;width:100%;height: 700px;\\\"> \\n        <div class=\\\"col-sm-4\\\"></div>\\n        <div class=\\\"col-sm-4 pt-5\\\">\\n            <div class=\\\"card\\\">\\n                <div class=\\\"card-body\\\">\\n                    <div class=\\\"text-center mb-4\\\">\\n                        <div *ngIf=\\\"form.data.id>0; then hUpdate else hAdd\\\"></div>\\n                        <ng-template #hAdd>\\n                            <h1>{{'Add TimeTable'|translate}}</h1>\\n                        </ng-template>\\n                        <ng-template #hUpdate>\\n                            <h1>{{'Update TimeTable'|translate}}</h1>\\n                        </ng-template>\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <div class=\\\"col-sm-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\n                        {{form.message}}\\n                    </div>\\n                    <form>\\n\\n                        <div class=\\\"form-group row \\\">\\n                            <label for=\\\"courseId\\\" class=\\\"form-check-label \\\">{{'Course Name'|translate}} :<span\\n                                    class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file grey-text\\\"></i> </div>\\n                                </div>\\n                                <select class=\\\"form-control\\\" *ngIf=\\\"form.preload.courseList!=null\\\" name=\\\"courseId\\\"\\n                                    [(ngModel)]=\\\"form.data.courseId\\\" id=\\\"courseId\\\">\\n                                    <option [value]=default [disabled]=\\\"true\\\" selected disabled>{{'Select Course Name'|translate}}\\n                                    </option>\\n                                    <option *ngFor=\\\"let opt of form.preload.courseList\\\" [value]=\\\"opt.id\\\">{{opt.courseName}}\\n                                    </option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\" id=\\\"courseId\\\"> {{form.inputerror.courseId}}\\n                            </span>\\n                        </div>\\n\\n\\n                        <div class=\\\"form-group row \\\">\\n                            <label for=\\\"subjectId\\\" class=\\\"form-check-label \\\">{{'Subject Name'|translate}} :<span\\n                                    class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-book grey-text\\\"></i> </div>\\n                                </div>\\n                                <select class=\\\"form-control\\\" *ngIf=\\\"form.preload.subjectList!=null\\\" name=\\\"subjectId\\\"\\n                                    [(ngModel)]=\\\"form.data.subjectId\\\" id=\\\"subjectId\\\">\\n                                    <option [value]=default [disabled]=\\\"true\\\" selected disabled>{{'Select Subject\\n                                        Name'|translate}}\\n                                    </option>\\n                                    <option *ngFor=\\\"let opt of form.preload.subjectList\\\" [value]=\\\"opt.id\\\">{{opt.subjectName}}\\n                                    </option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\" id=\\\"subjectId\\\"> {{form.inputerror.subjectId}}\\n                            </span>\\n                        </div>\\n\\n\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"semester\\\" class=\\\"form-check-label\\\">{{'Semester'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i> </div>\\n                                </div>\\n                                <select [(ngModel)]=\\\"form.data.semester\\\" name=\\\"semester\\\" class=\\\"form-control\\\"\\n                                    id=\\\"semester\\\">\\n                                    <option [value]=\\\"null\\\" [disabled]=\\\"true\\\" selected disabled>{{'Select Semester'|translate}}</option>\\n                                    <option [value]=\\\"I\\\">I</option>\\n                                    <option [value]=\\\"II\\\">II</option>\\n                                    <option [value]=\\\"III\\\">III</option>\\n                                    <option [value]=\\\"IV\\\">IV</option>\\n                                    <option [value]=\\\"V\\\">V</option>\\n                                    <option [value]=\\\"VI\\\">VI</option>\\n                                    <option [value]=\\\"VII\\\">VII</option>\\n                                    <option [value]=\\\"VIII\\\">VIII</option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.semester}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row \\\">\\n                            <label for=\\\"datepicker\\\" class=\\\"form-check-label\\\">{{'Exam Date'|translate}}:<span\\n                                    class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-list-ol grey-text\\\"></i> </div>\\n                                </div>\\n                                <input type=\\\"date\\\" id=\\\"datepicker\\\" name=\\\"examDate\\\" [(ngModel)]=\\\"form.data.examDate\\\"\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Date of Exam'|translate}}\\\">\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\">{{form.inputerror.examDate}}</span>\\n                        </div>\\n\\n                        <div class=\\\"form-group row\\\">\\n                            <label for=\\\"examTime\\\" class=\\\"form-check-label\\\">{{'Exam Time'|translate}}:\\n                                <span class=\\\"text-danger\\\">*</span>\\n                            </label>\\n                            <div class=\\\"input-group\\\">\\n                                <div class=\\\"input-group-prepend\\\">\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-clock-o grey-text\\\"></i> </div>\\n                                </div>\\n                                <select [(ngModel)]=\\\"form.data.examTime\\\" name=\\\"examTime\\\" class=\\\"form-control\\\"\\n                                    id=\\\"examTime\\\">\\n                                    <option [value]=\\\"null\\\" [disabled]=\\\"true\\\" selected disabled>{{'Select Exam Time'|translate}}</option>\\n                                    <option value=\\\"10:00 am to 01:00 pm\\\">10:00 am to 01:00 pm</option>\\n                                    <option value=\\\"01:00 pm to 04:00 pm\\\">01:00 pm to 04:00 pm</option>\\n                                    <option value=\\\"04:00 pm to 07:00 pm\\\">04:00 pm to 07:00 pm</option>\\n                                </select>\\n                            </div>\\n\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.examTime}} </span>\\n                        </div>\\n\\n                        <div class=\\\"form-inline\\\">\\n                            <div class=\\\"col-sm-4\\\"></div>\\n                            <div class=\\\"text-center\\\">\\n                                <div *ngIf=\\\"form.data.id>0; then update else add\\\"></div>\\n                                <ng-template #add>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success\\\">{{'Save'|translate}}</button>&nbsp;\\n                                        <button (click)=\\\"reset()\\\"\\n                                        class=\\\"btn btn-secondary\\\">{{'Reset'|translate}}</button>&nbsp;\\n                               \\n                                </ng-template>\\n                                <ng-template #update>\\n                                    <button (click)=\\\"submit()\\\"\\n                                        class=\\\"btn btn-success \\\">{{'Update'|translate}}</button>&nbsp;\\n                                    <button (click)=\\\"cancel()\\\" class=\\\"btn btn-secondary\\\">{{'Cancel'|translate}}</button>\\n                                </ng-template>\\n                            </div>\\n                        </div>\\n\\n                    </form>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-sm-4\\\"></div>\\n    </div>\\n</body>\"","export default \"<body class=\\\" container-fluid row\\\">\\r\\n    <div class=\\\"row ml-3\\\" style=\\\"padding-top: 0%; background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;width:100%;\\r\\n    height: 700px;\\\">\\r\\n        <div class=\\\"col-sm-4\\\"></div>\\r\\n        <div class=\\\"col-sm-4 pt-5\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"text-center mb-4\\\">\\r\\n                        <h1>{{'Change Password'|translate}}</h1>\\r\\n\\r\\n                        <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\r\\n                            {{form.message}}\\r\\n                        </div>\\r\\n                        <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\r\\n                            {{form.message}}\\r\\n                        </div>\\r\\n                        <form>\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"password\\\" class=\\\"form-check-label\\\">{{'Old Password'|translate}}:\\r\\n                                    <span class=\\\"text-danger\\\">*</span>\\r\\n                                </label>\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <div class=\\\"input-group-prepend\\\">\\r\\n                                        <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\r\\n                                    </div>\\r\\n                                    <input type=\\\"password\\\" [(ngModel)]=\\\"form.data.oldPassword\\\" name=\\\"oldPassword\\\"\\r\\n                                        class=\\\"form-control\\\" placeholder=\\\"{{'Enter Old Password'|translate}}\\\" id=\\\"oldPassword\\\">\\r\\n                                </div>\\r\\n\\r\\n                                <span class=\\\"text-danger mr-auto mb-auto \\\"> {{form.inputerror.oldPassword}} </span>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"password\\\" class=\\\"form-check-label\\\">{{'New Password'|translate}}:\\r\\n                                    <span class=\\\"text-danger\\\">*</span>\\r\\n                                </label>\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <div class=\\\"input-group-prepend\\\">\\r\\n                                        <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\r\\n                                    </div>\\r\\n                                    <input type=\\\"password\\\" [(ngModel)]=\\\"form.data.password\\\" name=\\\"password\\\"\\r\\n                                        class=\\\"form-control\\\" placeholder=\\\"{{'Enter New Password'|translate}}\\\" id=\\\"password\\\">\\r\\n                                </div>\\r\\n\\r\\n                                <span class=\\\"text-danger mr-auto mb-auto \\\"> {{form.inputerror.password}} </span>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-group row\\\">\\r\\n                                <label for=\\\"confirmPassword\\\" class=\\\"form-check-label\\\">{{'Confirm Password'|translate}}:\\r\\n                                    <span class=\\\"text-danger\\\">*</span>\\r\\n                                </label>\\r\\n                                <div class=\\\"input-group\\\">\\r\\n                                    <div class=\\\"input-group-prepend\\\">\\r\\n                                        <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\r\\n                                    </div>\\r\\n                                    <input type=\\\"password\\\" [(ngModel)]=\\\"form.data.confirmPassword\\\"\\r\\n                                        name=\\\"confirmPassword\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Confirm Password'|translate}}\\\"\\r\\n                                        id=\\\"confirmPassword\\\">\\r\\n                                </div>\\r\\n\\r\\n                                <span class=\\\"text-danger mr-auto mb-auto \\\"> {{form.inputerror.confirmPassword}} </span>\\r\\n                            </div>\\r\\n                            <div class=\\\"form-inline\\\">\\r\\n                                <div class=\\\"col-4\\\"></div>\\r\\n                                <div class=\\\"text-center\\\">\\r\\n                                    <button (click)=\\\"submit()\\\" class=\\\"btn btn-success \\\">{{'Save'|translate}}</button>&nbsp;\\r\\n                                    <button class=\\\"btn btn-primary  \\\" (click)=\\\"this.forward('myprofile')\\\">{{'My\\r\\n                                        Profile'|translate}}</button>\\r\\n                                </div>\\r\\n                            </div>\\r\\n\\r\\n                        </form>\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n\\r\\n    </div>\\r\\n</body>\"","export default \"<body class=\\\"container-fluid row\\\">\\r\\n    <div class=\\\"row ml-3\\\" style=\\\"padding-top: 0%; background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\r\\n    background-attachment: fixed;\\r\\n    background-size: cover;width:100%;\\r\\n    height: 900px;\\\">\\r\\n        <div class=\\\"col-sm-4\\\"></div>\\r\\n        <div class=\\\"col-sm-4\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <div class=\\\"card-body\\\">\\r\\n                    <div class=\\\"text-center mb-4\\\">\\r\\n                        <h1 class=\\\"text-dark\\\">{{'My Profile'|translate}}</h1>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\r\\n                        {{form.message}}\\r\\n                    </div>\\r\\n                    <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\r\\n                        {{form.message}}\\r\\n                    </div>\\r\\n                    <form>\\r\\n                        <div class=\\\"form-group row \\\">\\r\\n                            <div *ngIf=\\\"form.data.picName\\\">\\r\\n                                <img src=\\\"http://localhost:8080/User/getPic/{{form.data.id}}\\\" height=\\\"55px\\\"\\r\\n                                    width=\\\"80px\\\">\\r\\n                            </div>\\r\\n                            <div *ngIf=\\\"!form.data.picName\\\">\\r\\n                                <img src=\\\"../../assets/default.jpg\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\r\\n                            </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"picture\\\" class=\\\"form-check-label\\\">{{'Profile Picture'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"file\\\" (change)=\\\"onFileSelect($event.target.files)\\\" accept=\\\"image/*\\\"\\r\\n                                    name=\\\"pic\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Select Picture'|translate}}\\\" id=\\\"pic\\\">\\r\\n                            </div>\\r\\n                            \\r\\n                            <span class=\\\"text-danger mr-auto mb-auto  \\\"> {{form.inputerror.picture}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"fName\\\" class=\\\"form-check-label\\\">{{'First Name'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span></label>\\r\\n\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.firstName\\\" name=\\\"firstName\\\"\\r\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter First Name'|translate}}\\\" id=\\\"fName\\\"\\r\\n                                    [value]=\\\"form.data.firstName\\\">\\r\\n                            </div>\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto  \\\"> {{form.inputerror.firstName}}\\r\\n                            </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"lName\\\" class=\\\"form-check-label\\\">{{'Last Name'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-o grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.lastName\\\" name=\\\"lastName\\\" class=\\\"form-control\\\"\\r\\n                                    placeholder=\\\"{{'Enter Last Name'|translate}}\\\" id=\\\"lName\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.lastName}} </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"mNo\\\" class=\\\"form-check-label\\\">{{'Mobile No'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.mobileNo\\\" name=\\\"mobileNo\\\" class=\\\"form-control\\\"\\r\\n                                    placeholder=\\\"{{'Enter Mobile Number'|translate}}\\\" id=\\\"mNo\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.mobileNo}} </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"login\\\" class=\\\"form-check-label\\\">{{'Login ID'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.login\\\" name=\\\"login\\\" class=\\\"form-control\\\"\\r\\n                                    placeholder=\\\"{{'Enter Email'|translate}}\\\" id=\\\"login\\\" disabled>\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.login}} </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"password\\\" class=\\\"form-check-label\\\">{{'Password'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"password\\\" [(ngModel)]=\\\"form.data.password\\\" name=\\\"password\\\"\\r\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Password'|translate}}\\\" id=\\\"password\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\"> {{form.inputerror.password}} </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <label for=\\\"gender\\\" class=\\\"form-check-label\\\">{{'Gender'|translate}}:\\r\\n                                <span class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus-double grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <select [(ngModel)]=\\\"form.data.gender\\\" name=\\\"gender\\\" class=\\\"form-control\\\" id=\\\"gender\\\">\\r\\n                                    <option [value]=\\\"null\\\" [disabled]=\\\"true\\\" selected disabled>{{'Select Gender'|translate}}</option>\\r\\n                                    <option [value]=\\\"Male\\\">Male</option>\\r\\n                                    <option [value]=\\\"Female\\\">Female</option>\\r\\n                                </select>\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.gender}} </span>\\r\\n                        </div>\\r\\n\\r\\n                        <div class=\\\"form-group row \\\">\\r\\n                            <label for=\\\"datepicker\\\" class=\\\"form-check-label\\\">{{'Date of birth'|translate}}:<span\\r\\n                                    class=\\\"text-danger\\\">*</span>\\r\\n                            </label>\\r\\n                            <div class=\\\"input-group\\\">\\r\\n                                <div class=\\\"input-group-prepend\\\">\\r\\n                                    <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i> </div>\\r\\n                                </div>\\r\\n                                <input type=\\\"date\\\" id=\\\"datepicker\\\" name=\\\"dob\\\" [(ngModel)]=\\\"form.data.dob\\\"\\r\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Date of Birth'|translate}}\\\">\\r\\n                            </div>\\r\\n\\r\\n                            <span class=\\\"text-danger mr-auto mb-auto \\\">{{form.inputerror.dob}}</span>\\r\\n                        </div>\\r\\n\\r\\n\\r\\n\\r\\n                        <div class=\\\"form-inline\\\">\\r\\n                            <div class=\\\"col-3\\\"></div>\\r\\n                            <div class=\\\"text-center\\\">\\r\\n                                <button (click)=\\\"submit()\\\"\\r\\n                                    class=\\\"btn btn-success \\\">{{'Update'|translate}}</button>&nbsp;\\r\\n                                <button (click)=\\\"this.forward('changepassword')\\\" class=\\\"btn btn-secondary\\\">{{'Change\\r\\n                                    Password'|translate}}</button>\\r\\n                            </div>\\r\\n                        </div>\\r\\n                    </form>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n        <div class=\\\"col-sm-4\\\"></div>\\r\\n    </div>\\r\\n</body>\"","export default \"<body class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"\\\" style=\\\"padding-top: 0%; background-image: url(./assets/list.jpg); background-repeat: no-repeat;\\r\\n      background-attachment: fixed;\\r\\n      background-size: cover;width:100%;\\r\\n      height: 900px;bottom: 0%;\\\">\\r\\n      <div class=\\\"d-flex bg-primary text-white paddin \\\">\\r\\n        <h1 class=\\\"text-center container-fluid \\\">{{'User List'|translate}}</h1>\\r\\n      </div>\\r\\n      <div class=\\\"text-center row\\\">\\r\\n        <div class=\\\"col-2\\\"></div>\\r\\n        <form class=\\\"form-inline pt-3 mr-3 \\\">\\r\\n          <div class=\\\"form-group  pr-3\\\">\\r\\n            <label for=\\\"fName\\\" class=\\\"form-check-label pr-3 \\\">{{'First Name'|translate}} : </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Enter First Name'|translate}}\\\" name=\\\"firstName\\\"\\r\\n              [(ngModel)]=\\\"form.searchParams.firstName\\\" id=\\\"fName\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group pr-3\\\">\\r\\n            <label for=\\\"lName\\\" class=\\\"form-check-label pr-3 \\\">{{'Login Id'|translate}} : </label>\\r\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" name=\\\"login\\\" id=\\\"lName\\\" placeholder=\\\"{{'Enter Login Id'|translate}}\\\"\\r\\n              [(ngModel)]=\\\"form.searchParams.login\\\">\\r\\n          </div>\\r\\n          <div class=\\\"form-group pr-3\\\">\\r\\n            <label for=\\\"role\\\" class=\\\"form-check-label pr-3\\\">{{'Role'|translate}} :</label>&nbsp;\\r\\n            <select class=\\\"form-control\\\" name=\\\"roleId\\\" [(ngModel)]=\\\"form.searchParams.roleId\\\" id=\\\"role\\\">\\r\\n              <option [value]=0 [disabled]=\\\"true\\\" selected disabled>{{'Select User Role'|translate}}</option>\\r\\n              <option *ngFor=\\\"let opt of form.preload.roleList\\\" [value]=\\\"opt.id\\\">{{opt.name}}</option>\\r\\n            </select>\\r\\n          </div>\\r\\n          <button class=\\\"btn-primary btn\\\" (click)=\\\"submit()\\\">{{'Search'|translate}}</button>&nbsp;&nbsp;\\r\\n          <button class=\\\"btn btn-secondary\\\" (click)=\\\"reset()\\\">{{'Reset'|translate}}</button>\\r\\n        </form>\\r\\n      </div>\\r\\n      <br>\\r\\n      <div class=\\\"col-6 \\\" *ngIf=\\\"form.error\\\" class=\\\"alert alert-danger\\\"> {{form.message}}</div>\\r\\n      <div class=\\\"col-6 \\\" *ngIf=\\\"!form.error && (form.message != null)\\\" class=\\\"alert alert-success\\\">\\r\\n        {{form.message}}</div>\\r\\n  \\r\\n      <br>\\r\\n      <div class=\\\"p-1\\\">\\r\\n        <div class=\\\"table-responsive\\\">\\r\\n          <table class=\\\"table table-bordered table-striped table-hover\\\">\\r\\n            <thead class=\\\"thead-light text-uppercase\\\">\\r\\n              <tr>\\r\\n                <th>{{'S.No'|translate }}</th>\\r\\n                <th>{{'Image'|translate}}</th>\\r\\n                <th>{{'First Name' |translate}}</th>\\r\\n                <th>{{'Last Name' |translate }}</th>\\r\\n                <th>{{'Login ID' | translate  }}</th>\\r\\n                <th>{{'Gender'| translate}}</th>\\r\\n                <th>{{'Role'|translate}}</th>\\r\\n                <th>{{'Phone'|translate}}</th>\\r\\n                <th>{{'DOB'|translate}}</th>\\r\\n                <th>{{'Edit'|translate}} /{{'Delete'|translate}}</th>\\r\\n              </tr>\\r\\n            </thead>\\r\\n  \\r\\n            <tbody>\\r\\n              <tr *ngFor=\\\"let user of form.list; let i = index\\\">\\r\\n                <td> {{((form.pageNo-1)*10)+i+1}} </td>\\r\\n                <td>\\r\\n                  <div *ngIf=\\\"user.picName\\\" >\\r\\n                  <img src=\\\"http://localhost:8080/User/getPic/{{user.id}}\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\r\\n                </div>\\r\\n                <div *ngIf=\\\"!user.picName\\\" >\\r\\n                  <img src=\\\"./assets/default.jpg\\\" height=\\\"55px\\\" width=\\\"80px\\\">\\r\\n                </div> \\r\\n                </td>\\r\\n                <td> {{ user.firstName}} </td>\\r\\n                <td> {{ user.lastName }} </td>\\r\\n                <td> {{ user.login }} </td>\\r\\n                <td> {{ user.gender }} </td>\\r\\n                <td> {{ user.roleName }} </td>\\r\\n                <td> {{ user.mobileNo }} </td>\\r\\n                <td> {{ user.dob | date : 'dd-MM-yyyy'}} </td>\\r\\n                <td>\\r\\n                  <div *ngIf=\\\"user.roleId==1;then read else write\\\"></div>\\r\\n                  <ng-template #read><i class=\\\"fa fa-edit\\\" style=\\\"font-size:20px;color:grey\\\"></i> / <i\\r\\n                      class=\\\"fa fa-trash-o\\\" style=\\\"font-size:20px;color:grey\\\"></i></ng-template>\\r\\n                  <ng-template #write><a (click)=\\\"forward( '/user/' +  user.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                      <i class=\\\"fa fa-edit\\\" style=\\\"font-size:20px;color:blue\\\"></i>\\r\\n                    </a> / <a (click)=\\\"delete(user.id)\\\" style=\\\"cursor: pointer;\\\">\\r\\n                      <i class=\\\"fa fa-trash-o\\\" style=\\\"font-size:20px;color:red\\\"></i>\\r\\n                    </a></ng-template>\\r\\n                </td>\\r\\n              </tr>\\r\\n            </tbody>\\r\\n          </table>\\r\\n          <div class=\\\"form-inline \\\">\\r\\n            <div class=\\\"col-4 text-left \\\">\\r\\n              <div *ngIf=\\\"form.pageNo>1; then sus else fail\\\"></div>\\r\\n              <ng-template #sus>\\r\\n                <button (click)=\\\"previous()\\\" class=\\\"btn btn-success\\\">{{'previous'|translate}}</button>\\r\\n              </ng-template>\\r\\n              <ng-template #fail>\\r\\n                <button (click)=\\\"previous()\\\" disabled class=\\\"btn btn-light \\\">{{'previous'|translate}}</button>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n            <div class=\\\"col-4 text-center \\\">\\r\\n              <button class=\\\"btn-primary btn \\\" (click)=\\\"forward('/user/')\\\">{{'Add'|translate}}</button>\\r\\n            </div>\\r\\n            <div class=\\\"col-4 text-right \\\">\\r\\n              <div *ngIf=\\\"form.count>(form.pageSize*form.pageNo);then susN else failN\\\"></div>\\r\\n              <ng-template #susN>\\r\\n                <button (click)=\\\"next()\\\" class=\\\"btn btn-success\\\">{{'next'|translate}}</button>\\r\\n              </ng-template>\\r\\n              <ng-template #failN>\\r\\n                <button (click)=\\\"next()\\\" disabled class=\\\"btn btn-light\\\">{{'next'|translate}}</button>\\r\\n              </ng-template>\\r\\n            </div>\\r\\n          </div>\\r\\n        </div>\\r\\n      </div>\\r\\n      <br><br>\\r\\n    </div>\\r\\n  </body>\"","export default \"<div class=\\\"container-fluid row \\\" >\\n    <div class=\\\"row ml-3\\\" style=\\\"padding-top: 0%; background-image: url(./assets/form.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;background-size: cover;width:100%;height: 950px;bottom: 0%;\\\">\\n\\n    <div class=\\\"col-sm-4\\\"></div>\\n    <div class=\\\"col-sm-4 pt-5 \\\">\\n        <div class=\\\"card\\\">\\n            <div class=\\\"card-body\\\">\\n                <div class=\\\"text-center mb-4\\\">\\n                    <div *ngIf=\\\"form.data.id>0; then hUpdate else hAdd\\\"></div>\\n                    <ng-template #hAdd>\\n                        <h1 class=\\\"text-dark\\\">{{'Add User'|translate}}</h1>\\n                    </ng-template>\\n                    <ng-template #hUpdate>\\n                        <h1 class=\\\"text-dark\\\">{{'Update User'|translate}}</h1>\\n                    </ng-template>\\n                </div>\\n                <div class=\\\"col-4\\\" *ngIf=\\\"form.error && form.message!=null\\\" class=\\\"alert alert-danger\\\">\\n                    {{form.message}}\\n                </div>\\n                <div class=\\\"col-4\\\" *ngIf=\\\"!form.error && form.message!=null\\\" class=\\\" alert alert-success\\\">\\n                    {{form.message}}\\n                </div>\\n                <form>\\n                    <div class=\\\"form-group row \\\">\\n                        <label for=\\\"role\\\" class=\\\"form-check-label \\\">{{'Role'|translate}} :<span\\n                                class=\\\"text-danger\\\">*</span>\\n                        </label>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-circle grey-text\\\"></i> </div>\\n                            </div>\\n                            <select class=\\\"form-control\\\" *ngIf=\\\"form.preload.roleList!=null\\\" name=\\\"roleId\\\"\\n                                [(ngModel)]=\\\"form.data.roleId\\\" id=\\\"role\\\">\\n                                <option [value]=default [disabled]=\\\"true\\\" selected disabled>{{'Select User Role'|translate}}\\n                                </option>\\n                                <option *ngFor=\\\"let opt of form.preload.roleList\\\" [value]=\\\"opt.id\\\">{{opt.name}}\\n                                </option>\\n                            </select>\\n                        </div>\\n\\n                        <span class=\\\"text-danger mr-auto mb-auto \\\" id=\\\"role\\\"> {{form.inputerror.roleId}} </span>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"fName\\\" class=\\\"form-check-label\\\">{{'First Name'|translate}}:\\n                            <span class=\\\"text-danger\\\">*</span></label>\\n\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user grey-text\\\"></i> </div>\\n                            </div>\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.firstName\\\" name=\\\"firstName\\\"\\n                                class=\\\"form-control\\\" placeholder=\\\"{{'Enter First Name'|translate}}\\\" id=\\\"fName\\\"\\n                                [value]=\\\"form.data.firstName\\\">\\n                        </div>\\n                        <span class=\\\"text-danger mr-auto mb-auto  \\\"> {{form.inputerror.firstName}}\\n                        </span>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"lName\\\" class=\\\"form-check-label\\\">{{'Last Name'|translate}}:\\n                            <span class=\\\"text-danger\\\">*</span>\\n                        </label>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-user-o grey-text\\\"></i> </div>\\n                            </div>\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.lastName\\\" name=\\\"lastName\\\" class=\\\"form-control\\\"\\n                                placeholder=\\\"{{'Enter Last Name'|translate}}\\\" id=\\\"lName\\\">\\n                        </div>\\n\\n                        <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.lastName}} </span>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"mNo\\\" class=\\\"form-check-label\\\">{{'Mobile No'|translate}}:\\n                            <span class=\\\"text-danger\\\">*</span>\\n                        </label>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-phone grey-text\\\"></i> </div>\\n                            </div>\\n                            <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.mobileNo\\\" name=\\\"mobileNo\\\" class=\\\"form-control\\\"\\n                                placeholder=\\\"{{'Enter Mobile Number'|translate}}\\\" id=\\\"mNo\\\">\\n                        </div>\\n\\n                        <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.mobileNo}} </span>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"login\\\" class=\\\"form-check-label\\\">{{'Login ID'|translate}}:\\n                            <span class=\\\"text-danger\\\">*</span>\\n                        </label>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-envelope grey-text\\\"></i> </div>\\n                            </div>\\n                            <div *ngIf=\\\"form.data.id>0; then lUpdate else lAdd\\\"></div>\\n                            <ng-template #lUpdate>\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"form.data.login\\\" name=\\\"login\\\" class=\\\"form-control\\\"\\n                                    placeholder=\\\"{{'Enter Email'|translate}}\\\" id=\\\"log\\\">\\n                            </ng-template>\\n                            <ng-template #lAdd><input type=\\\"text\\\" [(ngModel)]=\\\"form.data.login\\\" name=\\\"login\\\"\\n                                    class=\\\"form-control\\\" placeholder=\\\"{{'Enter Email'|translate}}\\\" id=\\\"login\\\">\\n                            </ng-template>\\n                        </div>\\n\\n                        <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.login}} </span>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"password\\\" class=\\\"form-check-label\\\">{{'Password'|translate}}:\\n                            <span class=\\\"text-danger\\\">*</span>\\n                        </label>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-key grey-text\\\"></i> </div>\\n                            </div>\\n                            <input type=\\\"password\\\" [(ngModel)]=\\\"form.data.password\\\" name=\\\"password\\\"\\n                                class=\\\"form-control\\\" placeholder=\\\"{{'Enter Password'|translate}}\\\" id=\\\"password\\\">\\n                        </div>\\n\\n                        <span class=\\\"text-danger mr-auto mb-auto \\\"> {{form.inputerror.password}} </span>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"gender\\\" class=\\\"form-check-label\\\">{{'Gender'|translate}}:\\n                            <span class=\\\"text-danger\\\">*</span>\\n                        </label>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-venus-double grey-text\\\"></i> </div>\\n                            </div>\\n                            <select [(ngModel)]=\\\"form.data.gender\\\" name=\\\"gender\\\" class=\\\"form-control\\\" id=\\\"gender\\\">\\n                                <option [value]=\\\"null\\\" [disabled]=\\\"true\\\" selected disabled>{{'Select Gender'|translate}}</option>\\n                                <option [value]=\\\"Male\\\">Male</option>\\n                                <option [value]=\\\"Female\\\">Female</option>\\n                            </select>\\n                        </div>\\n\\n                        <span class=\\\"text-danger mr-auto mb-auto\\\"> {{form.inputerror.gender}} </span>\\n                    </div>\\n\\n                    <div class=\\\"form-group row \\\">\\n                        <label for=\\\"datepicker\\\" class=\\\"form-check-label\\\">{{'Date of birth'|translate}}:<span\\n                                class=\\\"text-danger\\\">*</span>\\n                        </label>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-calendar grey-text\\\"></i> </div>\\n                            </div>\\n                            <input type=\\\"date\\\" id=\\\"datepicker\\\" name=\\\"dob\\\" [(ngModel)]=\\\"form.data.dob\\\"\\n                                class=\\\"form-control\\\" placeholder=\\\"{{'Enter Date of Birth'|translate}}\\\">\\n                        </div>\\n\\n                        <span class=\\\"text-danger mr-auto mb-auto \\\">{{form.inputerror.dob}}</span>\\n                    </div>\\n\\n                    <div class=\\\"form-group row\\\">\\n                        <label for=\\\"picture\\\" class=\\\"form-check-label\\\">{{'Upload Image'|translate}}:\\n                        </label>\\n                        <div class=\\\"input-group\\\">\\n                            <div class=\\\"input-group-prepend\\\">\\n                                <div class=\\\"input-group-text\\\"><i class=\\\"fa fa-file-picture-o grey-text\\\"></i> </div>\\n                            </div>\\n                            <input type=\\\"file\\\" (change)=\\\"onFileSelect($event.target.files)\\\" accept=\\\"image/*\\\"\\n                                name=\\\"pic\\\" class=\\\"form-control\\\" placeholder=\\\"{{'Upload Image'|translate}}\\\" id=\\\"pic\\\">\\n                        </div>\\n                    </div>\\n\\n                    <div class=\\\"form-inline\\\">\\n                        <div class=\\\"col-4\\\"></div>\\n                        <div class=\\\"text-center\\\">\\n                            <div *ngIf=\\\"form.data.id>0; then update else add\\\"></div>\\n                            <ng-template #add>\\n                                <button (click)=\\\"submit()\\\"\\n                                    class=\\\"btn btn-success\\\">{{'Save'|translate}}</button>&nbsp;\\n                                    <button (click)=\\\"reset()\\\"\\n                               class=\\\"btn btn-secondary\\\">{{'Reset'|translate}}</button>&nbsp;\\n                                    \\n                            </ng-template>\\n                            <ng-template #update>\\n                                <button (click)=\\\"submit()\\\"\\n                                    class=\\\"btn btn-success \\\">{{'Update'|translate}}</button>&nbsp;\\n                                <button (click)=\\\"cancel()\\\" class=\\\"btn btn-secondary\\\">{{'Cancel'|translate}}</button>\\n                            </ng-template>\\n                        </div>\\n                    </div>\\n\\n\\n\\n                </form>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"col-sm-4\\\"></div>\\n</div>\\n</div>\"","export default \"<body class=\\\"container-fluid row \\\">\\n    <div class=\\\"content-wrapper row ml-3\\\" style=\\\"padding-top: 0%; background-image: url(./assets/wel.jpg); background-repeat: no-repeat;\\n    background-attachment: fixed;background-size: cover;width:100%;height: 650px;bottom: 0%;\\\">\\n\\n        <div class=\\\"col-sm-12\\\">\\n            \\n            <h1 class=\\\"text-light text-center font-weight-bold \\\" style=\\\"margin-top: 17%;\\\">{{'Welcome To Online Result System'|translate}}</h1>\\n        </div>\\n\\n    </div>\\n</body>\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __createBinding(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (p !== \"default\" && !exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","import { Component, NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { CollegeListComponent } from './college/college-list.component';\nimport { CollegeComponent } from './college/college.component';\nimport { CourseListComponent } from './course/course-list.component';\nimport { CourseComponent } from './course/course.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { FacultyListComponent } from './faculty/faculty-list.component';\nimport { FacultyComponent } from './faculty/faculty.component';\nimport { LoginComponent } from './login/login.component';\nimport { UserRegistrationComponent } from './login/user-registration.component';\nimport { MarksheetComponent } from './marksheet/marksheet.component';\nimport { GetMarksheetComponent } from './marksheet/get-marksheet.component';\nimport { MarksheetListComponent } from './marksheet/marksheet-list.component';\nimport { MeritListComponent } from './marksheet/merit-list.component';\nimport { RoleListComponent } from './role/role-list.component';\nimport { RoleComponent } from './role/role.component';\nimport { StudentListComponent } from './student/student-list.component';\nimport { StudentComponent } from './student/student.component';\nimport { SubjectListComponent } from './subject/subject-list.component';\nimport { SubjectComponent } from './subject/subject.component';\nimport { TimetableListComponent } from './timetable/timetable-list.component';\nimport { TimetableComponent } from './timetable/timetable.component';\nimport { ChangePasswordComponent } from './user/change-password.component';\nimport { UserListComponent } from './user/user-list.component';\nimport { UserComponent } from './user/user.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { MyProfileComponent } from './user/my-profile.component';\nimport { ForgotPasswordComponent } from './login/forgot-password.component';\n\nconst routes: Routes = [\n  {\n    path: 'user',\n    component: UserComponent\n  },\n  {\n    path: 'user/:id',\n    component: UserComponent\n  },\n  {\n    path: 'userlist',\n    component: UserListComponent\n  },\n  {\n    path: 'role',\n    component: RoleComponent\n  },\n  {\n    path: 'role/:id',\n    component: RoleComponent\n  },\n  {\n    path: 'rolelist',\n    component: RoleListComponent\n  },\n  {\n    path: 'subject',\n    component: SubjectComponent\n  },\n  {\n    path: 'subject/:id',\n    component: SubjectComponent\n  },\n  {\n    path: 'subjectlist',\n    component: SubjectListComponent\n  },\n  {\n    path: 'student',\n    component: StudentComponent\n  },\n  {\n    path: 'student/:id',\n    component: StudentComponent\n  },\n  {\n    path: 'studentlist',\n    component: StudentListComponent\n  },\n  {\n    path: 'college',\n    component: CollegeComponent\n  },\n  {\n    path: 'college/:id',\n    component: CollegeComponent\n  },\n  {\n    path: 'collegelist',\n    component: CollegeListComponent\n  },\n  {\n    path: 'course',\n    component: CourseComponent\n  },\n  {\n    path: 'course/:id',\n    component: CourseComponent\n  },\n  {\n    path: 'courselist',\n    component: CourseListComponent\n  },\n  {\n    path: 'timetable',\n    component: TimetableComponent\n\n  },\n  {\n    path: 'timetable/:id',\n    component: TimetableComponent\n  },\n  {\n    path: 'timetablelist',\n    component: TimetableListComponent\n  },\n    {\n      path: 'marksheet',\n      component: MarksheetComponent\n    },\n  \n  {\n    path: 'marksheetlist',\n    component: MarksheetListComponent\n  },\n  {\n    \n      path: 'marksheet/:id',\n      component: MarksheetComponent\n    },\n  \n  {\n    path:'getmarksheet',\n    component: GetMarksheetComponent\n  },\n  {\n    path: 'meritlist',\n    component: MeritListComponent\n  },\n  {\n    path: 'faculty',\n    component: FacultyComponent\n  },\n  {\n    path: 'facultylist',\n    component: FacultyListComponent\n  },\n  {\n    path: 'faculty/:id',\n    component: FacultyComponent\n  },\n  {\n    path: 'login',\n    component: LoginComponent\n  },\n  {\n    path: 'login/:in',\n    component: LoginComponent\n  },\n  {\n    path:'login/:id',\n    component:LoginComponent\n    },\n  {\n    path:'signup',\n    component:UserRegistrationComponent\n\n  },\n  {\n    path: 'changepassword',\n    component: ChangePasswordComponent\n\n  },\n  {\n    path: 'forgotpassword',\n    component: ForgotPasswordComponent\n  },\n  {\n    path: 'myprofile',\n    component: MyProfileComponent,\n  },\n  {\n    path: 'dashboard',\n    component: DashboardComponent\n  },\n  {\n    path: 'welcome',\n    component:WelcomeComponent\n  },\n  {\n    path: '',\n    component:WelcomeComponent\n  },\n  // {\n  //   path:'**',\n  //   component:PageNotFoundComponent\n  // },\n  \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'Project5_UI';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BaseCtl } from './base.component';\nimport { RoleComponent } from './role/role.component';\nimport { RoleListComponent } from \"./role/role-list.component\";\nimport { FormsModule } from '@angular/forms';\nimport { HttpServiceService } from './http-service.service';\nimport { HttpClient, HttpClientModule } from '@angular/common/http';\nimport { CourseComponent } from './course/course.component';\nimport { CourseListComponent } from './course/course-list.component';\nimport { CollegeComponent } from './college/college.component';\nimport { CollegeListComponent } from './college/college-list.component';\nimport { StudentComponent } from './student/student.component';\nimport { TranslateHttpLoader } from \"@ngx-translate/http-loader\";\nimport { TranslateLoader, TranslateModule } from \"@ngx-translate/core\";\nimport { NavComponent } from './nav/nav.component';\nimport { FootComponent } from './foot/foot.component'\nimport { StudentListComponent } from './student/student-list.component';\nimport { SubjectComponent } from './subject/subject.component';\nimport { SubjectListComponent } from './subject/subject-list.component';\nimport { MarksheetComponent } from './marksheet/marksheet.component';\nimport { UserComponent } from './user/user.component';\nimport { UserListComponent } from './user/user-list.component';\nimport { WelcomeComponent } from './welcome/welcome.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { MarksheetListComponent } from './marksheet/marksheet-list.component';\nimport { GetMarksheetComponent } from './marksheet/get-marksheet.component';\nimport { MeritListComponent } from './marksheet/merit-list.component';\nimport { TimetableComponent } from './timetable/timetable.component';\nimport { TimetableListComponent } from './timetable/timetable-list.component';\nimport { FacultyComponent } from './faculty/faculty.component';\nimport { FacultyListComponent } from './faculty/faculty-list.component';\nimport { LoginComponent } from './login/login.component';\nimport { UserRegistrationComponent } from './login/user-registration.component';\nimport { ChangePasswordComponent } from './user/change-password.component';\nimport { MyProfileComponent } from './user/my-profile.component';\nimport { ForgotPasswordComponent } from './login/forgot-password.component';\nimport { PageNotFoundComponent } from './page-not-found/page-not-found.component';\nimport { CookieService } from 'ngx-cookie-service';\nimport { HashLocationStrategy, LocationStrategy } from '@angular/common';\nexport function myHttpLoader(http: HttpClient) {\n  return new TranslateHttpLoader(http, \"./assets/i18n/\", \".json\");\n}\n@NgModule({\n  declarations: [\n    AppComponent,\n    RoleComponent,\n    RoleListComponent,\n    CourseComponent,\n    CourseListComponent,\n    CollegeComponent,\n    CollegeListComponent,\n    StudentComponent,\n    StudentListComponent,\n    NavComponent,\n    FootComponent,\n    SubjectComponent,\n    SubjectListComponent,\n    MarksheetComponent,\n    MarksheetListComponent,\n    GetMarksheetComponent,\n    MeritListComponent,\n    UserComponent,\n    UserListComponent,\n    WelcomeComponent,\n    DashboardComponent,\n    TimetableComponent,\n    TimetableListComponent,\n    FacultyComponent,\n    FacultyListComponent,\n    LoginComponent,\n    UserRegistrationComponent,\n    ChangePasswordComponent,\n    MyProfileComponent,\n    ForgotPasswordComponent,\n    PageNotFoundComponent\n\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n     TranslateModule.forRoot({\n       loader: {\n         provide: TranslateLoader,\n         useFactory: myHttpLoader,\n         deps: [HttpClient],\n       },\n     })\n\n  ],\n  \n  providers: [\n    HttpServiceService,\n    //DataValidator,\n    LoginComponent,\n    CookieService,\n    {provide: LocationStrategy,\n      useClass: HashLocationStrategy}\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { ActivatedRoute } from \"@angular/router\";\r\nimport { BaseCtl } from \"./base.component\";\r\nimport { ServiceLocatorService } from \"./service-locator.service\";\r\n\r\nexport class BaseListCtl extends BaseCtl {\r\n    //flag: boolean;\r\n    constructor(public endpoint, public locator: ServiceLocatorService, public route: ActivatedRoute) {\r\n        super(endpoint, locator, route);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.preload();\r\n        this.form.data.pageNo = 1;\r\n        this.form.data.pageSize = 10;\r\n        this.display();\r\n    }\r\n\r\n    display() {\r\n        \r\n        this.form.error=false;\r\n        this.form.message=null;\r\n        this.search();\r\n    }\r\n\r\n    submit() {\r\n        \r\n        this.form.error=false;\r\n        this.form.message=null;\r\n        this.form.data.pageNo = 1;\r\n        this.search();\r\n    }\r\n\r\n\r\n    delete(id) {\r\n        super.delete(id);\r\n\r\n\r\n    }\r\n\r\n    next() {\r\n        this.form.error=false;\r\n        this.form.message=null;\r\n        this.form.data.pageNo++;\r\n        console.log(this.form.data.pageNo + '----pageNo')\r\n        this.display();\r\n    }\r\n\r\n    previous() {\r\n        this.form.error=false;\r\n        this.form.message=null;\r\n        if (this.form.data.pageNo > 0) {\r\n            this.form.data.pageNo--;\r\n            this.display();\r\n        }\r\n    }\r\n    reset() {\r\n        //this.flag = false;\r\n        \r\n        this.form.searchParams = {};\r\n        this.form.error=false;\r\n        this.form.message=null;\r\n        this.submit()\r\n    }\r\n    deleteAll(ids) {\r\n        for (let i = 0; i < ids.length; i++) {\r\n            this.delete(ids[i]);\r\n        }\r\n    }\r\n    selectAll(){\r\n        \r\n    }\r\n}","import { OnInit } from '@angular/core';\r\nimport { ServiceLocatorService } from './service-locator.service';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { EndpointServiceService } from './endpoint-service.service';\r\n\r\n\r\nexport class BaseCtl implements OnInit {\r\n  sadaf: {};\r\n  new : number\r\n  reset() {\r\n    this.form.error= false,\r\n    this.form.message= null,\r\n    this.sadaf = {},\r\n     this.form.inputerror = {};\r\n     this.form.data = {id:null,pageNo:null,pageSize:null};\r\n     this.display();\r\n  }\r\n\r\n  public api = {\r\n    endpoint: null,\r\n    get: null,\r\n    save: null,\r\n    search: null,\r\n    delete: null,\r\n    preload: null,\r\n  }\r\n  \r\n\r\n  initApi(ep) {\r\n    this.api.endpoint = ep;\r\n    this.api.get = ep + \"/get\";\r\n    this.api.save = ep + \"/save\";\r\n    this.api.search = ep + \"/search\";\r\n    this.api.delete = ep + \"/delete\";\r\n    this.api.preload = ep + \"/preload\";\r\n    //console.log(\"API\", this.api);\r\n  }\r\n\r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    preload: null,\r\n    data: { id: null, pageNo: 0, pageSize: 10 },\r\n    inputerror: {},\r\n    searchParams: {},\r\n    searchMessage: null,\r\n    list: [],\r\n    pageNo: 0,\r\n    pageSize: 0,\r\n    count: 0,\r\n\r\n  };\r\n\r\n  constructor(public endpoint: EndpointServiceService, public serviceLocator: ServiceLocatorService, public route: ActivatedRoute) {\r\n    var _self = this;\r\n\r\n    _self.initApi(endpoint);\r\n    serviceLocator.getPathVariable(route, function (params) {\r\n      _self.form.data.id = params[\"id\"];\r\n      console.log('I GOT ID', _self.form.data.id);\r\n    })\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.preload();\r\n    if (this.form.data.id && this.form.data.id > 0) {\r\n      this.display();\r\n    }\r\n    console.log('run')\r\n  }\r\n\r\n  preload() {\r\n    var _self = this;\r\n    this.serviceLocator.httpService.get(_self.api.preload, function (res) {\r\n      if (res.success) {\r\n        _self.form.preload = res.result;\r\n      } else {\r\n        _self.form.error = false;\r\n        //_self.form.message = res.result.message;\r\n        //_self.form.message = \"An Error Occured please reload\";\r\n      }\r\n      //console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  display() {\r\n\r\n    var _self = this;\r\n    \r\n    this.serviceLocator.httpService.get(_self.api.get + \"/\" + _self.form.data.id, function (res) {\r\n\r\n      if (res.success) {\r\n        _self.populateForm(_self.form.data, res.result);\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      //console.log('FORM', _self.form);\r\n    });\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.id = data.id;\r\n  }\r\n\r\n  submit() {\r\n    var _self = this;\r\n\r\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\r\n      _self.form.message = null;\r\n      _self.form.inputerror = {};\r\n\r\n      if (res.success) {\r\n        _self.form.error = false;\r\n        \r\n        _self.form.message = \"Data is saved\";\r\n        \r\n        //_self.forward('/user/'+res.result)\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.inputerror = res.result.inputerror;\r\n        _self.form.message = res.result.message;\r\n      }\r\n      //console.log('FORM', _self.form);\r\n    });\r\n  }\r\n  \r\n  search() {\r\n    var _self = this;\r\n    //_self.populateForm(_self.form.data,_self.form.searchParams)\r\n    _self.form.searchParams[\"pageNo\"] = _self.form.data.pageNo;\r\n    _self.form.searchParams[\"pageSize\"] = _self.form.data.pageSize;\r\n    //console.log(\"Search Form\", _self.form.searchParams);\r\n    this.serviceLocator.httpService.post(_self.api.search, _self.form.searchParams, function (res) {\r\n\r\n      if (res.success) {\r\n        _self.form.list = res.result.list;\r\n        console.log(_self.form.list);\r\n        _self.form.pageNo = res.result.pageNo;\r\n        _self.form.pageSize = res.result.pageSize;\r\n        _self.form.count = res.result.count;\r\n        _self.form.searchParams = res.result.searchParams;\r\n\r\n        if (_self.form.count == 0) {\r\n          console.log(\"gardad------------------------------\")\r\n          _self.form.message = \"No record found\";\r\n          _self.form.error = true;\r\n        }\r\n        //console.log(\"List Size\", _self.form.count,\"Page No\",_self.form.pageNo,\"page Size\",_self.form.pageSize,\"count\",_self.form.count);\r\n      } else {\r\n        _self.form.error = false;\r\n        }\r\n      \r\n      console.log(\"form ----------------------\"+_self.form.message);\r\n    });\r\n  }\r\n\r\n  delete(id) {\r\n    var _self = this;\r\n    this.serviceLocator.httpService.get(_self.api.delete + \"/\" + id, function (res) {\r\n      if (res.success) {\r\n        _self.form.error = false;\r\n        _self.form.message = \"Data is deleted\";\r\n        _self.search();\r\n      } else {\r\n        _self.form.error = true;\r\n        _self.form.message = res.result.message;\r\n      }\r\n    });\r\n  }\r\n\r\n  forward(page) {\r\n    this.serviceLocator.forward(page);\r\n  }\r\n\r\n}\r\n","import { Component } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { BaseListCtl } from \"../base-list.component\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\n\r\n@Component({\r\n    selector:'app-college-list',\r\n    templateUrl:'college-list.component.html',\r\n})\r\nexport class CollegeListComponent extends BaseListCtl{\r\n    constructor(public serviceLocator: ServiceLocatorService,public route:ActivatedRoute) {\r\n        super(serviceLocator.endpointService.COLLEGE,serviceLocator,route);\r\n      \r\n      }\r\n      populateForm(form, searchParams) {\r\n        form.collegeName = searchParams.collegeName;\r\n        form.city = searchParams.city;\r\n        form.state = searchParams.state;    \r\n  }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbGxlZ2UvY29sbGVnZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-college',\n  templateUrl: './college.component.html',\n  styleUrls: ['./college.component.css']\n})\nexport class CollegeComponent extends BaseCtl {\n\n  constructor(public serviceLocator:ServiceLocatorService,public route:ActivatedRoute) {\n    super(serviceLocator.endpointService.COLLEGE,serviceLocator,route );\n  }\n  populateForm(form,data){\n    form.id = data.id;\n    form.name = data.name;\n    form.address = data.address;\n    form.city = data.city;\n    form.state = data.state;\n    form.phoneNo = data.phoneNo;\n  \n  }\n  cancel(){\n    this.forward('/collegelist')\n  }\n  \n}\n","import { Component } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { BaseListCtl } from \"../base-list.component\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\n\r\n\r\n@Component({\r\n    selector:'app-course-list',\r\n    templateUrl:'course-list.component.html',\r\n})\r\nexport class CourseListComponent extends BaseListCtl{\r\n    constructor(public serviceLocator: ServiceLocatorService,public route:ActivatedRoute) {\r\n        super(serviceLocator.endpointService.COURSE,serviceLocator,route);\r\n      \r\n      }\r\n      populateForm(form,searchParams){\r\n       // form.collegeId = searchParams.collegeId;\r\n        form.name = searchParams.name;\r\n        form.courseDescription = searchParams.courseDescription;\r\n        form.courseDuration = searchParams.courseDuration;\r\n        \r\n      }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvdXJzZS9jb3Vyc2UuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-course',\n  templateUrl: './course.component.html',\n  styleUrls: ['./course.component.css']\n})\nexport class CourseComponent extends BaseCtl {\n\n  constructor(public serviceLocator:ServiceLocatorService,public route:ActivatedRoute) {\n    super(serviceLocator.endpointService.COURSE,serviceLocator,route );\n  }\n\n  populateForm(form,data){\n    form.id=data.id\n    form.courseName=data.courseName\n    form.courseDescription=data.courseDescription\n    form.courseDuration=data.courseDuration\n  }\n\n  cancel(){\n    this.forward('/courselist')\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n  \n  constructor() {\n\n   }\n\n  ngOnInit() {\n      \n  }\n\n}\n\n\n\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class EndpointServiceService {\n\n\n  constructor() { }\n\n  public SERVER_URL = \"http://localhost:8080\";\n  public AUTH = this.SERVER_URL + \"/Auth\";\n  public MESSAGE = this.SERVER_URL + \"/Message\";\n  public USER = this.SERVER_URL + \"/User\";\n  public ROLE = this.SERVER_URL + \"/Role\";\n  public COLLEGE = this.SERVER_URL + \"/College\";\n  public MARKSHEET = this.SERVER_URL + \"/Marksheet\";\n  public STUDENT = this.SERVER_URL + \"/Student\";\n  public COURSE = this.SERVER_URL + \"/Course\";\n  public SUBJECT = this.SERVER_URL + \"/Subject\";\n  public TIMETABLE = this.SERVER_URL + \"/Timetable\";\n  public FACULTY = this.SERVER_URL + \"/Faculty\";\n\n\n}","import { Component } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { BaseListCtl } from \"../base-list.component\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\n\r\n@Component({\r\n    selector:'app-faculty-list',\r\n    templateUrl:'faculty-list.component.html',\r\n})\r\nexport class FacultyListComponent extends BaseListCtl{\r\n    constructor(public serviceLocator: ServiceLocatorService,public route:ActivatedRoute) {\r\n        super(serviceLocator.endpointService.FACULTY,serviceLocator,route);\r\n      \r\n      }\r\n      populateForm(form,searchParams){\r\n        form.firstName = searchParams.firstName;\r\n        form.email = searchParams.email;\r\n        form.collegeId = searchParams.collegeId;\r\n        \r\n      }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2ZhY3VsdHkvZmFjdWx0eS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-faculty',\n  templateUrl: './faculty.component.html',\n  styleUrls: ['./faculty.component.css']\n})\nexport class FacultyComponent extends BaseCtl {\n\n  constructor(public serviceLocator:ServiceLocatorService,public route:ActivatedRoute) {\n    super(serviceLocator.endpointService.FACULTY,serviceLocator,route );\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.firstName = data.firstName;\n    form.lastName = data.lastName;    \n    form.email = data.email;\n    form.mobileNo = data.mobileNo;\n    form.address = data.address;\n    form.gender = data.gender;\n    form.collegeId = data.collegeId;\n    form.courseId = data.courseId\n    form.subjectId = data.subjectId;\n    form.dob = data.dob;\n     \n    \n  }\n  cancel(){\n    this.forward('/facultylist')\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvb3QvZm9vdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-foot',\n  templateUrl: './foot.component.html',\n  styleUrls: ['./foot.component.css']\n})\nexport class FootComponent  {\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { CookieService } from 'ngx-cookie-service';\nimport { Router } from '@angular/router'\n\n\n@Injectable()\n\nexport class HttpServiceService {\n\n\n  constructor(private router: Router, private httpClient: HttpClient, private cookie: CookieService) {\n\n  }\n  isLogout() {\n    var _self = this\n    let SessionID = localStorage.getItem('firstName');\n    console.log(this.router.url+\"------------------------------------------------\")\n    if ((SessionID == \"\" || SessionID == null) &&\n      (    this.router.url != \"/login\"\n        && this.router.url != \"/Auth\"\n        && this.router.url != \"/login/logout\"\n        && this.router.url != \"/forgotpassword\"\n        && this.router.url != \"/signup\"\n        && !this.router.url.includes(\"/login/\")\n      )) {\n      if (_self.router.url.includes(\"login\")) {\n        var uri = _self.router.url;\n      } else {\n        var uri = '/login' + _self.router.url;\n      }\n      _self.router.navigateByUrl(uri)\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  get(endpoint, callback) {\n    var _self = this;\n    if (this.isLogout()) {\n      return true;\n    }\n    return _self.httpClient.get(endpoint, { withCredentials: true }).subscribe((data) => {\n      console.log(data);\n      callback(data);\n\n    });\n  }\n\n  post(endpoint, bean, callback) {\n    var _self = this\n    if (this.isLogout()) {\n      return true;\n    }\n    return _self.httpClient.post(endpoint, bean, { withCredentials: true }).subscribe((data) => {\n      console.log(data);\n      callback(data);\n\n    }, error => {\n      console.log('ORS Error', error);\n    });\n  }\n\n\n}\n\n","\r\n\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { EndpointServiceService } from \"../endpoint-service.service\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\n\r\n@Component({\r\n    selector:'app-forgot-password',\r\n    templateUrl:'forgot-password.component.html',\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n    constructor(private serviceLocator: ServiceLocatorService, private endpoint: EndpointServiceService ) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  \r\n  public form = {\r\n    error: false,\r\n    message: null,\r\n    data:{},\r\n    inputerror: {},\r\n    \r\n\r\n  };\r\n\r\n  forgot(){\r\n      var _self = this;\r\n      this.serviceLocator.httpService.post(this.endpoint.AUTH+\"/forgotPassword\",this.form.data,function(res){\r\n        if(res.success){\r\n       //   _self.populateForm(this.form.data,res.result.data);\r\n          _self.form.message=res.result;\r\n\r\n        }else{\r\n          _self.form.inputerror=_self.form.inputerror;\r\n          _self.form.message = _self.form.message;\r\n\r\n        }\r\n      })\r\n  }\r\n\r\n  populateForm(form, data) {\r\n    form.login = data.login;\r\n  }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { EndpointServiceService } from '../endpoint-service.service';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  constructor(public route: ActivatedRoute, public endpoint: EndpointServiceService, public serviceLocator: ServiceLocatorService) {\n    var s = \"in\"\n    var _self = this\n    this.serviceLocator.getPathVariable(this.route, function (params) {\n      s = params[\"in\"];\n      console.log(s + \"uri------------\");\n    })\n\n\n    if (s == \"logout\") {\n      _self.form.message = \"Logout Successfull\"\n    } else if (s != undefined) {\n      _self.form.error = true;\n      _self.form.message = \"Session Expired Please Login\";\n\n    }\n  }\n\n  ngOnInit() {\n\n  }\n\n\n  public form = {\n    error: false,\n    message: null,\n    inputerror: {},\n    data: {},\n\n  };\n  signIn() {\n    console.log(\"login\");\n    var _self = this;\n    var uri = \"in\"\n    this.serviceLocator.httpService.post(this.endpoint.AUTH + '/login', this.form.data, function (res) {\n      if (res.success) {\n        localStorage.setItem('firstName', res.result.data.firstName);\n        localStorage.setItem('roleName', res.result.data.roleName)\n        console.log(uri + \"uri\")\n        _self.serviceLocator.getPathVariable(_self.route, function (params) {\n          uri = params[\"in\"];\n          console.log(uri + \"uri------------\");\n        })\n        if (uri == undefined) {\n          console.log(\"1\")\n          _self.serviceLocator.forward('dashboard');\n        } else if (uri == \"logout\") {\n          _self.serviceLocator.forward('dashboard');\n        }\n        else if (uri != undefined) {\n          _self.serviceLocator.forward(uri);\n        }\n\n\n\n      } else {\n        console.log('inelse');\n        _self.populateForm(_self.form.data, res.result.data);\n        _self.form.inputerror = res.result.inputerror;\n        console.log(\"------------------\", res.result.inputerror)\n        _self.form.error = false;\n        if (res.result.message) {\n          _self.form.error = true;\n          _self.form.message = res.result.message\n          \n        } else {\n          _self.form.message = null\n        }\n\n      }\n    })\n  }\n  signUp() {\n    this.serviceLocator.forward('signup')\n  }\n\n\n  populateForm(form, data) {\n    form.login = data.login;\n    form.password = data.password;\n\n  }\n\n}\n","import { formatNumber } from \"@angular/common\";\r\nimport { HttpClient } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute, Router } from \"@angular/router\";\r\nimport { BaseCtl } from \"../base.component\";\r\nimport { EndpointServiceService } from \"../endpoint-service.service\";\r\nimport { HttpServiceService } from \"../http-service.service\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\nimport { LoginComponent } from \"./login.component\";\r\n\r\n@Component({\r\n    selector:'app-user-registration',\r\n    templateUrl:'user-registration.component.html',\r\n})\r\nexport class UserRegistrationComponent extends LoginComponent {\r\n    \r\n    reset() {\r\n        this.form.error= false,\r\n        this.form.message= null,\r\n         this.form.inputerror = {};\r\n         this.form.data = {};\r\n      }\r\n\r\n    constructor(public router: ActivatedRoute, public endpoint: EndpointServiceService, public serviceLocator:ServiceLocatorService) {\r\n        super(router,endpoint, serviceLocator);\r\n      }\r\n    ngOnInit(){\r\n\r\n    }\r\n    \r\n    submit(){\r\n        var _self = this;\r\n\r\n        _self.serviceLocator.httpService.post(this.endpoint.AUTH+\"/register\",this.form.data,function(res){\r\n            if(res.success){\r\n                _self.form.message=\"User Registered Successfully please login\";\r\n            \r\n                _self.populateForm(_self.form.data,res.result.data);\r\n                _self.form.inputerror = res.result.inputerror;\r\n            } else {\r\n                _self.populateForm(_self.form.data,res.result.data);\r\n                _self.form.inputerror= res.result.inputerror;\r\n                console.log(_self.form.inputerror)\r\n            }\r\n        });\r\n\r\n    }\r\n    populateForm(form, data) {\r\n        form.firstName = data.firstName;\r\n        form.lastName = data.lastName;    \r\n        form.login = data.login;\r\n        form.password = data.password;\r\n        form.gender = data.gender;\r\n        form.mobileNo = data.mobileNo;\r\n        form.dob = data.dob;\r\n       \r\n      }\r\n}","import { Component, OnInit } from \"@angular/core\";\r\nimport { EndpointServiceService } from \"../endpoint-service.service\";\r\nimport { HttpServiceService } from \"../http-service.service\";\r\n\r\n@Component({\r\n    selector:'app-get-marksheet',\r\n    templateUrl:'get-marksheet.component.html'\r\n})\r\nexport class GetMarksheetComponent implements OnInit{\r\n    flag: boolean;\r\n    ngOnInit() {\r\n    }\r\n    constructor(private httpService : HttpServiceService,private endpoint : EndpointServiceService){\r\n\r\n    }\r\n    public form={\r\n        error:false,\r\n        message:null,\r\n        data:{},\r\n        searchParams : {},\r\n        inputerror : {}\r\n    }\r\n    submit(){\r\n        var _self = this;\r\n        this.flag = false;\r\n        this.httpService.post(_self.endpoint.MARKSHEET+\"/getMarksheet\",this.form,function(res){\r\n            if(res.success){\r\n                _self.flag = true;\r\n                _self.form.data = res.result;\r\n            }else {\r\n                _self.flag = false;\r\n                _self.form.error=true;\r\n                _self.form.inputerror = res.inputerror\r\n                \r\n            }\r\n\r\n        })\r\n    }\r\n    populateForm(form,data){\r\n        \r\n    }\r\n    reset(){\r\n        this.form.data = {}\r\n        this.flag = false;\r\n        this.form.error=false;\r\n        this.form.message=null;\r\n        \r\n    }\r\n    \r\n}","import { Component } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { BaseListCtl } from \"../base-list.component\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\n\r\n@Component({\r\n    selector:'app-marksheet-list',\r\n    templateUrl:'marksheet-list.component.html',\r\n})\r\nexport class MarksheetListComponent extends BaseListCtl{\r\n    constructor(public serviceLocator: ServiceLocatorService,public route:ActivatedRoute) {\r\n        super(serviceLocator.endpointService.MARKSHEET,serviceLocator,route);\r\n\r\n      }\r\n      \r\n      populateForm(form,searchParams){\r\n        form.firstName = searchParams.firstName;\r\n       form.rollNo = searchParams.rollNo;\r\n        \r\n      }\r\n      result(physics,maths,chemistry){\r\n        if((physics+maths+chemistry)/3>=35.0 && physics >=35 && maths >=35 && chemistry >=35 ){\r\n          return true;\r\n        } else {\r\n          return false;\r\n        }\r\n      }\r\n      percentage(physics,maths,chemistry){\r\n        var per = 0.00;\r\n        per = (physics+maths+chemistry)/3\r\n\r\n      }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21hcmtzaGVldC9tYXJrc2hlZXQuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-marksheet',\n  templateUrl: './marksheet.component.html',\n  styleUrls: ['./marksheet.component.css']\n})\nexport class MarksheetComponent extends BaseCtl {\n\n  constructor(public serviceLocator:ServiceLocatorService,public route:ActivatedRoute) {\n    super(serviceLocator.endpointService.MARKSHEET,serviceLocator,route );\n  }\n  cancel(){\n    this.forward('/marksheetlist')\n  }\n\n  populateForm(form,data){\n    form.id= data.id\n    form.rollNo = data.rollNo\n    form.studentId=data.studentId\n    form.physics=data.physics\n    form.chemistry=data.chemistry\n    form.maths=data.maths\n  }\n\n}\n","import { Component, OnInit } from \"@angular/core\";\r\nimport { EndpointServiceService } from \"../endpoint-service.service\";\r\nimport { HttpServiceService } from \"../http-service.service\";\r\n\r\n@Component({\r\n    selector: 'app-merit-list',\r\n    templateUrl: 'merit-list.component.html',\r\n})\r\nexport class MeritListComponent implements OnInit {\r\n\r\n    constructor(private httpService: HttpServiceService, private endpoint: EndpointServiceService) {\r\n\r\n    }\r\n\r\n    public form = {\r\n        list: [],\r\n        error: false,\r\n        pageNo: 0,\r\n        pageSize: 0,\r\n        count: 0\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.meritList();\r\n    }\r\n    result(physics, maths, chemistry) {\r\n        if ((physics + maths + chemistry) / 3 >= 35.0 && physics >= 35 && maths >= 35 && chemistry >= 35) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n    meritList() {\r\n        var _self = this;\r\n        _self.httpService.get(_self.endpoint.MARKSHEET + \"/meritList\", function (res) {\r\n            if (res.success) {\r\n                _self.form.error = false;\r\n                _self.form.list = res.result.list;\r\n                _self.form.pageNo = res.result.pageNo;\r\n                _self.form.pageSize = res.result.pageSize;\r\n                _self.form.count = res.result.count;\r\n            }\r\n            else {\r\n                _self.form.error = true\r\n            }\r\n        })\r\n    }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL25hdi9uYXYuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { TranslateService } from '@ngx-translate/core';\n//import { CookieService } from 'ngx-cookie-service';\nimport { EndpointServiceService } from '../endpoint-service.service';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-nav',\n  templateUrl: './nav.component.html',\n  styleUrls: ['./nav.component.css']\n})\nexport class NavComponent implements OnInit {\n  firstName = '';\n  roleName = '';\n  menu = {}\n  constructor(private translate: TranslateService, private serviceLocator: ServiceLocatorService, private endpoint: EndpointServiceService) {\n    this.changeLocale(\"en\");\n    translate.setDefaultLang(localStorage.getItem(\"locale\"));\n  }\n\n  changeLocale(locale: string) {\n    localStorage.setItem(\"locale\", locale);\n    this.translate.use(localStorage.getItem(\"locale\"));\n\n    this.ngOnInit();\n  }\n\n  ngOnInit() {\n\n\n  }\n  checkLogin() {\n    var _self = this;\n    var session = ''\n    session = localStorage.getItem('firstName');\n    if (session != null) {\n      this.firstName = localStorage.getItem('firstName');\n      this.roleName = localStorage.getItem('roleName');\n      return true;\n    }\n    return false;\n  }\n  logout() {\n    var _self = this\n    this.serviceLocator.httpService.get(this.endpoint.AUTH + \"/logout\", function (res) {\n      if (res.success) {\n        localStorage.removeItem('firstName');\n        localStorage.removeItem('roleName');\n        \n        _self.serviceLocator.forward('login/logout');\n\n      } else {\n        console.log('inelse');\n      }\n    })\n    //_self.cookie.delete('connect.sid');\n  }\n\n}\n","import { Component } from \"@angular/core\";\nimport { ServiceLocatorService } from \"../service-locator.service\";\n\n\n@Component({\n    selector:'app-page-not-found',\n    templateUrl:'page-not-found.component.html',\n})\nexport class PageNotFoundComponent extends ServiceLocatorService {\n    \n}","import { Component } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { BaseListCtl } from \"../base-list.component\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\n\r\n@Component({\r\n    selector:'app-role-list',\r\n    templateUrl:'role-list.component.html',\r\n})\r\nexport class RoleListComponent extends BaseListCtl {\r\n    constructor(public serviceLocator: ServiceLocatorService,public route:ActivatedRoute) {\r\n        super(serviceLocator.endpointService.ROLE,serviceLocator,route);\r\n      \r\n      }\r\n      populateForm(form, searchParams){\r\n        \r\n        form.name = searchParams.name;\r\n        form.description = searchParams.description;\r\n      }\r\n\r\n     /* select(){\r\n         this.flag = true;\r\n      }*/\r\n      \r\n\t\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3JvbGUvcm9sZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-role',\n  templateUrl: './role.component.html',\n  styleUrls: ['./role.component.css']\n})\nexport class RoleComponent extends BaseCtl {\n\n  constructor(public serviceLocator:ServiceLocatorService,public route:ActivatedRoute) {\n    super(serviceLocator.endpointService.ROLE,serviceLocator,route );\n  }\n\n  populateForm(form,data){\n    form.id = data.id;\n    form.name = data.name;\n    form.description = data.description;\n    \n  }\n  cancel(){\n    this.forward('/rolelist')\n  }\n  \n}\n\n","import { Injectable } from '@angular/core';\nimport { Router,ActivatedRoute } from '@angular/router';\nimport { EndpointServiceService } from './endpoint-service.service';\nimport { HttpServiceService } from './http-service.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ServiceLocatorService {\n  httpService = null;\n  endpointService = null;\n  router = null;\n  constructor(private hs : HttpServiceService,private ep : EndpointServiceService,private r: Router) {\n      this.httpService = hs;\n      this.endpointService = ep;\n      this.router = r;\n   }\n\n   getPathVariable(route: ActivatedRoute, callback) {\n    route.params.subscribe(params => {\n      callback(params)\n    });\n  }\n\n\n  forward(page){\n    this.router.navigateByUrl(page);\n  }\n}\n","import { Component,OnInit } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { BaseListCtl } from \"../base-list.component\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\n\r\n@Component({\r\n    selector:'app-student-list',\r\n    templateUrl:'student-list.component.html',\r\n})\r\nexport class StudentListComponent extends BaseListCtl{\r\n    constructor(public serviceLocator: ServiceLocatorService,public route:ActivatedRoute) {\r\n        super(serviceLocator.endpointService.STUDENT,serviceLocator,route);\r\n      \r\n      }\r\n      populateForm(form,searchParams){\r\n          form.firstName = searchParams.firstName;\r\n          form.email =searchParams.email;\r\n          form.collegeId = searchParams.collegeId;\r\n      }\r\n     \r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N0dWRlbnQvc3R1ZGVudC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-student',\n  templateUrl: './student.component.html',\n  styleUrls: ['./student.component.css']\n})\nexport class StudentComponent extends BaseCtl {\n\n  constructor(public serviceLocator: ServiceLocatorService, public route: ActivatedRoute) {\n    super(serviceLocator.endpointService.STUDENT, serviceLocator, route);\n  }\n  populateForm(form,data){\n    form.id = data.id;\n    form.firstName = data.firstName;\n    form.lastName = data.lastName;  \n    form.collegeId = data.collegeId;\n    form.email = data.email;\n    form.mobileNo = data.mobileNo;\n    form.dob = data.dob;\n  }\n  cancel(){\n    this.forward('/student')\n  }\n}\n","import { Component } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { BaseListCtl } from \"../base-list.component\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\n\r\n@Component({\r\n    selector:'app-subject-list',\r\n    templateUrl:\"subject-list.component.html\",\r\n})\r\nexport class SubjectListComponent extends BaseListCtl{\r\n    \r\n    constructor(public serviceLocator: ServiceLocatorService,public route:ActivatedRoute) {\r\n        super(serviceLocator.endpointService.SUBJECT,serviceLocator,route);\r\n      }\r\n      populateForm(form,searchParams){\r\n        form.subjectName = searchParams.subjectName;\r\n        form.courseId = searchParams.courseId;\r\n        form.courseName = searchParams.courseName;\r\n      }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3N1YmplY3Qvc3ViamVjdC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-subject',\n  templateUrl: './subject.component.html',\n  styleUrls: ['./subject.component.css']\n})\nexport class SubjectComponent extends BaseCtl {\n\n  constructor(public serviceLocator:ServiceLocatorService,public route:ActivatedRoute) {\n    super(serviceLocator.endpointService.SUBJECT,serviceLocator,route );\n  }\n  cancel(){\n    this.forward('/subjectlist')\n  }\n\n    populateForm(form,data){\n      form.id=data.id\n      form.courseId = data.courseId;\n      form.courseName = data.courseName;\n      form.subjectName = data.subjectName;\n      form.subjectDescription = data.subjectDescription;\n      \n\n    }\n\n}\n","import { Component } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { BaseListCtl } from \"../base-list.component\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\n\r\n@Component({\r\n    selector:'app-timetable-list',\r\n    templateUrl:'timetable-list.component.html',\r\n})\r\nexport class TimetableListComponent extends BaseListCtl{\r\n    constructor(public serviceLocator: ServiceLocatorService,public route:ActivatedRoute) {\r\n        super(serviceLocator.endpointService.TIMETABLE,serviceLocator,route);\r\n      \r\n      }\r\n      populateForm(form,searchParams){\r\n        \r\n        form.collegeId = searchParams.collegeId;\r\n        \r\n      }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3RpbWV0YWJsZS90aW1ldGFibGUuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { BaseCtl } from '../base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\n\n@Component({\n  selector: 'app-timetable',\n  templateUrl: './timetable.component.html',\n  styleUrls: ['./timetable.component.css']\n})\nexport class TimetableComponent extends BaseCtl {\n\n  constructor(public serviceLocator:ServiceLocatorService,public route:ActivatedRoute) {\n    super(serviceLocator.endpointService.TIMETABLE,serviceLocator,route );\n  }\n\n  populateForm(form,data){\n    form.id =data.id;\n    form.courseId = data.courseId;\n    form.subjectId = data.subjectId;\n    form.semester = data.semester;\n    form.examDate = data.examDate;\n    form.examTime = data.examTime;\n  }\n\n  cancel(){\n    this.forward('/timetablelist')\n  }\n  \n}\n","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component } from \"@angular/core\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { BaseCtl } from \"../base.component\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\n\r\n@Component({\r\n    selector:'app-change-password',\r\n    templateUrl:'change-password.component.html',\r\n})\r\nexport class ChangePasswordComponent extends BaseCtl {\r\n    \r\n    constructor(public serviceLocator: ServiceLocatorService, public route: ActivatedRoute,public httpClient: HttpClient) {\r\n        super(serviceLocator.endpointService.AUTH, serviceLocator, route);\r\n      }\r\n    \r\n    submit(){\r\n        var _self = this;\r\n        this.serviceLocator.httpService.post(this.serviceLocator.endpointService.AUTH+\"/changePassword\",this.form.data,function(res){\r\n            if(res.success){\r\n                _self.form.error= false;\r\n                _self.form.message = \"Password Changed successfully\";\r\n                \r\n            }else {\r\n                _self.form.error = true;\r\n                _self.form.message = \"Error\";\r\n            }\r\n        })\r\n    }\r\n    populateForm(form,data){\r\n        form.oldPassword = data.oldPassword\r\n        form.password = data.password;\r\n        form.confirmPassword = form.confirmPassword;\r\n    }\r\n}","import { HttpClient } from \"@angular/common/http\";\r\nimport { Component, OnInit } from \"@angular/core\";\r\nimport { FormGroup } from \"@angular/forms\";\r\nimport { ActivatedRoute } from \"@angular/router\";\r\nimport { BaseCtl } from \"../base.component\";\r\nimport { ServiceLocatorService } from \"../service-locator.service\";\r\nimport { UserComponent } from \"./user.component\";\r\n\r\n@Component({\r\n    selector:'app-my-profile',\r\n    templateUrl:'my-profile.component.html',\r\n})\r\nexport class MyProfileComponent extends BaseCtl {\r\n  uploadId = 0;\r\n  getKey = false;\r\n  selected = null;\r\n  fileToUpload: File = null;\r\n  userForm : FormGroup = null;\r\n  uploadForm: FormGroup; \r\n  constructor(public serviceLocator: ServiceLocatorService, public route: ActivatedRoute,public httpClient: HttpClient) {\r\n    super(serviceLocator.endpointService.USER, serviceLocator, route);\r\n  }\r\n      ngOnInit(){\r\n        var _self = this;\r\n\r\n        this.serviceLocator.httpService.get(_self.api.endpoint+\"/myProfile\",function(res){\r\n          if(res.success){\r\n            _self.populateForm(_self.form.data,res.result);\r\n\r\n          }else {\r\n            _self.form.error = true;\r\n            _self.form.message = \"error\"\r\n            _self.form.inputerror = res.result.inputerror;\r\n\r\n          }\r\n        })\r\n      }\r\n      \r\n      populateForm(form, data) {\r\n        form.id = data.id;\r\n        form.firstName = data.firstName;\r\n        form.lastName = data.lastName;    \r\n        form.login = data.login;\r\n        form.password = data.password;\r\n        form.gender = data.gender;\r\n        form.mobileNo = data.mobileNo;\r\n        form.dob = data.dob;\r\n        form.status = data.status;\r\n        form.roleId = data.roleId;\r\n        form.picName =data.picName\r\n      }\r\n      myFile(){\r\n         this.onSubmitProfile(this.fileToUpload, this.userForm).subscribe(data => {\r\n           console.log(this.fileToUpload);\r\n           }, error => {\r\n             console.log(error);\r\n           });\r\n     \r\n         }\r\n         onSubmitProfile(fileToUpload: File, userform : FormGroup) {\r\n          const formData = new FormData();\r\n          \r\n        var _self= this;\r\n          formData.append('pic', fileToUpload);\r\n          return this.httpClient.post(this.endpoint.USER+\"/profilePic/\"+this.uploadId, formData,{withCredentials:true});\r\n      }\r\n      onFileSelect(files: FileList) {\r\n        this.fileToUpload = files.item(0);\r\n        console.log(this.fileToUpload);\r\n    \r\n      }\r\n    \r\n      onUpload(userform : FormData) {\r\n       this.submit();\r\n     \r\n      }\r\n}","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute } from '@angular/router';\r\nimport { BaseListCtl } from '../base-list.component';\r\nimport { ServiceLocatorService } from '../service-locator.service';\r\n\r\n@Component({\r\n  selector: 'app-user-list',\r\n  templateUrl: './user-list.component.html',\r\n})\r\nexport class UserListComponent extends BaseListCtl {\r\n\r\n  constructor(public serviceLocator: ServiceLocatorService,public route:ActivatedRoute) {\r\n    super(serviceLocator.endpointService.USER,serviceLocator,route);\r\n  }\r\n\r\n  populateForm(form,searchParams){\r\n    form.firstName = searchParams.firstName;\r\n   // form.lastName = searchParams.lastName;\r\n    form.login = searchParams.login;\r\n    //form.status = searchParams.status;\r\n    form.roleId = searchParams.roleId;\r\n  }\r\n  search(){\r\n    this.form.data.pageSize=5;\r\n    super.search();\r\n  }\r\n\r\n\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXNlci5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\nimport { BaseCtl } from 'src/app/base.component';\nimport { ServiceLocatorService } from '../service-locator.service';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormsModule } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\n@Component({\n  selector: 'app-user',\n  templateUrl: './user.component.html',\n  styleUrls: ['./user.component.css']\n})\nexport class UserComponent extends BaseCtl {\n  uploadId = 0;\n  getKey = false;\n  selected = null;\n  fileToUpload: File = null;\n  userForm: FormGroup = null;\n  uploadForm: FormGroup;\n  constructor(public serviceLocator: ServiceLocatorService, public route: ActivatedRoute, public httpClient: HttpClient) {\n    super(serviceLocator.endpointService.USER, serviceLocator, route);\n  }\n\n  populateForm(form, data) {\n    form.id = data.id;\n    form.firstName = data.firstName;\n    form.lastName = data.lastName;\n    form.login = data.login;\n    form.password = data.password;\n    form.gender = data.gender;\n    form.mobileNo = data.mobileNo;\n    form.dob = data.dob;\n    form.status = data.status;\n    form.roleId = data.roleId;\n  }\n\n  submit() {\n    var _self = this;\n\n    this.serviceLocator.httpService.post(this.api.save, this.form.data, function (res) {\n      _self.form.message = null;\n      _self.form.inputerror = {};\n\n      if (res.success) {\n\n        _self.uploadId = res.result;\n        if (_self.fileToUpload!=null) {\n          _self.myFile();\n        }\n        _self.form.error = false;\n\n        _self.form.message = \"Data is saved\";\n        //_self.forward('/user/'+res.result)\n      } else {\n        _self.form.error = true;\n        _self.form.inputerror = res.result.inputerror;\n        _self.form.message = res.result.message;\n\n      }\n      //console.log('FORM', _self.form);\n    });\n  }\n  myFile() {\n    console.log(this.form.data.id + 'after super.submit-----');\n    this.onSubmitProfile(this.fileToUpload, this.userForm).subscribe(data => {\n      console.log(this.fileToUpload);\n    }, error => {\n      console.log(error);\n    });\n\n  }\n  onSubmitProfile(fileToUpload: File, userform: FormGroup) {\n    const formData = new FormData();\n\n    var _self = this;\n    formData.append('pic', fileToUpload);\n    console.log(this.uploadId + 'this id number ======');\n    return this.httpClient.post(\"http://localhost:8080/User/profilePic/\" + this.uploadId, formData, { withCredentials: true });\n  }\n  onFileSelect(files: FileList) {\n    this.fileToUpload = files.item(0);\n    console.log(this.fileToUpload);\n\n  }\n\n  onUpload(userform: FormData) {\n    this.submit();\n    console.log(this.form.data.id + '---- after submit');\n\n  }\n  cancel() {\n    this.forward('/userlist')\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3dlbGNvbWUvd2VsY29tZS5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-welcome',\n  templateUrl: './welcome.component.html',\n  styleUrls: ['./welcome.component.css']\n})\nexport class WelcomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///","file":"main-es5.js"}